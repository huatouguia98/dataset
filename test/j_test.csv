commit_m,add_diff,delet_diff,edit_diff,refactor_type
Allow command line to override base path,private static void unpackLwjgl(String path) {,private static void unpackLwjgl() {,KEEP KEEP KEEP ADD REP KEEP,Add Parameter
Revert "remove available filter on search panel",private List<AvailableFilterType> getSavedFilterList() {,private List<AvailableFilterWrapper> getSavedFilterList() {,KEEP REP KEEP KEEP,Change Return Type
rewriten IntersectFastPath to use VectorDataLibrary,"@CachedLibrary(value = ""x.getData()"") VectorDataLibrary xLib, @CachedLibrary(value = ""y.getData()"") VectorDataLibrary yLib, @Cached(""createBinaryProfile()"") ConditionProfile isXSortedProfile, @Cached(""createBinaryProfile()"") ConditionProfile isYSortedProfile, @Cached(""create(false)"") IntersectSortedNode intersectSortedNode) { Object xData = x.getData(); Object yData = y.getData(); int xLength = xLib.getLength(xData); int yLength = yLib.getLength(yData); RandomAccessIterator xrit = xLib.randomAccessIterator(xData); RandomAccessIterator yrit = yLib.randomAccessIterator(yData);","@Specialization(limit = ""1"", guards = {""x.getClass() == cached.xClass"", ""y.getClass() == cached.yClass"", ""length(x, cached.xClass) > 0"", ""length(y, cached.yClass) > 0"", ""getLimit1Guard()""})",REP KEEP ADD ADD REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP REP REP REP REP REP REP REP REP,Add Parameter
LOB objects refactoring (use executionContext instead of dataSource),"public OracleContentBFILE(DBCExecutionContext executionContext, Object bfile) { super(executionContext);","public OracleContentBFILE(DBPDataSource dataSource, Object bfile) { super(dataSource);",KEEP REP REP KEEP KEEP KEEP REP,Rename Parameter
"heavy refactoring of ArgumentMatcher, removing many abstraction layers","private static MatchPermutation permuteArguments(RFunction function, String[] suppliedNames, FormalArguments formals, SourceSection callSrc, SourceSection argsSrc, boolean forNextMethod, IntPredicate isVarSuppliedVarargs, IntFunction<String> errorString) {","private static <T> T[] permuteArguments(RFunction function, T[] suppliedArgs, String[] suppliedNames, FormalArguments formals, VarArgsFactory<T> listFactory, ArrayFactory<T> arrFactory, SourceSection callSrc, SourceSection argsSrc, boolean forNextMethod) { String[] formalNames = formals.getNames();",KEEP KEEP REP DEL KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP REP REP REP REP REP REP,Change Return Type
Added OK and Cancel buttons to Picker on platforms that don't have a native picker.,"private boolean showDialog(Dialog pickerDlg, Component c) {","private void showDialog(Dialog pickerDlg, Component c) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Adding weight in AnomalyMergedResult (#396),"AnomalyFunctionDAO anomalyFunctionDAO, AnomalyResultDAO anomalyResultDAO,ScheduledExecutorService executorService) {",AnomalyMergeConfig mergeConfig) {,ADD ADD ADD REP REP KEEP,Rename Parameter
Take the density into account when computing the aspect ratio,"public void setSurfaceSize(int width, int height, int sar_num, int sar_den) {","public void setSurfaceSize(int width, int height) {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
Deprecated methods with media argument and added replacement methods with BrowserInfo argument.,"public static void transform (Document xmlDoc, URL sslUri, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, BrowserInfo browserInfo) throws SAXException, IOException, ResourceMissingException, GeneralRenderingException { XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc); XSLTResultTarget xmlResult = new XSLTResultTarget(out); StylesheetSet set = new StylesheetSet(sslUri.toExternalForm()); set.setMediaProps(mediaProps); XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison()); StylesheetRoot stylesheetRoot = getStylesheetRoot(set.getStylesheetURI(stylesheetTitle, browserInfo)); processor.reset(); setStylesheetParams(processor, stylesheetParams); stylesheetRoot.process(processor, xmlSource, xmlResult); }","public static void transform (Document xmlDoc, StylesheetSet stylesheetSet, DocumentHandler out, Hashtable stylesheetParams, String stylesheetTitle, String media) throws SAXException, IOException, ResourceMissingException, GeneralRenderingException { XSLTInputSource xmlSource = new XSLTInputSource(xmlDoc); XSLTResultTarget xmlResult = new XSLTResultTarget(out); XSLTProcessor processor = XSLTProcessorFactory.getProcessor(new org.apache.xalan.xpath.xdom.XercesLiaison()); processor.reset(); StylesheetRoot stylesheetRoot = getStylesheetRoot(stylesheetSet.getStylesheetURI(stylesheetTitle, media)); setStylesheetParams(processor, stylesheetParams); stylesheetRoot.process(processor, xmlSource, xmlResult); }",KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP DEL KEEP KEEP KEEP ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Add conditional configuration tests,public ConfigurationSet copyAndMerge(ConfigurationSet other) {,public ConfigurationSet merge(ConfigurationSet other) {,KEEP KEEP REP KEEP KEEP,Rename Method
FISH-5639 Changed method type,"protected void getAdditionalTrustandKeyStores() throws IOException, XMLStreamException {","protected HashMap<String, String> getAdditionalTrustandKeyStores() throws IOException, XMLStreamException {",KEEP REP DEL KEEP KEEP KEEP KEEP KEEP,Change Return Type
use enum for different caching scopes on WebResponse,"public static void enableCaching(WebResponse response, Duration duration, WebResponse.CacheScope scope)","public static void enableCaching(WebResponse response, Duration duration, boolean cachePublic)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
updates to FindBugs properties/preferences page,"private void createFilterTable(Composite parent, final FilterKind kind) {","private void createFilterTable(Composite parent, final boolean includeFilter) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Incorporate review feedback,"private void setNetworkForAllMembers(OSMRelation relation, String key) { relation.getMembers().forEach(member -> { var isOsmWay = ""way"".equals(member.getType()); var way = waysById.get(member.getRef()); if (way != null && isOsmWay && !way.hasTag(key)) { way.addTag(key, ""yes"");","private void setNetworkForAllMembers(OSMRelation relation, String lcn) { for (OSMRelationMember member : relation.getMembers()) { if (!(""way"".equals(member.getType()) && waysById.containsKey(member.getRef()))) { continue;",KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD REP REP REP REP REP REP KEEP ADD ADD REP KEEP ADD ADD REP KEEP ADD REP,Rename Parameter
make sql injection detector a little smarter,"private StringAppendState updateStringAppendState(InstructionHandle handle, ConstantPoolGen cpg, StringAppendState stringAppendState) { Instruction ins = handle.getInstruction(); if (!isConstantStringLoad(ins, cpg)) { throw new IllegalArgumentException(""instruction must be LDC""); } LDC load = (LDC) ins; Object value = load.getValue(cpg); String stringValue = ((String) value).trim(); if (stringValue.startsWith("","") || stringValue.endsWith("","")) stringAppendState.setSawComma(handle); if (stringValue.endsWith(""'"")) stringAppendState.setSawOpenQuote(handle); if (stringValue.startsWith(""'"")) stringAppendState.setSawCloseQuote(handle); return stringAppendState; } private boolean isPreparedStatementDatabaseSink(Instruction ins, ConstantPoolGen cpg) { if (!(ins instanceof INVOKEINTERFACE)) { return false; } INVOKEINTERFACE invoke = (INVOKEINTERFACE) ins; String methodName = invoke.getMethodName(cpg); String interfaceName = invoke.getClassName(cpg); if (methodName.equals(""prepareStatement"") && interfaceName.equals(""java.sql.Connection"")) { return true; } return false; } private boolean isExecuteDatabaseSink(Instruction ins, ConstantPoolGen cpg) { if (!(ins instanceof INVOKEINTERFACE)) { return false; } INVOKEINTERFACE invoke = (INVOKEINTERFACE) ins; String methodName = invoke.getMethodName(cpg); String interfaceName = invoke.getClassName(cpg); if (methodName.startsWith(""execute"") && interfaceName.equals(""java.sql.Statement"")) { return true; } return false; } private boolean isDatabaseSink(Instruction ins, ConstantPoolGen cpg) { return isPreparedStatementDatabaseSink(ins, cpg) || isExecuteDatabaseSink(ins, cpg); } private StringAppendState getStringAppendState(CFG cfg, ConstantPoolGen cpg) { StringAppendState stringAppendState = new StringAppendState(); for (Iterator<Location> i = cfg.locationIterator(); i.hasNext();) { Location location = i.next(); InstructionHandle handle = location.getHandle(); Instruction ins = handle.getInstruction(); if (isConstantStringLoad(ins, cpg)) { stringAppendState = updateStringAppendState(handle, cpg, stringAppendState); } else if (isStringAppend(ins, cpg)) { stringAppendState.setSawAppend(handle); InstructionHandle prev = getPreviousInstruction(cfg, location, true); if (prev != null) { Instruction prevIns = prev.getInstruction(); if (!isSafeValue(prevIns, cpg)) stringAppendState.setSawUnsafeAppend(handle); } else { AnalysisContext.logError(""In FindSqlInjection, saw null previous in "" + cfg.getMethodGen().getClassName() + ""."" + cfg.getMethodName()); stringAppendState.setSawUnsafeAppend(handle); } } } return stringAppendState; }","private StringAppendState updateStringAppendState(Instruction ins, ConstantPoolGen cpg, StringAppendState stringAppendState) { if (!isConstantStringLoad(ins, cpg)) { throw new IllegalArgumentException(""instruction must be LDC""); } LDC load = (LDC) ins; Object value = load.getValue(cpg); String stringValue = ((String)value).trim(); if (stringValue.startsWith("","") || stringValue.endsWith("","")) stringAppendState.setSawComma(true); if (stringValue.endsWith(""'"")) stringAppendState.setSawOpenQuote(true); if (stringValue.startsWith(""'"")) stringAppendState.setSawCloseQuote(true); return stringAppendState; } private boolean isPreparedStatementDatabaseSink(Instruction ins, ConstantPoolGen cpg) { if (!(ins instanceof INVOKEINTERFACE)) { return false; } INVOKEINTERFACE invoke = (INVOKEINTERFACE) ins; String methodName = invoke.getMethodName(cpg); String interfaceName = invoke.getClassName(cpg); if (methodName.equals(""prepareStatement"") && interfaceName.equals(""java.sql.Connection"")) { return true; } return false; } private boolean isExecuteDatabaseSink(Instruction ins, ConstantPoolGen cpg) { if (!(ins instanceof INVOKEINTERFACE)) { return false; } INVOKEINTERFACE invoke = (INVOKEINTERFACE) ins; String methodName = invoke.getMethodName(cpg); String interfaceName = invoke.getClassName(cpg); if (methodName.startsWith(""execute"") && interfaceName.equals(""java.sql.Statement"")) { return true; } return false; } private boolean isDatabaseSink(Instruction ins, ConstantPoolGen cpg) { return isPreparedStatementDatabaseSink(ins, cpg) || isExecuteDatabaseSink(ins, cpg); } private StringAppendState getStringAppendState(CFG cfg, ConstantPoolGen cpg) { StringAppendState stringAppendState = new StringAppendState(); for (Iterator<Location> i = cfg.locationIterator(); i.hasNext();) { Location location = i.next(); Instruction ins = location.getHandle().getInstruction(); if (isConstantStringLoad(ins, cpg)) { stringAppendState = updateStringAppendState(ins, cpg, stringAppendState); } else if (isStringAppend(ins, cpg)) { stringAppendState.setSawAppend(true); InstructionHandle prev = getPreviousInstruction(cfg, location, true); if (prev != null) { Instruction prevIns = prev.getInstruction(); if (!isSafeValue(prevIns, cpg)) stringAppendState.setSawUnsafeAppend(true); } else { AnalysisContext.logError(""In FindSqlInjection, saw null previous in "" + cfg.getMethodGen().getClassName() +""."" + cfg.getMethodName()); stringAppendState.setSawUnsafeAppend(true); } } } return stringAppendState; }ename Parameter
Use proper strings for different "share" options,private void doShareContacts() {,private void doShareVisibleContacts() {,KEEP KEEP REP KEEP,Rename Method
priority tweaking,"private void checkForSelfOperation(int opCode, String op) {",private void checkForSelfOperation(String op) {,KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Fix possible crash(es) when saving images from Gallery or Feed.,public ImagePipelineBitmapGetter(String imageUrl) {,"public ImagePipelineBitmapGetter(Context context, String imageUrl) { this.context = context;",KEEP REP DEL DEL KEEP KEEP DEL DEL DEL,Remove Parameter
YARN-1181. Augment MiniYARNCluster to support HA mode (kasha),"public MiniYARNCluster(String testName, int numNodeManagers, int numLocalDirs, int numLogDirs) { this(testName, 1, numNodeManagers, numLocalDirs, numLogDirs); } @Override","public MiniYARNCluster(String testName, int noOfNodeManagers, int numLocalDirs, int numLogDirs) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Get android.graphics.drawable and android.content.res.Resources out of PackageResourceLoader.,public DrawableBuilder(ResourceExtractor resourceExtractor) {,"public DrawableBuilder(ResBundle<DrawableNode> drawableNodes, ResourceExtractor resourceExtractor) {",KEEP REP DEL DEL KEEP KEEP,Remove Parameter
2012.12.28 (1.47i3),"protected String[] makeRow(String command, CommandAction ca) { String[] result = new String[tableModel.getColumnCount()]; result[0] = command; if (ca.menuLocation != null) result[1] = ca.menuLocation; if (ca.classCommand != null) result[2] = ca.classCommand; String jarFile = Menus.getJarFileForMenuEntry(command); if (jarFile != null) result[3] = jarFile; return result;","protected String makeListLabel(String command, CommandAction ca, boolean fullInfo) { if (fullInfo) { String result = command; if( ca.menuLocation != null) result += "" (in "" + ca.menuLocation + "")""; if( ca.classCommand != null ) result += "" ["" + ca.classCommand + ""]""; String jarFile = Menus.getJarFileForMenuEntry(command); if( jarFile != null ) result += "" {from "" + jarFile + ""}""; return result; } else { return command; }",KEEP REP REP KEEP KEEP REP REP REP REP REP REP REP REP DEL KEEP KEEP REP REP KEEP KEEP REP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP REP REP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL KEEP KEEP DEL DEL DEL DEL DEL DEL,Change Return Type
CATROID-19 Enable undo of single brick deletion,private ScriptFragment getScriptFragment(View view) {,"private void showUndo(View view, boolean visible) {",KEEP REP REP REP DEL DEL KEEP,Change Return Type
InvocationBuilder: Rename some methods,"String selector, JCExpression actualPrimExpr, List<JCExpression> argExprs) {","protected JCExpression transformInvocation(JCExpression primaryExpr, String selector) { JCExpression actualPrimExpr = transformInvocationPrimary(primaryExpr, selector);",DEL DEL DEL DEL KEEP REP DEL KEEP REP REP REP REP,Add Parameter
Add optional output variable name to Jexl function,"public synchronized String execute(SampleResult previousResult, Sampler currentSampler)","public synchronized String execute(SampleResult result, Sampler sampler)",KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Remove reuseInternalNode flag configuration,public void overrideStatelessConfigs(boolean isLayoutCachingEnabled) {,"boolean internalNodeReuseEnabled, boolean isLayoutCachingEnabled) {",REP REP REP KEEP KEEP,Remove Parameter
enforce assignSourceSection only on RSyntaxNodes,"public static RNode createInlined(RNode expression, Object defaultValue, boolean unwrap) {","public static RNode createInlined(SourceSection src, RNode expression, Object defaultValue, boolean unwrap) {",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
UP-4143 Fixed batch paging error,"private void purgeEventList(int batchSize, DateTime lastAggregatedEventDate) {","private void purgeEventList(int begin, int end, DateTime lastAggregatedEventDate) {",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Rename Parameter
search for texts with zero-width spaces,"public static Result find(char[] text, int offset, int length, final ZLSearchPattern pattern) {","public static int find(char[] text, int offset, int length, final ZLSearchPattern pattern) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
changes to rewriter to include side condition,"public List<Tuple2<? extends Map<? extends KVariable, ? extends K>, ? extends K>> match(K k, org.kframework.definition.Rule rule) {","public List<? extends Map<? extends KVariable,? extends K>> match(K k, org.kframework.definition.Rule rule) {",KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Do not error logs when Compute service is not yet enabled for VPC testing,public static Optional<Boolean> isCloudVpc() { if (Topology.isEnabled(Compute.class)) { return Optional.of(cloudVpcTest.get()); } else { return Optional.empty(); },public static boolean isCloudVpc() { return cloudVpcTest.get();,KEEP KEEP REP KEEP KEEP ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD REP,Change Return Type
Made the tools that access repositories support the new `--cacherep` option,"private static void printUsage(int statusCode, String systemRepo, String cacheRepo, List<String> userRepos, String outputRepo) { List<String> defaultRepositories = addDefaultRepositories(systemRepo, cacheRepo, userRepos, null);","private static void printUsage(int statusCode, String systemRepo, List<String> userRepos, String outputRepo) { List<String> defaultRepositories = addDefaultRepositories(systemRepo, userRepos, null);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP,Add Parameter
Filter improvements,"private void filter(FacesContext context, DataTable table, List<FilterMeta> filterMetadata, String globalFilterParam) {","protected void filter(FacesContext context, DataTable table, Map<String,UIColumn> filterMap, String globalFilterParam) {",REP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Fixing some of Dwight's comments.,public Module getExtensionModule(Module module) { return new RuleGrammarGenerator(parsedDefinition).getCombinedGrammar(module).getExtensionModule();,public ParseInModule getParserModule(Module module) { return new RuleGrammarGenerator(parsedDefinition).getCombinedGrammar(module);,KEEP REP REP KEEP KEEP KEEP KEEP REP,Change Return Type
SONARJAVA-2363 Varargs methods wrongly resolved using loose invocation when overloaded (#1596),"boolean looseInvocation, boolean varArity) {","private Resolution findMethod(Env env, JavaType callSite, JavaType site, String name, List<JavaType> argTypes, List<JavaType> typeParams, boolean looseInvocation) {",REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP,Add Parameter
Add Javadocs and make some methods protected #1778,"public <E extends Entity> TestEntityFactory<E> getEntityFactory(Class<E> entityClass, TestEntityState entityState) {","public <E extends Entity> TestEntityFactory<E> getEntityFactory(Class<E> clazz, TestEntityState entityState) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Use AccountManager for storing user credentials.,"LoginResult result) { if (createAccount(result.getUserName(), result.getPassword())) {","public static void createAccount(@Nullable AccountAuthenticatorResponse response, String username, String password) { Account account = new Account(username, accountType()); boolean created = accountManager().addAccountExplicitly(account, password, null);",REP REP REP REP REP REP DEL DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
changes to ensure printing is not duplicated,"private StringBuilder filterAnonVarsAndPrint(K result, Set<String> filterSet, CompiledDefinition compiledDef, KRunOptions options) { StringBuilder sb = new StringBuilder();","private void filterAnonVarsAndPrint(K result, Set<String> filterSet, CompiledDefinition compiledDef, KRunOptions options, StringBuilder sb) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP ADD ADD REP REP,Change Return Type
more cosmetic fixes around UseMethod,"public UnaryOpsGroupDispatchNode(String genericName, boolean hasVararg, SourceSection callSrc, SourceSection argSrc) { super(genericName, RGroupGenerics.GROUP_OPS, hasVararg, callSrc, argSrc);","public UnaryOpsGroupDispatchNode(final String aGenericName, boolean hasVararg, SourceSection callSrc, SourceSection argSrc) { super(aGenericName, RGroupGenerics.GROUP_OPS, hasVararg, callSrc, argSrc);",KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
Allow updating start/end offset for pushed segments (#8653),"File currentSegmentLocation, boolean enableParallelPushProtection, HttpHeaders headers, String downloadUrl,","File currentSegmentLocation, boolean enableParallelPushProtection, HttpHeaders headers, String zkDownloadURI,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Remove the run method from LoweringPhase's subclasses according to the code review.,"LoweringPhase(CanonicalizerPhase canonicalizer, LoweringTool.LoweringStage loweringStage, boolean lowerOptimizableMacroNodes, StructuredGraph.StageFlag postRunStage) {","LoweringPhase(CanonicalizerPhase canonicalizer, LoweringTool.LoweringStage loweringStage, boolean lowerOptimizableMacroNodes) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
add args test; ignore failing delayedAssign test,"@Test public void TestSimpleBuiltins_testDelayedAssignIgnore_79fb1d399e2b39a496dac5a9749fb873() { assertEval(""{ h <- new.env(parent=emptyenv()) ; delayedAssign(\""x\"", y, h, h) ; assign(\""y\"", 2, h) ; get(\""x\"", h) }""); } @Test public void TestSimpleBuiltins_testDelayedAssignIgnore_af327b1b6a16f6b664839a659452d6ff() { assertEval(""{ h <- new.env(parent=emptyenv()) ; assign(\""x\"", 1, h) ; delayedAssign(\""x\"", y, h, h) ; assign(\""y\"", 2, h) ; get(\""x\"", h) }""); }","@Test public void TestSimpleBuiltins_testDelayedAssign_79fb1d399e2b39a496dac5a9749fb873() { assertEval(""{ h <- new.env(parent=emptyenv()) ; delayedAssign(\""x\"", y, h, h) ; assign(\""y\"", 2, h) ; get(\""x\"", h) }""); } @Test public void TestSimpleBuiltins_testDelayedAssign_af327b1b6a16f6b664839a659452d6ff() { assertEval(""{ h <- new.env(parent=emptyenv()) ; assign(\""x\"", 1, h) ; delayedAssign(\""x\"", y, h, h) ; assign(\""y\"", 2, h) ; get(\""x\"", h) }""); }",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
make PropertyHandle use TransitionId instead of transitionKeys,public TransitionId getTransitionId() { return mPropertyHandle.getTransitionId();,public String getTransitionKey() { return mPropertyHandle.getTransitionKey();,KEEP REP REP KEEP KEEP REP,Change Return Type
refactored (changed contructor params) added javadoc,public List getChoices(),public Collection getChoices(),KEEP REP KEEP,Change Return Type
compiler: make JVMCIVersionCheck quite when appropriate,"static void check(Map<String, String> props, boolean exitOnFailure, boolean quiet) {","static void check(Map<String, String> props, boolean exitOnFailure) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Launch and clean shouldUpdate on MountSpec only experiment,"static void applyDiffNodeToUnchangedNodes(InternalNode layoutNode, DiffNode diffNode) {","static boolean applyDiffNodeToUnchangedNodes(InternalNode layoutNode, DiffNode diffNode) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Translate strings in vector tiles,public VehicleParkingGroupPropertyMapperWithPublicMap(Locale locale) { super(locale);,public VehicleParkingGroupPropertyMapperWithPublicMap() { super();,KEEP ADD REP KEEP REP,Add Parameter
updated 08.01.2009 20:08,"public int doCustomFit(String function, double[] initialValues, boolean showSettings) {","public int doCustomFit(String function, boolean showSettings) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
"js + css: if <head> was missing in Page markup and no component contributes to <wicket:head>, the empty <head></head> will no longer be written to output",private void insertWicketHeadTag(final boolean requiresHeadTag),private void insertWicketHeadTag(),KEEP KEEP ADD ADD REP,Add Parameter
#10164 insert domain names in procedure ddl for firebird,"private static void printParam(StringBuilder sql, GenericProcedureParameter param, Map<String, String> domainNames) { String paramName = DBUtils.getQuotedIdentifier(param); sql.append(paramName).append("" ""); String domainName = domainNames.get(paramName.trim()); if (domainName != null) { sql.append(domainName); return; } sql.append(param.getTypeName());","private static void printParam(StringBuilder sql, GenericProcedureParameter param) { sql.append(DBUtils.getQuotedIdentifier(param)).append("" "").append(param.getTypeName());",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP,Add Parameter
refactor: Make RaptorPreferences immutable,public Set<Optimization> optimizations() { return optimizations;,public Set<Optimization> getOptimizations() { return optimizations;,KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Switching to tab and search UI provided by the framework.,"public void onCreate(Bundle savedState, ContactsRequest request, ActionBar actionBar) { mActionBar = actionBar;","public void onCreate(Bundle savedState, ContactsRequest request) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD ADD,Add Parameter
"Similarly to vectors, shared containers should be copied.","private RAbstractContainer updateNames(VirtualFrame frame, RAbstractContainer container, Object o) {","private RAbstractVector updateNames(VirtualFrame frame, RAbstractVector vector, Object o) {",KEEP REP KEEP KEEP REP REP KEEP KEEP KEEP,Change Return Type
Make import dialog able to show just SIM options.,public static void showForSimOnly(FragmentManager fragmentManager) {,"public static void show(FragmentManager fragmentManager, Class callingActivity) {",KEEP KEEP KEEP REP REP DEL DEL KEEP,Remove Parameter
[multistage] add support for stage parallelism (#10166),"Map<String, String> options) {","public void assignWorkerToStage(int stageId, StageMetadata stageMetadata, long requestId) {",REP REP REP DEL DEL DEL DEL DEL KEEP,Add Parameter
order category methods before taking first getter/setter,public int compareTo(final Object that) {,public int compareTo(Object o) { CategoryMethod thatMethod = (CategoryMethod) o;,KEEP KEEP ADD REP REP KEEP DEL DEL DEL DEL DEL,Rename Parameter
2019.06.27 (1.52q4; Plot labels),public void addSlice(String fileName) { if (fileName==null) throw new IllegalArgumentException("'fileName' is null!"); if (fileName.startsWith(".")) return;,public void addSlice(String name) { if (name==null) throw new IllegalArgumentException("'name' is null!");,KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP ADD ADD ADD,Rename Parameter
Added accessor for component class.,public UnauthorizedInstantiationException(final Class componentClass),public UnauthorizedInstantiationException(final Class c),KEEP KEEP KEEP REP,Rename Parameter
Corrections,"public synchronized boolean saveCover(Book book, String url) {",public synchronized void saveCovers() {,KEEP KEEP ADD ADD ADD REP REP KEEP,Change Return Type
make LocalFileNode more generic,public LocalFileNode(AbstractFile af) { super(af);,public LocalFileNode(LocalFile lf) { super(lf);,KEEP REP REP KEEP REP,Rename Parameter
Refactored single vector element printing to a separate node.,"private String prettyPrintSingleVectorElement(Object o) { if (singleVectorElementPrettyPrinter == null) { CompilerDirectives.transferToInterpreterAndInvalidate(); singleVectorElementPrettyPrinter = adoptChild(PrettyPrinterSingleVectorElementNodeFactory.create(null)); } return (String) singleVectorElementPrettyPrinter.executeString(null, o); }","private String printVectorElement(Object vectorElement) { if (vectorElement == RNull.instance) { return ""NULL""; } if (RTYPES.isByte(vectorElement)) { byte vectorElementCast = RTYPES.asByte(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isInteger(vectorElement)) { int vectorElementCast = RTYPES.asInteger(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isDouble(vectorElement)) { double vectorElementCast = RTYPES.asDouble(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isRComplex(vectorElement)) { RComplex vectorElementCast = RTYPES.asRComplex(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isString(vectorElement)) { String vectorElementCast = RTYPES.asString(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isRRaw(vectorElement)) { RRaw vectorElementCast = RTYPES.asRRaw(vectorElement); return prettyPrint(vectorElementCast, null); } if (RTYPES.isRIntSequence(vectorElement)) { RIntSequence vectorElementCast = RTYPES.asRIntSequence(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRDoubleSequence(vectorElement)) { RDoubleSequence vectorElementCast = RTYPES.asRDoubleSequence(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRIntVector(vectorElement)) { RIntVector vectorElementCast = RTYPES.asRIntVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRDoubleVector(vectorElement)) { RDoubleVector vectorElementCast = RTYPES.asRDoubleVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRRawVector(vectorElement)) { RRawVector vectorElementCast = RTYPES.asRRawVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRComplexVector(vectorElement)) { RComplexVector vectorElementCast = RTYPES.asRComplexVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRStringVector(vectorElement)) { RStringVector vectorElementCast = RTYPES.asRStringVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRLogicalVector(vectorElement)) { RLogicalVector vectorElementCast = RTYPES.asRLogicalVector(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRList(vectorElement)) { RList vectorElementCast = RTYPES.asRList(vectorElement); if (vectorElementCast.getLength() == 1) { return printVectorElement(vectorElementCast.getDataAt(0)); } else { return prettyPrintElements(vectorElementCast, null); } } if (RTYPES.isRInvisible(vectorElement)) { RInvisible vectorElementCast = RTYPES.asRInvisible(vectorElement); return printVectorElement(vectorElementCast.get()); } if (RTYPES.isRFunction(vectorElement)) { RFunction vectorElementCast = RTYPES.asRFunction(vectorElement); return prettyPrint(vectorElementCast, null); } throw new UnsupportedOperationException(concat(""Unsupported values "", objectString(vectorElement))); }ename Parameter
[PINOT-2765]: Skip creating star node for specific dimensions,public List<String> getDimensionsSplitOrder() { return dimensionsSplitOrder;,public List<String> getSplitOrder() { return splitOrder; } public void setSplitOrder(List<String> splitOrder) { this.splitOrder = splitOrder; } public List<String> getSplitExcludes() { return splitExcludes;,KEEP KEEP REP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Method
SlidingTabLayout for AlbumSongsFragment too,"public AudioPagerAdapter(ArrayList<ListView> lists, String[] titles){",public AudioPagerAdapter(ArrayList<ListView> lists){,KEEP KEEP ADD ADD REP,Add Parameter
use newly reorganized scene graph to snapshot only the actual visualization (including axes),"public SaveSnapshotAsReport(TimeLineController controller, Supplier<Node> nodeSupplier) {","public SaveSnapshotAsReport(TimeLineController controller, Node node) {",KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Calculate nano-seconds as well; reorganise slightly,"private static void pause(int bytes, int cps){ long sleepMS = (bytes*MS_PER_SEC)/cps; int  sleepNS = (int)(((bytes*MS_PER_SEC)/cps) % NS_PER_MS);",private void pause(int bytes){,KEEP ADD KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
"WICKET-1962 setters on FeedbackPanel do not return self, which prevents chaining",public final FeedbackPanel setFilter(IFeedbackMessageFilter filter),public final void setFilter(IFeedbackMessageFilter filter),KEEP KEEP REP KEEP KEEP,Change Return Type
possible fixes for some NPEs,"private boolean createTitleSubTree(String prefix) { if (prefix == null) { return false; } final TitleTree temp = new TitleTree(Collection, prefix);","boolean createTitleSubTree(String title) { final TitleTree temp = new TitleTree(Collection, title);",ADD KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Improving responsive image calculations.,public int getSizeLg() {,"public Map<Long, String> getSizeLg() {",KEEP REP DEL KEEP KEEP,Change Return Type
"Added cfg.prune.implicitUnchecked property, for pruning",private ExceptionSet enumerateExceptionTypes(BasicBlock basicBlock),private Set<ObjectType> enumerateExceptionTypes(BasicBlock basicBlock),KEEP REP KEEP KEEP,Change Return Type
fixed a crash on epub files with images,"protected Map<Long,Book> listBooks(FileInfoSet infos) {","protected Map<String,Book> listBooks() {",KEEP ADD REP REP KEEP,Change Return Type
CATROID-171 Visual placement 2,public boolean takeScreenshot(String screenshotName) {,public boolean makeManualScreenshot() {,KEEP KEEP ADD REP KEEP,Add Parameter
fixed a couple tests to conform with 1.45q,"private void convexHullTest(Roi roi, int x, int y, int w, int h)",private void convexHullTest(Roi roi),KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
[remote/downloader] Migrate `Downloader` to take `Credentials`,"Credentials credentials,","Map<URI, Map<String, List<String>>> authHeaders,",REP REP DEL DEL,Rename Parameter
first pass at sanitizing the utf-16 as we read it.,"private void readToWhiteSpaceHelper(int maxBytes, StringBuilder currentChunk) throws IOException {","private void readToWhiteSpaceHelper(int maxBytes, StringBuilder currentSegment) throws IOException {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
#4579,"protected String mergeAndMinimizeInlineScripts(String id, String type, ArrayList<String> inlines) {","protected String mergeAndMinimizeInlineScripts(String type, ArrayList<String> inlines) {",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
2018.10.08 (1.52h28; Plot enhancements),"public void addPoints(ArrayList x, ArrayList y, ArrayList errorBars, int shape) { addPoints(getDoubleFromArrayList(x), getDoubleFromArrayList(y), getDoubleFromArrayList(errorBars), shape);","public void addPoints(ArrayList x, ArrayList y, ArrayList z, int shape) { addPoints(getDoubleFromArrayList(x), getDoubleFromArrayList(y), getDoubleFromArrayList(z), shape);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
refactor: Extract LegMode,public LegMode getMode() { return LegMode.fromTransitMode(getTrip().getMode());,public TraverseMode getMode() { return TraverseMode.fromTransitMode(getTrip().getMode());,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Deletion of folder when upgrade cancelled fixed,"private int upgradeSolrIndexVersion5to6(int currentIndexVersion, String solr5IndexPath, String tempResultsDir, UserCancelledProcessTerminator terminator) throws AutopsyService.AutopsyServiceException, SecurityException, IOException {","private int upgradeSolrIndexVersion5to6(int currentIndexVersion, String solr5IndexPath, String tempResultsDir, UserCancelledProcessTerminator terminatior) throws AutopsyService.AutopsyServiceException, SecurityException, IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Don't fetch wiki-specific user id unnecessarily.,private void getUserIdForLanguage(@NonNull final String code) { if (!AccountUtil.isLoggedIn()) { return; },private void getIdForLanguage(@NonNull final String code) {,KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Rename Method
#7553,protected void processDefaultListener(FacesContext context) {,"private void processArgListener(FacesContext context, ELContext elContext, AjaxBehaviorEvent event) throws AbortProcessingException {",REP KEEP REP REP DEL DEL DEL DEL DEL DEL KEEP,Remove Parameter
first usages of filters: by series & by author,public synchronized List<Book> books(Query query) {,public synchronized List<Book> books() {,KEEP KEEP KEEP ADD REP KEEP,Add Parameter
Adding helper routines to query details of a port profile and,public PortProfile getPortProfileByName(String name) throws CloudRuntimeException {,public void getPortProfileByName(String name) throws CloudRuntimeException {,KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"EUCA-12287 did some refactoring in rolling update state entity.  combined terminating_instance_ids, obsolete_instance_ids, and num_original_obsolete_instances into a single JSON field given obsolete instance ids and status (RUNNING, TERMINATED, TERMINATING)",public String getObsoleteInstancesJson() { return obsoleteInstancesJson; } public void setObsoleteInstancesJson(String obsoleteInstancesJson) { this.obsoleteInstancesJson = obsoleteInstancesJson; },public String getObsoleteInstanceIds() { return obsoleteInstanceIds; },KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Rename Method
Added retina support to JavaSE.,"private void updateEdtBufferSize() { edtBuffer = updateBufferSize(edtBuffer); } private void updateBuffer(BufferedImage inputBuf) { if (buffer == null || buffer.getWidth() != inputBuf.getWidth() || buffer.getHeight() != inputBuf.getHeight()) { buffer = new BufferedImage(inputBuf.getWidth(), inputBuf.getHeight(), BufferedImage.TYPE_INT_RGB); } Graphics2D g = (Graphics2D)buffer.createGraphics(); g.drawImage(inputBuf, 0, 0, this); g.dispose(); } private final Object bufferLock = new Object(); private BufferedImage edtBuffer; double blitTx; double blitTy; int blitCounter;",private void updateBufferSize() {,KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Method
CDEC-13 : The restart installation-manager after update was implemented.,"protected void unpack(Path pathToBinaries, Path unpackToDir) throws IOException, URISyntaxException {","protected void unpack(Path pathToBinaries) throws IOException, URISyntaxException { Path installedPath = getInstalledPath();",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL,Add Parameter
Using preferred protocol and port for realtime segment upload (#2475),"public synchronized Pair<String, Integer> getControllerLeader() {",public synchronized String getControllerLeader() {,KEEP KEEP ADD REP KEEP KEEP,Change Return Type
git-svn-id: https://only.mawhrin.net/repos/FBReaderJ/trunk@859 6a642e6f-84f6-412e-ac94-c4a38d5a04b0,"public void setModels(ArrayList models, String fileName) {","public void setModel(ZLTextModel model, String fileName) { super.setModel(model);",KEEP KEEP REP REP KEEP KEEP KEEP DEL,Rename Parameter
refactor: change prototype of VOTEWITNESS opcode,"public boolean voteWitness(int witnessArrayOffset, int amountArrayOffset) { int witnessArrayLength = memoryLoad(witnessArrayOffset).intValueSafe(); int amountArrayLength = memoryLoad(amountArrayOffset).intValueSafe();","public boolean voteWitness(int witnessArrayOffset, int witnessArrayLength, int tronPowerArrayOffset,int tronPowerArrayLength) { if (memoryLoad(witnessArrayOffset).intValueSafe() != witnessArrayLength || memoryLoad(tronPowerArrayOffset).intValueSafe() != tronPowerArrayLength) { throw new BytecodeExecutionException( ""Memory array length do not match length parameter!""); }",KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL KEEP REP DEL DEL KEEP REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
android/UsbSerialHelper: move getDeviceInterfaceDisplayName() into class UsbDeviceInterface,public String getDisplayName() { String name = device.getProductName(); if (name == null) name = id; String manufacturer = device.getManufacturerName(); if (manufacturer != null) name += " (" + manufacturer + ")"; if (device.getInterfaceCount() > 1) name += "#" + (iface + 1); return name; },static String getDeviceInterfaceDisplayName(UsbDeviceInterface deviface) { String name = deviface.device.getProductName(); if (name == null) name = deviface.id; String manufacturer = deviface.device.getManufacturerName(); if (manufacturer != null) name += " (" + manufacturer + ")"; if (deviface.device.getInterfaceCount() > 1) name += "#" + (deviface.iface + 1); return name; },REP KEEP REP DEL KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Releases the HostListenerCoordinator when unmount all items is invoked,public @Nullable ExtensionState getVisibilityExtensionState() { return mVisibilityExtensionState; } @VisibleForTesting public @Nullable ExtensionState getIncrementalMountExtensionState() { return mIncrementalMountExtensionState;,VisibilityMountExtension getVisibilityExtension() { return mVisibilityExtension;,ADD ADD REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
Added a little more to ShadowPreference,public boolean persistInt(int value) { this.persistedInt = value; return shouldPersist; } @Implementation public boolean callChangeListener(Object newValue) { callChangeListenerValue = newValue; return true; } public Object getCallChangeListenerValue() { return callChangeListenerValue;,public void setPersistedInt(int persistedInt) { this.persistedInt = persistedInt;,KEEP REP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
"fixed: FeedbackPanel collects messages for itself and child components, not for page",public FeedbackMessagesModel(Component pageResolvingComponent),public FeedbackMessagesModel(Component component),KEEP KEEP REP,Rename Parameter
[TE] Extend autotune to take user configurable parameters (#1840),"public BaseAlertFilterAutoTune fromSpec(String AutoTuneType, AutotuneConfigDTO autotuneConfigDTO, List<MergedAnomalyResultDTO> anomalies) { BaseAlertFilterAutoTune alertFilterAutoTune = new DummyAlertFilterAutoTune();",public AlertFilterAutoTune fromSpec(String AutoTuneType) { AlertFilterAutoTune alertFilterAutoTune = new DummyAlertFilterAutoTune();,KEEP REP KEEP ADD ADD ADD ADD REP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
CODENVY-210 Fix VSTS remote url retrieval,"public String pullRequestHtmlUrl(String projectName, String repositoryName, String number) {","public String pullRequestHtmlUrl(String projectName, String repositoryName, String prId) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
This commit is aimed at fixing OOM error issues on low-memory Android tablets running Android 5 by adding an option to disable caching on RoundRectBorder.  It provides two mechanisms to help support low-memory devices:,"private static Image createRoundThumbImage(Component context, int pxDim, int color, int shadowSpread, int thumbInset) { Image img = ImageFactory.createImage(context, pxDim + 2 * shadowSpread, pxDim + 2 * shadowSpread, 0x0);","private static Image createRoundThumbImage(int pxDim, int color, int shadowSpread, int thumbInset) { Image img = Image.createImage(pxDim + 2 * shadowSpread, pxDim + 2 * shadowSpread, 0x0);",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Gives options of how to handle multiple updates for the same block,"public Block dynamicUpdate(long updateTime) { this.getRegion().queueDynamicUpdate(this.x, this.y, this.z, updateTime); return this; } @Override public Block dynamicUpdate(long updateTime, InsertionPolicy policy) { this.getRegion().queueDynamicUpdate(this.x, this.y, this.z, policy, updateTime);","public Block dynamicUpdate(long delay) { this.getRegion().queueDynamicUpdate(this.x, this.y, this.z, delay);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
"Fix AutoIngestDashboard JOB col header, stale data issue","public void update(Observable observable, Object arg) { updateExecutor.submit(new UpdateJobsSnapshotTask());","public void update(Observable observable, Object argument) { JobsSnapshot jobsSnapshot = (JobsSnapshot) argument; EventQueue.invokeLater(new RefreshComponentsTask(jobsSnapshot));",KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP DEL DEL DEL DEL DEL,Rename Parameter
Update to Medialibrary API,"public boolean addToHistory(String mrl, String title) { return mIsInitiated && nativeAddToHistory(mrl, title);",public boolean addToHistory(String mrl) { return mIsInitiated && nativeAddToHistory(mrl);,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Make multi import one request,"public void sendImportRequest(final List<ImportRequest> requests) { Log.i(LOG_TAG, ""Send an import request"");","public void sendImportRequest(final ImportRequest request) { Log.i(LOG_TAG, String.format(""Send an import request (Uri: %s)"", request.uri));",KEEP KEEP KEEP REP REP KEEP KEEP REP KEEP KEEP REP DEL DEL DEL,Rename Parameter
Start removing code supporting async action execution.,"private ActionStepOrResult executeAction(ExtendedEventHandler eventHandler, Action action)","ExtendedEventHandler eventHandler, ActionContinuationOrResult actionContinuation)",ADD ADD REP KEEP REP REP,Rename Parameter
SONARJAVA-4174 Clean code of rule S3655,private static Optional<String> getIdentifierPart(ExpressionTree methodSelect) {,private static String getIdentifierPart(ExpressionTree methodSelect) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
"PAGS (JPA) -- Add constructors to IPersonTester implementations that accept a single IPersonAttributesGroupTestDefinition;  deprecate the ones that accept String,String","private IPersonTester initializeTester(IPersonAttributesGroupTestDefinition test) { try { Class<?> testerClass = Class.forName(test.getTesterClassName()); Constructor<?> c = testerClass.getConstructor(new Class[]{IPersonAttributesGroupTestDefinition.class}); Object o = c.newInstance(new Object[]{test}); return (IPersonTester) o; } catch (Exception e) { logger.error(""Error in initializing tester class: {}"", test.getTesterClassName(), e); return null; } }","private IPersonTester initializeTester(String tester, String attribute, String value) { try { Class<?> testerClass = Class.forName(tester); Constructor<?> c = testerClass.getConstructor(new Class[]{String.class, String.class}); Object o = c.newInstance(new Object[]{attribute, value}); return (IPersonTester)o; } catch (Exception e) { logger.error(""Error in initializing tester class: {}"", tester, e); return null; } }",KEEP KEEP REP REP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP KEEP KEEP REP REP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Android: Add "Import BootMii NAND Backup","private void runOnThreadAndShowResult(int progressTitle, int progressMessage, Supplier<String> f)","private void runOnThreadAndShowResult(int progressMessage, Supplier<String> f)",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Makes MountItem#areDrawableOutputsDisabled static,static boolean areDrawableOutputsDisabled(int flags) { return (flags & LAYOUT_FLAG_DRAWABLE_OUTPUTS_DISABLED) != 0;,public boolean areDrawableOutputsDisabled() { final LayoutOutput output = getLayoutOutput(mRenderTreeNode); return (output.getFlags() & LAYOUT_FLAG_DRAWABLE_OUTPUTS_DISABLED) != 0;,REP KEEP ADD REP KEEP DEL DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP KEEP,Add Parameter
refactoring: color parameter in drawWord method,"final void drawWord(int x, int y, ZLTextWord word, int start, int length, boolean addHyphenationSign, ZLColor color) {","final void drawWord(int x, int y, ZLTextWord word, int start, int length, boolean addHyphenationSign) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix #1979,"private JCExpression transformOverridableBinaryOperator(Tree.Term leftTerm, Tree.Term rightTerm, ProducedType rightType,","private JCExpression transformOverridableBinaryOperator(Tree.Term rightTerm, ProducedType rightType,",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Implementation of `hash` drops bits (#1334),public static boolean isHashAttribute(Declaration model) { return model instanceof Value && Decl.withinClassOrInterface(model) && model.isShared() && "hash".equals(model.getName());,static boolean isSmall(TypedDeclaration declaration) { return "hash".equals(declaration.getName());,ADD KEEP KEEP REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
"Fix PMD dogfood: AssignmentInOperand, LooseCoupling",private Set<ASTMethodCallExpression> getPreviousMethodCalls(final AbstractApexNode<?> self) { final Set<ASTMethodCallExpression> innerMethodCalls = new HashSet<>();,private HashSet<ASTMethodCallExpression> getPreviousMethodCalls(final AbstractApexNode<?> self) { final HashSet<ASTMethodCallExpression> innerMethodCalls = new HashSet<>();,KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
SONARJAVA-3263 FP on S2187 when using ArchUnit tests with fields (#2844),"private static Stream<Symbol> getAllMembers(Symbol.TypeSymbol symbol, boolean isEnclosed) {","private static Stream<Symbol.MethodSymbol> getAllMembers(Symbol.TypeSymbol symbol, boolean isEnclosed) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Added missing Settings accessors,"private static Map<String, Object> get(ContentResolver cr) { Map<String, Object> map = dataMap.get(cr);","private static Map<String, Integer> get(ContentResolver cr) { Map<String, Integer> map = dataMap.get(cr);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
javadoc: Rename type param to comply with java coding standards and document usage.,"protected static <T> T findValue(Class<T> clazz, String data,","protected static <TValue> TValue findValue(Class<TValue> clazz, String data,",KEEP KEEP REP REP REP KEEP KEEP KEEP,Change Return Type
more fixes,"private Visitor convert(StringBuilder sb, boolean rhs, VarInfo vars, boolean useNativeBooleanExp, boolean anywhereRule) { return new Visitor(sb, rhs, vars, useNativeBooleanExp, anywhereRule);","private Visitor convert(StringBuilder sb, boolean rhs, VarInfo vars, boolean useNativeBooleanExp) { return new Visitor(sb, rhs, vars, useNativeBooleanExp);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Fix crash in audio player,public void onRepeatClick(View view) {,public void onRepeatClick() {,KEEP KEEP ADD REP KEEP,Add Parameter
Refactor Litho's implementation of touch expansion,"private void maybeRegisterTouchExpansion(int index, MountItem item) { final LayoutOutput output = getLayoutOutput(item);","void maybeRegisterTouchExpansion(int index, LayoutOutput output, Object content) {",ADD KEEP KEEP KEEP ADD ADD ADD ADD KEEP REP REP REP DEL,Add Parameter
push IngestSettings into IngestJob,"private IngestJob(long id, Content dataSource, IngestJobSettings settings) {","private IngestJob(long id, Content dataSource, boolean processUnallocatedSpace) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
YARN-3541. Add version info on timeline service / generic history web UI and REST API. Contributed by Zhijie Shen,public TimelineAbout about(,public AboutInfo about(,KEEP REP KEEP,Change Return Type
Refactoring and cleanup classes of CLI client,protected void printError(String message) { console.printError(message);,protected void printError(Object error) { if (error instanceof Exception) { console.printError((Exception)error); } else { console.printError(error.toString()); },KEEP KEEP REP REP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
minor refactor,"public Map<?, ?> getMetaDataMap() { return metaDataMap;",public ListHashMap getMetaDataMap() { return (ListHashMap) metaDataMap;,KEEP ADD REP KEEP KEEP KEEP DEL KEEP,Change Return Type
FManagerAdapter extends BaseAdapter && ReturnRes deleted,private void initfill(FManagerAdapter adapter){,"private void initfill(List<FileItem> items, FManagerAdapter adapter){",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Bug Add "Compile JSR223 Test Elements" menu item,"protected Object processFileOrScript(ScriptEngine scriptEngine, final Bindings pBindings)","protected Object processFileOrScript(ScriptEngine scriptEngine, Bindings bindings)",KEEP KEEP KEEP KEEP ADD KEEP REP,Rename Parameter
Making BASIC https support work right (don't know about keystore stuff),"public String chooseClientAlias(String[] arg0, Principal[] arg1, Socket arg2) { log.info(""Alias: "" + this.store.getAlias()); return this.store.getAlias(); } public String chooseServerAlias(String arg0, Principal[] arg1, Socket arg2) { return this.manager.chooseServerAlias(arg0, arg1, arg2); } }","public String chooseClientAlias(String keyType, Principal[] issuers) { log.info(""Alias: "" + this.store.getAlias()); return this.store.getAlias(); } public String chooseServerAlias(String keyType, Principal[] issuers) { log.info( ""WrappedX509Manager: chooseServerAlias: "" + this.manager.chooseServerAlias(keyType, issuers)); return this.manager.chooseServerAlias(keyType, issuers); } }",KEEP KEEP REP REP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP REP REP REP REP REP REP DEL DEL DEL DEL KEEP KEEP,Rename Parameter
UP-3305 Completed unit and functional testing,"public void publishPortalRenderEvent(HttpServletRequest request, Object source, String requestPathInfo, long executionTimeNano,","public void publishPortalRenderEvent(HttpServletRequest request, Object source, String requestPathInfo, long executionTime,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
2011.08.23 (1.45n1),public void setLabelFont(Font font) { labelFont = font;,public void setLabelsFont(Font font) { labelsFont = font;,KEEP KEEP REP KEEP KEEP REP KEEP KEEP,Rename Method
Ajax update support to mobile selectOneMenu,"protected void encodeMarkup(FacesContext context, SelectOneMenu menu) throws IOException {","public void encodeEnd(FacesContext context, UIComponent component) throws IOException {",REP KEEP REP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
initialization actions were moved to time _after_ book opening,"public void openBook(Book book, final Bookmark bookmark, final Runnable postAction) {","public void openBook(Book book, final Bookmark bookmark) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
#5032 Dictionary description column divider configuration,"private void reloadSelectorValues(Object pattern, boolean force) { if (!force && dictLoaded && CommonUtils.equalObjects(String.valueOf(lastPattern), String.valueOf(pattern))) {","private void reloadSelectorValues(Object pattern) { if (dictLoaded && CommonUtils.equalObjects(String.valueOf(lastPattern), String.valueOf(pattern))) {",KEEP KEEP KEEP ADD ADD REP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
test cases for intercase correlation,"Map<String, Integer> getCaseMap() throws EamDbException {","Map<Integer, String> getCaseMap() throws EamDbException {",REP REP KEEP KEEP KEEP KEEP,Change Return Type
fixed position keeping,public void close() { ((ZLAndroidLibrary)ZLAndroidLibrary.Instance()).pause();,public void closeInternal() { ((ZLAndroidLibrary)ZLAndroidLibrary.Instance()).finish();,KEEP KEEP REP KEEP REP,Rename Method
ViewStub for player/playlist tips,"public void showTipViewIfNeeded(final int stubId, final String settingKey) {","public void showTipViewIfNeeded(final int layoutId, final String settingKey) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
model changes (component removed),protected Object onGetObject() {,protected Object onGetObject(Component component) {,KEEP KEEP REP DEL KEEP,Remove Parameter
add the transaction sort switch,public BlockingQueue<TransactionCapsule> getPendingTransactions() {,public PriorityBlockingQueue<TransactionCapsule> getPendingTransactions() {,KEEP REP KEEP KEEP,Change Return Type
To fix all the unit test.,"private void setupSegment(File segmentDir, String tableName) throws Exception {","private void setupSegment(File segmentDir, String resourceName) throws Exception {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
"fix file.copy arg coercion, implement recursive unlink","protected int doUnlink(RAbstractStringVector vec, byte recursiveArg, byte forceArg) { @SuppressWarnings(""unused"") boolean force = checkLogical(forceArg, ""force""); boolean recursive = checkLogical(recursiveArg, ""recursive"");",@SuppressWarnings("unused"),ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
expand catalog handling (in progress),"NetworkBookTree(NetworkTree parent, NetworkBookItem book, int position) { super(parent, position);","NetworkBookTree(NetworkTree parent, NetworkBookItem book) { super(parent);",KEEP KEEP KEEP ADD ADD REP KEEP ADD REP,Add Parameter
switch logging from log4j to logback,"public void setLoggingLevel(String classQualifier, String rawLevel)","public void setLog4jLevel(String classQualifier, String rawLevel)",KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Implement the includeMissing ML flag for playlists,"public Playlist getPlaylist(long playlistId, boolean includeMissing) { return mIsInitiated ? nativeGetPlaylist(playlistId, includeMissing) : null;",public Playlist getPlaylist(long playlistId) { return mIsInitiated ? nativeGetPlaylist(playlistId) : null;,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP,Add Parameter
Name clash,"void configure(Socket _clientSocket, ProxyControl _target, Map _pageEncodings, Map _formEncodings) { this.target = _target; this.clientSocket = _clientSocket; this.captureHttpHeaders = _target.getCaptureHttpHeaders(); this.httpsSpoof = _target.getHttpsSpoof(); this.pageEncodings = _pageEncodings; this.formEncodings = _formEncodings;","void configure(Socket clientSocket, ProxyControl target, Map pageEncodings, Map formEncodings) { this.target = target; this.clientSocket = clientSocket; this.captureHttpHeaders = target.getCaptureHttpHeaders(); this.httpsSpoof = target.getHttpsSpoof(); this.pageEncodings = pageEncodings; this.formEncodings = formEncodings;",KEEP KEEP REP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
"[TE] - Use client from config, to support external clients (#1449)","public Client(String className, Map<String, String> properties) { this.className = className; this.properties = properties; } public String getClassName() { return className; } public void setClassName(String className) { this.className = className; } public Map<String, String> getProperties() { return properties; } public void setProperties(Map<String, String> properties) { this.properties = properties; } @Override public String toString() { return ToStringBuilder.reflectionToString(this); }","public Client(String name, String className, Map<String, String> properties) { this.name = name; this.className = className; this.properties = properties; } public String getName() { return name; } public void setName(String name) { this.name = name; } public String getClassName() { return className; } public void setClassName(String className) { this.className = className; } public Map<String, String> getProperties() { return properties; } public void setProperties(Map<String, String> properties) { this.properties = properties; } @Override public String toString() { return ToStringBuilder.reflectionToString(this); }",KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Use PickDrop enum in simplify cancel method,public PickDrop getPickupType(int stop) { return getPickups().get(stop);,public int getPickupType(int stop) { if (getPickups() == null) { return -999; } return getPickups()[stop];,KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL KEEP REP DEL DEL DEL,Change Return Type
"Push allocation reporter to the GuestAllocation class, and maintain an assumption in the language to bypass allocation reporting when none exists.","public GuestAllocator(EspressoContext context, AllocationReporter allocationReporter) {",public GuestAllocator(EspressoContext context) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Add logs to diagnose GUMP Failure,static List<String> checkClasses(){,static boolean checkClasses(){,KEEP REP KEEP,Change Return Type
Updated for new Entity methods,"public Position getPosition() { stateLock.readLock().lock(); try { return new Position(new Point(getWorld(), x, y, z), pitch, yaw, roll); } finally { stateLock.readLock().unlock(); } }",public Pointm getPosition() {,KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
Fixed #1904 Implement `narrow type in else block of if (is...)`,private SyntheticName addVarSubs(VarTrans vartrans) { if (vartrans.hasResultDecl()) { Tree.Variable var = vartrans.getVariable(); SyntheticName resultVarName = naming.alias(vartrans.getVariableName().getName());,private SyntheticName addVarSubs(Cond transformedCond) { if (transformedCond.hasResultDecl()) { Tree.Variable var = transformedCond.getVariable(); SyntheticName resultVarName = naming.alias(transformedCond.getVariableName().getName());,KEEP KEEP REP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
Temp directory option,"private static ZLStringListOption pathOption(String key, String defaultDirectory) {","private static ZLStringListOption directoryOption(String key, String defaultDirectory) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Bug HTTP(S) Test Script Recorder : Client certificate authentication uses the first SSLManager created,public HttpSSLProtocolSocketFactory() { this(0);,"public HttpSSLProtocolSocketFactory(JsseSSLManager sslManager) { this(sslManager, 0);",KEEP REP DEL KEEP REP DEL,Remove Parameter
TruffleStrings: fix assertion in MaterializeNode,final boolean isMaterialized(Encoding expectedEncoding) { return data instanceof byte[] || isLazyLong() && ((AbstractTruffleString.LazyLong) data).bytes != null || isNative() && (isSupportedEncoding(expectedEncoding) || ((NativePointer) data).byteArrayIsValid);,final boolean isMaterialized() { return data instanceof byte[] || isLazyLong() && ((AbstractTruffleString.LazyLong) data).bytes != null;,KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
PickList improvements,"protected void encodeScript(FacesContext context, PickList pickList) throws IOException { ResponseWriter writer = context.getResponseWriter(); String clientId = pickList.getClientId(context);","protected void encodeScript(FacesContext facesContext, PickList pickList) throws IOException { ResponseWriter writer = facesContext.getResponseWriter(); String clientId = pickList.getClientId(facesContext);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
"""Add field"" footer logic",private void updateSectionVisible() {,private void updateVisible() {,KEEP KEEP REP KEEP,Rename Method
Deleted OperationStats," void addOperation(String name, JavaOperationSignature sig) {"," OperationStats addOperation(String name, JavaOperationSignature sig) {",REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Change the output of validation tools to an object,static ValidationResults convertResults(,"static Map<ValidationUtils.State, List<ValidationTaskResult>> convertResults(",KEEP REP DEL KEEP,Change Return Type
Refactor: do not recompute executableScanners for each file,"private static List<JavaFileScanner> executableScanners(List<JavaFileScanner> scanners, JavaVersion javaVersion) {",private List<JavaFileScanner> executableScanners(List<JavaFileScanner> scanners) {,KEEP ADD KEEP KEEP ADD ADD REP KEEP,Add Parameter
DirConfigSource should not log severe messages if unused. (#5104),Optional<Path> findDir() throws IOException {,Path findDir() throws IOException {,REP KEEP KEEP KEEP KEEP,Change Return Type
"Checkout point, major functionality implemented","private void createTag() { pcs.firePropertyChange(new PropertyChangeEvent(this, ""state"", null, State.DISABLE));",private void createTagButtonActionPerformed(java.awt.event.ActionEvent evt) { createTagButton.setEnabled(false); showTagsButton.setEnabled(false);,KEEP KEEP ADD ADD REP REP REP REP REP,Remove Parameter
pass visibility through RCaller object,"protected abstract Object execute(VirtualFrame frame, CallTarget target, Object[] arguments, RCaller caller);","protected abstract Object execute(VirtualFrame frame, CallTarget target, Object[] arguments);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Translate @CEntryPoint.exceptionHandler enum return values.,"private ValueNode adaptReturnValue(ResolvedJavaMethod method, HostedProviders providers, Purpose purpose, NativeLibraries nativeLibraries, HostedGraphKit kit, ValueNode value) { ValueNode returnValue = value;","private ValueNode adaptReturnValue(ResolvedJavaMethod method, HostedProviders providers, Purpose purpose, NativeLibraries nativeLibraries, HostedGraphKit kit, ValueNode invokeValue) { ValueNode returnValue = invokeValue;",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
UX updates to read-only view of raw contact,private void setAccountInfo() {,private void addAccountInfo() { mAccountHeaderContainer.setVisibility(View.GONE);,KEEP KEEP REP KEEP DEL,Rename Method
convert int to byte for LOGICAL access,public static byte[] LOGICAL(Object x) {,public static int[] LOGICAL(Object x) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Change timed process terminator implementation for ExecUtils,public TimedProcessTerminator(long maxRunTimeInSeconds) { this.maxRunTimeInSeconds = maxRunTimeInSeconds; this.startTimeInSeconds = (new Date().getTime()) / 1000; } @Override public boolean shouldTerminateProcess() { long currentTimeInSeconds = (new Date().getTime()) / 1000; return (currentTimeInSeconds - this.startTimeInSeconds) > this.maxRunTimeInSeconds; } },"public TimedProcessTerminator(long userSpecifiedTimeoutSec) { creationTimeSec = (new Date().getTime()) / 1000; long defaultTimeoutSec = UserPreferences.getProcessTimeOutHrs() * 3600; if (defaultTimeoutSec > 0 && userSpecifiedTimeoutSec > 0) { timeoutSec = userSpecifiedTimeoutSec; neverTimeOut = false; } else { neverTimeOut = true; logger.log(Level.INFO, ""Process will never be terminated due to time out"");  timeoutSec = Long.MAX_VALUE; } } @Override public boolean shouldTerminateProcess() { if (neverTimeOut) return false; long currentTimeSec = (new Date().getTime()) / 1000; if (currentTimeSec - creationTimeSec > timeoutSec) { return true; } return false; } }",KEEP KEEP REP KEEP REP KEEP ADD ADD ADD KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP KEEP KEEP REP REP KEEP REP KEEP REP DEL DEL DEL DEL DEL DEL KEEP KEEP,Rename Parameter
Fix the exception thrown in the case that a specified table name does not exist (#6328) (#6765),"private void testQueryException(String query, int errorCode)",private void testQueryException(String query),KEEP KEEP KEEP ADD ADD REP,Add Parameter
Allow reorder and swipe to delete on a playlist,"public AudioBrowserAdapter(int type, IEventsHandler eventsHandler, boolean sections, boolean canBeReordered) {","public AudioBrowserAdapter(int type, IEventsHandler eventsHandler, boolean sections) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
unify interop exception handling in FFI,"protected DotSymbol setSymbol(DLLInfo dllInfo, int nstOrd, long routines, int index) {","protected Object setSymbol(DLLInfo dllInfo, int nstOrd, long routines, int index) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
javadoc for WICKET-287 and URL -> Url,public final UrlCompressor getUrlCompressor(),public final URLCompressor getUrlCompressor(),KEEP KEEP REP KEEP,Change Return Type
"2198 renames, comments, and general clean up of RunIngestModulesWizard",private List<IngestProfile> getProfiles() { if (profiles.isEmpty()) { fetchProfileList();,private List<IngestProfile> getElements() { if (elements.isEmpty()) { fetchListContents();,KEEP KEEP REP KEEP KEEP REP KEEP REP,Rename Method
Guard registeredReceivers with synchronization in getRegisteredReceivers. Make getRegisteredReceivers to return immutable copy of registeredReceivers.,public ImmutableList<Wrapper> getRegisteredReceivers() {,public List<Wrapper> getRegisteredReceivers() {,KEEP REP KEEP KEEP,Change Return Type
Removing internal pools 9,LayoutState(ComponentContext context) {,void init(ComponentContext context) {,REP DEL KEEP KEEP,Rename Method
DbBook,"public static <B extends AbstractBook> B getBookExtra(Intent intent, String key, AbstractSerializer.BookCreator<B> creator) { return SerializerUtil.deserializeBook(intent.getStringExtra(key), creator);","public static Book getBookExtra(Intent intent, String key) { return SerializerUtil.deserializeBook(intent.getStringExtra(key));",KEEP KEEP ADD ADD ADD REP KEEP KEEP KEEP ADD ADD REP KEEP KEEP ADD REP,Change Return Type
fix merge conflicts that lost hiding controls,protected Collection<EventStripe> call() throws Exception {,protected Set<EventStripeNode> call() throws Exception {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
InvokerHelper: Refactor: Rename private method,"private static String formatCollection(Collection collection, boolean verbose, int maxSize, boolean safe) {","private static String formatList(Collection collection, boolean verbose, int maxSize, boolean safe) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Remove support for @Deprecated @Config(inheritImplementationMethods = true).,"ShadowInfo( String shadowedClassName, String shadowClassName, boolean callThroughByDefault, boolean looseSignatures, int minSdk, int maxSdk,","boolean inheritImplementationMethods, boolean looseSignatures, int minSdk, int maxSdk,",ADD ADD ADD ADD ADD KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Fixed error handling in the terse rest API and made the implementation more fluid by supporting lambda expressions,"Response(int responseCode, T responseData, String responseMessage) {","Response(int responseCode, T responseData) {",KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
UpdateLength and UpdateSlot: converted to cast pipelines,"protected RNull updateLength(RNull value, int length) {","protected RNull updateLength(RNull value, RAbstractIntVector lengthVector) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Android: Fix saving Horizonal Wii Remote overlay A/B/1/2 positions,"private void saveControlPosition(int sharedPrefsId, int x, int y, int controller, String orientation)","private void saveControlPosition(int sharedPrefsId, int x, int y, String orientation)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
Modified ValueNumberCache to use InstructionHandles rather than,"public Entry(InstructionHandle handle, ValueNumber[] inputValueList) { this.handle = handle;","public Entry(Instruction instruction, ValueNumber[] inputValueList) { this.instruction = instruction;",KEEP REP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Fixed small potential issue with multiple local variables of the same name but different types.,"private boolean hasLocalVariableWithIndex(char qualifier, int index) {",private boolean hasLocalVariableWithIndex(int index) {,KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
better type check in DispatchedCallNode.CachedNode,"public Object execute(VirtualFrame frame, RStringVector type) { if (isEqualType(type)) {","public Object execute(VirtualFrame frame, RStringVector aType) { if (S3DispatchNode.isEqualType(type, aType)) {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP DEL KEEP,Rename Parameter
2018.10.09 (1.52h30; Plot enhancements),"void drawShape(PlotObject plotObject, int x, int y, int size, int pointIndex) {","void drawShape(PlotObject plotObject, int x, int y, int size) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
$is is now $getType for reified types,public String getGetTypeMethodName() { return "$getType";,public String getIsMethodName(ProducedType type) { return "$is";,KEEP KEEP REP DEL KEEP KEEP REP,Remove Parameter
"InvocationBuilder: Special case the transformation of the arguments on a method of a value type, so we're not changing the argument list after it's supposed to have been transformed",protected List<JCExpression> transformArgumentList(TransformedInvocationPrimary transformedPrimary) {,protected List<JCExpression> transformArgumentList() {,KEEP KEEP ADD REP KEEP,Add Parameter
"NPE fix in RAttributable, Cast Excetion fix in CachedExtractVectorNode and fix in model.R",default void resetAllAttributes(@SuppressWarnings("unused") boolean nullify) {,default RAttributes resetAllAttributes(@SuppressWarnings("unused") boolean nullify) {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Performance improvements of Rf_eval,"@CachedContext(TruffleRLanguage.class) RContext ctx, @SuppressWarnings(""unused"") @Cached(""createClassProfile()"") ValueProfile otherInfoClassProfile, @Cached(""createClassProfile()"") ValueProfile downcallFrameClassProfile,","@Specialization(limit = ""CACHE_SIZE"", guards = {""cachedCallInfo.isCompatible(callInfo)""})",ADD ADD ADD ADD REP REP REP REP REP REP,Add Parameter
WICKET-6279 AttributeModifier.VALUELESS_ATTRIBUTE_REMOVE does not work after deserialisation,"protected Serializable newValue(final String currentValue, final String replacementValue)","protected String newValue(final String currentValue, final String replacementValue)",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"Fix #1825. We stop generating AbstractCallables with fields to hold the primary, and use a let outside the anonymous class instantiation instead","public static JCExpression methodReference(CeylonTransformer gen,","public static CallableBuilder methodReference(CeylonTransformer gen,",KEEP KEEP REP KEEP KEEP,Change Return Type
Rework Charges dto and way to store charge. Now all saas charges in single row in database,public String getState() {,public int getState() {,KEEP REP KEEP KEEP,Change Return Type
Don't use an upstream parameter except where it can be used to help performance.,public CommonDecoder(boolean onClient) {,public CommonDecoder(boolean upstream) {,KEEP KEEP REP KEEP,Rename Parameter
Improved SelectManyCheckbox with server side item disabling.,"protected void encodeOptionLabel(FacesContext context, SelectManyCheckbox checkbox, String containerClientId, SelectItem option) throws IOException {","protected void encodeOptionLabel(FacesContext context, SelectManyCheckbox checkbox, String containerClientId, String label) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
updated 08.12.2008 23:38,public void setDebugMode(int mode) { debugMode = mode;,public static void setDebugger(Debugger d) { debugger = d;,KEEP DEL KEEP REP REP KEEP REP KEEP REP,Rename Parameter
Use stop indices when mapping raptor path geometries,"private List<Coordinate> extractTransitLegCoordinates(TransitPathLeg<TripSchedule> pathLeg, int boardStopIndexInPattern, int alightStopIndexInPattern) {",private List<Coordinate> extractTransitLegCoordinates(TransitPathLeg<TripSchedule> pathLeg) {,KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
[Java] Archive read/write counters. (#1389),abstract Recorder newRecorder();,abstract SessionWorker<RecordingSession> newRecorder();,KEEP REP KEEP,Change Return Type
#7904,"protected void handleRedirect(FacesContext context, Throwable rootCause, ExceptionInfo info, boolean responseResetted) throws IOException {","protected void handleRedirect(FacesContext context, Throwable rootCause, ExceptionInfo info) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Fix name,"MetricTuple(String measurement, String tag, String field) { this.measurement = measurement;","MetricTuple(String measurment, String tag, String field) { this.measurement = measurment;",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
wip ChildFactor refactor,protected Node createNodeForKey(AbstractFile t) {,protected Node[] createNodes(AbstractFile t) {,KEEP REP REP KEEP KEEP,Change Return Type
Introduce a consistent entry-point for constructing a `EvaluationContext` in the Blaze-on-Skyframe codebase.,Supplier<EvaluationContext.Builder> evaluationContextBuilderSupplier) {,public QueryTransitivePackagePreloader(Supplier<BuildDriver> buildDriverSupplier) {,REP REP DEL KEEP,Add Parameter
rationalisation of redirect API and improved docs.,default void redirect(String to) { redirect((Object) to); },void redirect(String location) throws NotInRegistryException;,ADD KEEP KEEP ADD ADD REP REP REP,Rename Parameter
Refactor code to make it closet to the spec,void hybridComplexity() { complexity++; nestingLevel++;,void nestingInc() { nestingLevel++;,KEEP REP KEEP ADD KEEP,Rename Method
SONARJAVA-759 invalid dir should fail sonar.java.binaries,"private List<File> getFilesForPattern(File baseDir, String pathPattern, boolean libraryProperty) {","private List<File> getLibraryFilesForPattern(File baseDir, String pathPattern) {",KEEP KEEP REP KEEP KEEP ADD ADD REP KEEP,Add Parameter
[multistage] refactor MailboxSendOperator for testability and tests (#9773),"public static Iterator<TransferableBlock> splitBlock(TransferableBlock block, DataBlock.Type type, int maxBlockSize) {","public static List<TransferableBlock> splitBlock(TransferableBlock block, DataBlock.Type type, int maxBlockSize) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
refactor: extract TransferConstraint w/facilitated transfer,public TransferConstraint getConstraint() { return constraint;,public TransferPriority getPriority() { return priority;,KEEP REP REP KEEP KEEP REP,Change Return Type
Open vSwitch tunnel manager,public long getNetworkId() { return networkId;,public long getAccount() { return account;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Added a ChunkMesh to render the world.,public SpoutWorld getWorld(String name) {,public World getWorld(String name) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Simplified NodeHandler tree setup.,"public StaxAttrLoader(PackageResourceTable resourceTable, String attrType, ResType resType) { super(resourceTable, attrType, resType);","public StaxAttrLoader(PackageResourceTable resourceTable, String xpathExpr, String attrType, ResType resType) { super(resourceTable, xpathExpr, attrType, resType); } @Override public void onStart(XMLStreamReader xml, XmlContext xmlContext) throws XMLStreamException { name = xml.getAttributeValue(null, ""name""); format = xml.getAttributeValue(null, ""format""); pairs = new ArrayList<>(); }",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP DEL KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
"Rewrite the `rep`, `c`, `matrix` builtins to use vector data libraries","private int getElementSize(Object element, int elementIndex) {",private static int getElementSize(Object element) {,KEEP DEL KEEP KEEP ADD ADD REP KEEP,Add Parameter
[batch] Option to clean files before generation (#7465),"private GenerationRunner(CodegenConfigurator configurator, Path rootDir, boolean failFast, boolean clean) {","private GenerationRunner(CodegenConfigurator configurator, Path rootDir, boolean failFast) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
fix a flaky test case due to race condition with zk event (#8136),private void checkTableConfigChanges(List<String> tableNamesWithType) {,private void checkTableConfigChanges(List<String> allTableNamesWithType) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Write script to find total active tenants per time-frame,public ScriptResultType getTypeResult(),public Object getTypeResult(),KEEP REP KEEP,Change Return Type
THIRDEYE-203 Publish shaded jar for thirdeye-bootstrap and accept thirdeye.phase config,"public ThirdEyeJob(String jobName, Properties config)","public ThirdEyeJob(String phaseName, Properties config)",KEEP KEEP REP KEEP KEEP,Rename Parameter
[GR-35724] HotSpot to Native calls pass exception using ForeignException.,"private static JThrowable createExceptionOfSameType(JNIEnv env, Throwable original) { Class<? extends Throwable> originalType = original.getClass(); if (originalType == ForeignException.class) { return callCreateForeignException(env, JNIUtil.createHSArray(env, ((ForeignException)original).toByteArray())); } else { String className = originalType.getTypeName(); JClass exceptionClass = JNIUtil.findClass(env, WordFactory.nullPointer(), getBinaryName(className), false); if (exceptionClass.isNonNull()) { JNIMethod constructor = JNIMethod.findMethod(env, exceptionClass, false, false, ""<init>"", encodeMethodSignature(void.class, String.class)); if (constructor != null) { JNI.JValue args = StackValue.get(1, JNI.JValue.class); args.addressOf(0).setJObject(createHSString(env, original.getMessage())); return HotSpotCalls.getDefault().callNewObject(env, exceptionClass, constructor, args); } constructor = JNIMethod.findMethod(env, exceptionClass, false, false, ""<init>"", encodeMethodSignature(void.class)); if (constructor != null) { return HotSpotCalls.getDefault().callNewObject(env, exceptionClass, constructor, WordFactory.nullPointer()); }","private static <T extends JObject> T createExceptionOfSameType(JNIEnv env, Throwable original) { WordFactory.nullPointer(); String className = original.getClass().getTypeName(); JClass exceptionClass = JNIUtil.findClass(env, WordFactory.nullPointer(), getBinaryName(className), false); if (exceptionClass.isNonNull()) { JNIMethod constructor = JNIMethod.findMethod(env, exceptionClass, false, false, ""<init>"", encodeMethodSignature(void.class, String.class)); if (constructor != null) { JNI.JValue args = StackValue.get(1, JNI.JValue.class); args.addressOf(0).setJObject(createHSString(env, original.getMessage())); T res = HotSpotCalls.getDefault().callNewObject(env, exceptionClass, constructor, args); return res; } constructor = JNIMethod.findMethod(env, exceptionClass, false, false, ""<init>"", encodeMethodSignature(void.class)); if (constructor != null) { T res = HotSpotCalls.getDefault().callNewObject(env, exceptionClass, constructor, WordFactory.nullPointer()); return res;",KEEP KEEP REP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP REP DEL,Change Return Type
"Removed use of ClassObserver interface, which was tied to",public void observeClass(ClassDescriptor classDescriptor) { JavaClass clazz; try { clazz = AnalysisContext.currentAnalysisContext().lookupClass(classDescriptor); } catch (ClassNotFoundException e) { return; },public void observeClass(JavaClass clazz) {,KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
replace FLAG_IS_TRANSITION_KEY_SET with FLAG_MATCH_HOST_BOUNDS_TRANSITIONS,boolean matchHostBoundsTransitions) {,boolean isTransitionKeySet) {,KEEP REP KEEP,Rename Parameter
Errors only flag is now supported when loading XML and CSV files,"private void readSamples(TestResultWrapper testResults, Visualizer visualizer, boolean showAll) throws Exception {","private void readSamples(TestResultWrapper testResults, Visualizer visualizer) throws Exception {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Add code to append to Python modules path to JythonModuleLoader,"private static Object createObjectFromScript(File script, String className, Class interfaceClass) { PythonInterpreter interpreter = new PythonInterpreter(); interpreter.exec(""import sys""); String path = Matcher.quoteReplacement(script.getParent()); interpreter.exec(""sys.path.append('"" + path + ""')"");","private static Object createObjectFromScript(File script, String className, Class clazz) { PythonInterpreter interpreter = new PythonInterpreter(); ",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Introduce maxJourneyDuration,Duration maxJourneyDuration,Duration maxJourneyTime,KEEP REP,Rename Parameter
Javadoc through ShadowSettings,"public void post(Runnable runnable, long delayMillis) { scheduler.postDelayed(runnable, delayMillis);","public void post(Runnable r, long delayMillis) { scheduler.postDelayed(r, delayMillis);",KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
Index directory names,"void ingest(FsContent fsContent) throws IngesterException { if (fsContent.isDir() ) { ingest(new NullContentStream(fsContent), getContentFields(fsContent), 0); } else { ingest(new FscContentStream(fsContent), getContentFields(fsContent), fsContent.getSize()); }","void ingest(FsContent f) throws IngesterException { ingest(new FscContentStream(f), getContentFields(f), f.getSize());",KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP,Rename Parameter
Backed out changeset: 3e30f56645cf (causes NPEs),"public WhileRepeatingNode(WhileNode whileNode, ConvertBooleanNode condition, RNode body) { this.whileNode = whileNode;","public WhileRepeatingNode(ConvertBooleanNode condition, RNode body) {",KEEP ADD ADD REP KEEP KEEP KEEP KEEP ADD ADD ADD,Add Parameter
Addressed Ramans concerns,void initalizeFilters() {,void updateFilters() {,KEEP REP KEEP,Rename Method
git-svn-id: https://findbugs.googlecode.com/svn/trunk@7683 eae3c2d3-9b19-0410-a86e-396b6ccb6ab3,public FieldDereference(String list) {,"public FieldDereference(String list, int x) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
refactor boolean,public boolean isHorizontalScroll() {,public Boolean getHorizontalScroll() {,KEEP REP REP KEEP,Change Return Type
Added preconditions for custom bit set construction,"private CustomBitSet(final int nrBytes, final ByteBuffer buffer) { if (nrBytes < 1) { throw new IllegalArgumentException(""CustomBitSet requires at least one byte of storage, asked for "" + nrBytes); } if (buffer.capacity() < nrBytes) { throw new IllegalArgumentException(""Requested bit set capacity is "" + nrBytes + "" bytes, but the underlying byte buffer has a capacity of "" + buffer.capacity() + "", which is less than requested""); } this.nrBytes = nrBytes;","private CustomBitSet(final int numBytes, final ByteBuffer buffer) { nrBytes = numBytes;",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP,Rename Parameter
Use jdk.internal.misc.Unsafe instead of sun.misc.Unsafe,"private static void registerUnsafeGetAndOpPlugins(Registration r, boolean isSunMiscUnsafe, boolean explicitUnsafeNullChecks, JavaKind[] unsafeJavaKinds) {","private static void registerUnsafeGetAndOpPlugins(Registration r, boolean explicitUnsafeNullChecks, JavaKind[] unsafeJavaKinds, String objectKindName) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP REP DEL DEL KEEP,Add Parameter
android/UsbSerialHelper: use serial number to support multiple devices of the same kind,boolean withSerialNumber) {,"private static String makePortId(UsbDevice device, int iface) {",REP REP DEL DEL DEL DEL DEL KEEP,Add Parameter
cut dependency to kompileOptions from rewriter,"public ExpandMacros(Module mod, KExceptionManager kem, FileUtil files, GlobalOptions globalOptions, List<String> transitions, SMTOptions smtOptions) {","public ExpandMacros(Module mod, KExceptionManager kem, FileUtil files, GlobalOptions globalOptions, KompileOptions kompileOptions) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP REP KEEP,Add Parameter
change how plugin properties are set,"BugCollectionStorageCloud(CloudPlugin plugin, BugCollection bc, Properties properties) { super(plugin, bc, properties);","BugCollectionStorageCloud(CloudPlugin plugin, BugCollection bc) { super(plugin, bc);",KEEP KEEP KEEP ADD ADD REP KEEP KEEP ADD REP,Add Parameter
Simplify deleteMedia usage,final VlcRunnable runnable) {,"public static AlertDialog deleteMedia( final Context context, final String addressMedia, final VLCCallbackTask task ) {",DEL DEL DEL DEL KEEP REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
"Reverse Bug 61602, Bug 61595, Bug 61593","public void setVarName(String name) { setProperty(VAR_NAME, name); }",public void setVarName(String varName) { this.varName = varName;,KEEP KEEP KEEP REP KEEP REP REP REP,Rename Parameter
Utility methods for new contact editor flow,public AccountWithDataSet(Parcel in) {,"public AccountWithDataSet(Parcel in, String dataSet) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
SONARJAVA-2034 compute flows for all operands of relational SV,"private static int correspondingArgumentIndex(Set<SymbolicValue> candidates, ExplodedGraph.Node invocationNode) {","private static int correspondingArgumentIndex(SymbolicValue candidate, ExplodedGraph.Node invocationNode) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Reimplement class and method filtering in ASM-based classloader.,private void filterNasties(MethodNode callingMethod) { ListIterator<AbstractInsnNode> instructions = callingMethod.instructions.iterator(); while (instructions.hasNext()) { AbstractInsnNode node = instructions.next();,private void filterNasties(MethodNode methodNode) { ListIterator<AbstractInsnNode> li = methodNode.instructions.iterator(); while (li.hasNext()) { AbstractInsnNode node = li.next();,KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Modified UnconditionalValueDerefAnalysis so that the dataflow,"private Set<Location> getDerefLocationSet(int vn) { for (Map.Entry<ValueNumber, Set<Location>> entry : derefLocationSetMap.entrySet()) {","private BitSet getDerefLocationSet(int vn) { for (Map.Entry<ValueNumber, BitSet> entry : derefLocationSetMap.entrySet()) {",KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Don't overuse applicationContext for MainActivity,public static void showProgressBar() {,public static void showProgressBar(Context context) { if (context == null) return;,KEEP KEEP KEEP REP DEL KEEP DEL DEL DEL DEL DEL,Remove Parameter
typo,public void initializeOldTronPower() {,public void InitializeOldTronPower() {,KEEP KEEP REP KEEP,Rename Method
Make addition and removal of turn restrictions thread-safe,public Set<TurnRestriction> getTurnRestrictions() { return turnRestrictions;,public List<TurnRestriction> getTurnRestrictions() { if (turnRestrictions == null) { return Collections.emptyList(); } else { return ImmutableList.copyOf(turnRestrictions); },KEEP REP KEEP KEEP DEL DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL,Change Return Type
improved remove function,public static ClientValidationConstraint removeConstraintMapping(Class<? extends Annotation> constraint) { return CONSTRAINT_MAPPING.remove(constraint);,public static void removeConstraintMapping(Class<? extends Annotation> constraint) { CONSTRAINT_MAPPING.remove(constraint);,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD KEEP,Change Return Type
HDFS-6294. Use INode IDs to avoid conflicts when a file open for write is renamed (cmccabe),"private void beginFileLease(final long inodeId, final DFSOutputStream out)","private void beginFileLease(final String src, final DFSOutputStream out)",KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Minor fix in error reporting in REPL,"private static String getErrorText(ExecutorService executor, PolyglotException eIn) {",private static String getErrorText(PolyglotException eIn) {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Tolerate gaps between ZIP entries when jumping between Local File Headers.,"long offset, int length,","public boolean createFromZip(String origFileName, ZipFile zipFile, ZipEntry entry, int length,",REP REP DEL DEL DEL DEL DEL DEL KEEP KEEP,Add Parameter
Fixed #586 problem with [].string.first,ProducedType simplifyType(ProducedType orgType) { ProducedType type = orgType;,ProducedType simplifyType(ProducedType type) {,KEEP KEEP REP KEEP ADD ADD ADD ADD,Rename Parameter
UP-2123 clean up checks,"private CheckResult(boolean success, boolean fatal, String message, String remediationAdvice) {","private CheckResult(boolean success, String message, String remediationAdvice) {",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
Removes unused method args [2/n],"void processVisibilityOutputs(@Nullable Rect localVisibleRect, boolean isDirty) {","LayoutState layoutState, @Nullable Rect localVisibleRect, Rect previousLocalVisibleRect, boolean isDirty, @Nullable PerfEvent mountPerfEvent) {",REP REP DEL KEEP KEEP DEL DEL KEEP REP DEL DEL DEL KEEP,Remove Parameter
IAM/STS OpenID Connect implementation updates for EUCA-12718,"public static <T> CompatFunction<T,List<T>> listUnit() { return new CompatFunction<T,List<T>>() {","public static <T> Function<T,List<T>> listUnit() { return new Function<T,List<T>>() {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
Quick access for main media folders in browser,"BitmapDrawable getIcon(MediaWrapper media, boolean specialFolders) {",BitmapDrawable getIcon(MediaWrapper media) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Android: Adjust accel/gyro data for screen orientation,public MotionListener(Activity activity),public MotionListener(Context context),KEEP REP REP,Rename Parameter
bootstrap tool constructs threshold function,StarTreeRecordThresholdFunction thresholdFunction),"public StandAloneBootstrapTool(Collection<Iterable<StarTreeRecord>> recordStreams, File outputDir)",REP REP DEL DEL DEL,Add Parameter
Drop-in of tab model support,"protected void encodeMarkup(FacesContext context, TabView tabView) throws IOException { ResponseWriter writer = context.getResponseWriter(); String clientId = tabView.getClientId(context);","protected void encodeMarkup(FacesContext facesContext, TabView tabView) throws IOException { ResponseWriter writer = facesContext.getResponseWriter(); String clientId = tabView.getClientId(facesContext); int activeIndex = tabView.getActiveIndex();",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP DEL DEL DEL DEL,Rename Parameter
Re-implement 'withCollection'.,"CoreContainer coreContainer) throws IOException, InterruptedException {","PlacementPlugin placementPlugin) throws IOException, InterruptedException {",REP REP KEEP KEEP KEEP KEEP,Rename Parameter
Use more Result types,"public static Result<TripTimes, UpdateError> createUpdatedTripTimes(",public static TripTimes createUpdatedTripTimes(,KEEP KEEP ADD REP KEEP,Change Return Type
[THIRDEYE-371] Select the trees to query such that the number of trees to query is minimized. Bug fixes and adding test case,"public List<UUID> selectTreesToQuery(final Map<UUID, IndexMetadata> treeMetadataMap, final TimeRange queryTimeRange) {","private List<UUID> selectTreesToQuery(StarTreeConfig config, final TimeRange queryTimeRange) {",REP KEEP ADD ADD REP REP KEEP KEEP KEEP KEEP,Rename Parameter
generics,public IModel<T> next(),public Object next(),KEEP REP KEEP,Change Return Type
compiler: ArrayCopySnippets improve index stamps with Pis,"protected CheckedLimits checkLimits(Object src, int srcPos, Object dest, int destPos, int length, @SuppressWarnings(""unused"") JavaKind elementKind, Counters counters) {","protected void checkLimits(Object src, int srcPos, Object dest, int destPos, int length, @SuppressWarnings(""unused"") JavaKind elementKind, Counters counters) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
refactoring: IPredefinedNetworkLink has been introduced,"public OPDSCustomNetworkLink(int id, String siteName, String title, String summary, String language, UrlInfoCollection<UrlInfoWithDate> infos) { super(id, removeWWWPrefix(siteName), title, summary, language, infos);","public OPDSCustomNetworkLink(int id, String siteName, String title, String summary, UrlInfoCollection<UrlInfoWithDate> infos) { super(id, removeWWWPrefix(siteName), title, summary, null, infos);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Add Parameter
Send directly dir list in ArrayList format,public static ArrayList<String> getStorageDirectories() {,public static String[] getStorageDirectories() { String[] dirs = null;,KEEP KEEP REP KEEP KEEP DEL DEL DEL DEL,Change Return Type
"Fixed volume report generation so that instance attachments are included correctly, formatting is correct for instance attachments, and usgae is in GB-DAys",public long getGBSecs(),public long getDurationMs(),KEEP KEEP REP,Rename Method
saveCover() -> getCover(),public synchronized Bitmap getCover(Book book) {,"public synchronized boolean saveCover(Book book, String url) {",KEEP KEEP REP REP REP DEL DEL KEEP,Change Return Type
WICKET-4927 allow headers to be set even if meta data is no longer,private void stopBuffering(),private void writeBuffered(),KEEP KEEP REP,Rename Method
UpdateAttr/UpdateAttributes: converted to cast pipelines,"protected RAbstractContainer updateAttributes(RAbstractContainer abstractContainer, @SuppressWarnings(""unused"") RNull list) { RAbstractContainer resultVector = (RAbstractContainer) abstractContainer.getNonShared();","protected RAbstractVector updateAttributes(RAbstractVector abstractVector, @SuppressWarnings(""unused"") RNull list) { RAbstractVector resultVector = (RAbstractVector) abstractVector.getNonShared();",KEEP REP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP REP,Change Return Type
model loader: change API for UnknownType error reporter,protected UnknownType.ErrorReporter makeModelErrorReporter(String message) {,protected Runnable makeModelErrorReporter(String message) {,KEEP REP KEEP KEEP KEEP,Change Return Type
2021.04.30 (1.53j31; CurveFitter weights),double fitCurve(boolean withWeights) {,double fitCurve() {,KEEP ADD REP KEEP,Add Parameter
HDFS-7270. Add congestion signaling capability to DataNode write protocol. Contributed by Haohui Mai.,public int getReply(int i) { return proto.getReply(i);,public Status getReply(int i) { return proto.getStatus(i);,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
Add support for new Java Date API to Calendar component #2500,V getStartDate();,Date getStartDate();,REP KEEP,Change Return Type
Added support for the progress callback to FindBugs2.,"public void build(IClassPath classPath, IClassPathBuilderProgress progress) throws ResourceNotFoundException, IOException, InterruptedException {","public void build(IClassPath classPath) throws ResourceNotFoundException, IOException, InterruptedException {",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
DSKCLI-369 keep sync with 4.x,Request<Workspace> withName(String name);,Request<WorkspaceReference> withName(String name);,REP KEEP KEEP,Change Return Type
Remove LayoutState dependency from Transition.java,"TransitionsExtension.TransitionsExtensionInput transitionsExtensionInput, AnimatedProperty property) { final RootItemResolver resolver = new RootItemResolver(transitionsExtensionInput, property); final TransitionId rootTransitionId = transitionsExtensionInput.getRootTransitionId();","TransitionUnit transition, LayoutState layoutState, AnimatedProperty property) { final RootItemResolver resolver = new RootItemResolver(layoutState, property); final TransitionId rootTransitionId = layoutState.getRootTransitionId();",REP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
WICKET-3734 org.apache.wicket.extensions.markup.html.tree.table.PropertyRenderableColumn IConverter type param,public IConverter<T> getConverter(),public IConverter<?> getConverter(),KEEP REP KEEP,Change Return Type
EUCA-13029 Better error handling and retries,"public static CommandOutput enableLogicalVolume(String lvName) throws EucalyptusCloudException { try { return SystemUtil.runWithRawOutput(new String[] {EUCA_ROOT_WRAPPER, ""lvchange"", ""-ay"", lvName}); } catch (Exception ex) { throw new EucalyptusCloudException(ex.toString(), ex); }","public static String enableLogicalVolume(String lvName) throws EucalyptusCloudException { return SystemUtil.run(new String[] {EUCA_ROOT_WRAPPER, ""lvchange"", ""-ay"", lvName});",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
remove useless argument in ArrayAdapter's constructor,"public AudioSongsListAdapter(Context context) { super(context, 0);","public AudioSongsListAdapter(Context context, int textViewResourceId) { super(context, textViewResourceId);",KEEP KEEP REP DEL DEL KEEP KEEP REP,Remove Parameter
review: Add JavaDoc to ConfigType,public String quote(@Nonnull Object value) {,public String wrap(@Nonnull Object value) {,KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Insert deopt entries conditionally in PodFactorySubstitutionMethod.,"private static int startMethod(HostedGraphKit kit, CompilationInfo deoptTargetInfo, int nextDeoptIndex) { if (deoptTargetInfo != null) { FrameState initialState = kit.getGraph().start().stateAfter(); if (shouldInsertDeoptEntry(deoptTargetInfo, initialState.bci, false, false)) { return appendDeoptWithExceptionUnwind(kit, initialState, initialState.bci, nextDeoptIndex); }","private static int startMethod(HostedGraphKit kit, boolean isDeoptTarget, int nextDeoptIndex) { if (!isDeoptTarget) { return nextDeoptIndex;",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD REP,Rename Parameter
ClassTransformer.makeOverloadsForDefaultedParameter(): Get rid of one of the versions of makeOverloadsForDefaultedParameter(),"Tree.ParameterList parameterList, Tree.Parameter currentParameter,","Tree.ParameterList paramList, Tree.Parameter currentParam,",KEEP REP KEEP REP,Rename Parameter
Fix for #1205: direct invocation of metamodel literals,"public JCExpression transformTermForInvocation(Tree.Term term, TermTransformer transformer) { if (term instanceof Tree.QualifiedMemberExpression) { return transform((Tree.QualifiedMemberExpression)term, transformer); } else if (term instanceof Tree.BaseMemberExpression) { return transform((Tree.BaseMemberExpression)term, transformer); } else if (term instanceof Tree.BaseTypeExpression) { return transform((Tree.BaseTypeExpression)term, transformer); } else if (term instanceof Tree.QualifiedTypeExpression) { return transform((Tree.QualifiedTypeExpression)term, transformer); } else { JCExpression primaryExpr = transformExpression(term);","public JCExpression transformPrimary(Tree.Primary primary, TermTransformer transformer) { if (primary instanceof Tree.QualifiedMemberExpression) { return transform((Tree.QualifiedMemberExpression)primary, transformer); } else if (primary instanceof Tree.BaseMemberExpression) { return transform((Tree.BaseMemberExpression)primary, transformer); } else if (primary instanceof Tree.BaseTypeExpression) { return transform((Tree.BaseTypeExpression)primary, transformer); } else if (primary instanceof Tree.QualifiedTypeExpression) { return transform((Tree.QualifiedTypeExpression)primary, transformer); } else if (primary instanceof Tree.InvocationExpression){ JCExpression primaryExpr = transform((Tree.InvocationExpression)primary);",KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP DEL DEL DEL KEEP KEEP KEEP REP,Rename Parameter
Adding a 3 stage snapshot ... finalize -> preSnapshot -> copySnapshot,public void preSnapshot() {,public void snapshotStart() {,KEEP KEEP REP KEEP,Rename Method
Simplified APerm,"public RAbstractVector aPerm(RAbstractVector vector, RAbstractIntVector permVector, byte resize) {","public RRawVector aPerm(RAbstractRawVector vector, RAbstractIntVector permVector, byte resize) { controlVisibility(); int[] dim = getDimensions(vector); int[] perm = getPermute(dim, permVector); int[] posV = new int[dim.length]; int[] newDim = applyPermute(dim, perm, false); byte[] result = new byte[vector.getLength()]; for (int i = 0; i < result.length; i++) { int posOld = toPos(applyPermute(posV, perm, true), dim); result[i] = vector.getDataAt(i).getValue(); posV = incArray(posV, newDim); } RRawVector r = RDataFactory.createRawVector(result); r.copyAttributesFrom(vector); if (resize == 0) { r.setDimensions(dim); } else { r.setDimensions(newDim);",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
revert back to using meta qualified name in type converter caches,"public static GeneratedProxyBytes getProxyKlassBytes(String metaName, ObjectKlass[] interfaces, EspressoContext context) {","public static GeneratedProxyBytes getProxyKlassBytes(int metaIdentity, ObjectKlass[] interfaces, EspressoContext context) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
remove RGroupGenerics (moved to RDispatch),"public Object executeDynamic(VirtualFrame frame, RArgsValuesAndNames argAndNames, String genericName, RDispatch dispatch, RFunction builtinFunction) {","public Object executeDynamic(VirtualFrame frame, RArgsValuesAndNames argAndNames, String genericName, RGroupGenerics group, RFunction builtinFunction) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Introduced RPromise.materialize,"public boolean deoptimize() { if (!deoptimized) { deoptimized = true; feedback.onFailure(); materialize(); return false; } return true; } @Override public boolean materialize() { if (execFrame == null) { this.execFrame = (MaterializedFrame) Utils.getStackFrame(FrameAccess.MATERIALIZE, frameId); return false; } return true; }","public void deoptimize() { deoptimized = true; feedback.onFailure(); this.execFrame = (MaterializedFrame) Utils.getStackFrame(FrameAccess.MATERIALIZE, frameId); }",KEEP REP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD KEEP,Change Return Type
"createPersonaForAccount() returns the Persona created, instead of PersonaAccount.","public static Persona createPersonaForAccount(String personaName, String comment, PersonaStatus status, CentralRepoAccount account, String justification, Persona.Confidence confidence) throws CentralRepoException {","public static PersonaAccount createPersonaForAccount(String personaName, String comment, PersonaStatus status, CentralRepoAccount account, String justification, Persona.Confidence confidence) throws CentralRepoException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Removed false positives with start index != 0,private String getSimpleForUpdateXpath(String itName) { return "./StatementExpressionList[count(*)=1]",private String getSimpleForStatementXpath(String itName) { return ",KEEP KEEP REP KEEP KEEP KEEP REP,Rename Method
WICKET-807 MockHttpServletRequest.addFile does not work with binary files,private byte[] buildRequest(),private String buildRequest(),KEEP REP KEEP,Change Return Type
WICKET-5350 remove wildcards from #ofList() and others,public static <C> IModel<List<C>> ofList(final List<C> list),public static <C> IModel<List<? extends C>> ofList(final List<? extends C> list),KEEP KEEP KEEP REP DEL DEL KEEP REP DEL DEL KEEP,Change Return Type
Remove unused parameters,"public AddLogicalImageTask(String deviceId, List<String> imagePaths, String timeZone,","public AddLogicalImageTask(String deviceId, List<String> imagePaths, int sectorSize, String timeZone, boolean ignoreFatOrphanFiles, String md5, String sha1, String sha256, ImageWriterSettings imageWriterSettings,",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
Revert "YARN-3878. AsyncDispatcher can hang while stopping if it is configured for draining events on stop. (Varun Saxena via kasha)",@VisibleForTesting protected boolean isDrained() { return this.drained; },@VisibleForTesting protected boolean hasPendingEvents() { return !eventQueue.isEmpty(); } @VisibleForTesting protected boolean isEventThreadWaiting() { return eventHandlingThread.getState() == Thread.State.WAITING; },KEEP KEEP KEEP REP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Method
There was 500 Internal Server Error at the Analytics after the login as prodadmin,public static String getCurrentUserId(HttpServletRequest request) throws IOException {,public static String getCurrentUserId(Principal userPrincipal) throws IOException {,KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
refactor: Fix old "router" references,"OtpServerContext serverContext,","OtpServerContext router,",KEEP REP,Rename Parameter
Add column update delta histogram,"public Pair<Long,Long> addAllWithSizeDelta(ColumnFamily cm, Allocator allocator, Function<Column, Column> transformation, SecondaryIndexManager.Updater indexer)","public long addAllWithSizeDelta(ColumnFamily cm, Allocator allocator, Function<Column, Column> transformation, SecondaryIndexManager.Updater indexer)",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Remove usages of deprecated Truffle API (truffle rev. 8eb52e74643).,"protected CallTarget parseFile(String path, String languageIdArg) {","protected CallTarget parseFile(String path, String languageId) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix shared lock acquisition criteria (#13390),"private static boolean areAllEqualOrHigherPriorityLocksSharedOrRevoked(List<TaskLockPosse> lockPosses, int priority)",private static boolean isAllSharedLocks(List<TaskLockPosse> lockPosses),KEEP KEEP KEEP ADD ADD REP REP,Add Parameter
Catalog`s visibility code cleanup (2),public void invalidateVisibility() { myUpdateVisibility = true;,public void invalidateAccountDependents() { myUpdateAccountDependents = true;,KEEP KEEP REP KEEP REP KEEP KEEP,Rename Method
Make DaoSuper override makeMethodNameQualifier() to return super.,"protected final void makeBody(DefaultedArgumentOverload overloaded, MethodDefinitionBuilder overloadBuilder, ListBuffer<JCExpression> args, ListBuffer<JCStatement> vars) { JCExpression invocation = overloaded.makeInvocation(args); Declaration model = overloaded.getModel(); if (!isVoid(model) || model instanceof Method && !(Decl.isUnboxedVoid(model)) || (model instanceof Method && Strategy.useBoxedVoid((Method)model)) || Strategy.generateInstantiator(model)) { if (!vars.isEmpty()) { invocation = make().LetExpr(vars.toList(), invocation); } overloadBuilder.body(make().Return(invocation)); } else { vars.append(make().Exec(invocation)); invocation = make().LetExpr(vars.toList(), makeNull()); overloadBuilder.body(make().Exec(invocation)); }","protected final void makeBody(MethodDefinitionBuilder overloadBuilder, ListBuffer<JCExpression> args, ListBuffer<JCStatement> vars) { JCExpression invocation = makeInvocation(args); Declaration model = getModel(); if (!isVoid(model) || model instanceof Method && !(Decl.isUnboxedVoid(model)) || (model instanceof Method && Strategy.useBoxedVoid((Method)model)) || Strategy.generateInstantiator(model)) { if (!vars.isEmpty()) { invocation = make().LetExpr(vars.toList(), invocation); } overloadBuilder.body(make().Return(invocation)); } else { vars.append(make().Exec(invocation)); invocation = make().LetExpr(vars.toList(), makeNull()); overloadBuilder.body(make().Exec(invocation)); } }",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL KEEP,Add Parameter
Implemented RCallNode in Lapply and Vapply,"public abstract Object execute(VirtualFrame frame, RAbstractVector vec, RFunction fun, RArgsValuesAndNames optionalArgs);","public abstract Object execute(VirtualFrame frame, RAbstractVector x, RFunction fun, RArgsValuesAndNames optionalArgs);",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
code cleanup,"private boolean runTokenAuthorization(String authUrl, String authToken, String code) {","private String runTokenAuthorization(String authUrl, String authToken, String code) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
annorarions: Rename AttributeDefinitionBuilder.noAnnotations() -> noModelAnnotations() for clarity,public AttributeDefinitionBuilder noModelAnnotations() { this.noModelAnnotations = true;,public AttributeDefinitionBuilder noAnnotations() { this.noAnnotations = true;,KEEP KEEP REP KEEP REP KEEP KEEP,Rename Method
Material define model if Spout.getEngine is Client engine.,"public Material(short dataMask, String name, String model) {","public Material(short dataMask, String name, String texturePath, Rectangle textureOffset) {",KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Rename Parameter
Make ImportVCardActivity cache vCard file into local data directory.,"Uri uri, int estimatedType, String estimatedCharset, boolean useV30, int entryCount, int id) {","private void runInternal(Account account, Uri[] uris, int id) {",ADD ADD ADD ADD REP REP REP REP REP REP KEEP KEEP KEEP,Add Parameter
Improve custom 2i performance and abstraction,"public void update(ByteBuffer rowKey, Cell oldCol, Cell col, OpOrder.Group opGroup) {","public void update(ByteBuffer rowKey, Cell col, OpOrder.Group opGroup) {",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
[java] report assignment rather than formal param,"private void checkForDirectAssignment(Object ctx, final ASTFormalParameter parameter,","private boolean checkForDirectAssignment(Object ctx, final ASTFormalParameter parameter,",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
do not convert values with classes to primitives in ConvertValue,@Cached("create()") @SuppressWarnings("unused") ClassHierarchyNode hierarchyNode) {,@Specialization(guards = "value.getLength() == 1") protected static int convertIntVector(RIntVector value) {,REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
"3752 add vericrpyt functional test, modify existing encryption test to use Utils",public void testVeriCryptSupport() {,"private void runIngestJob(List<Content> datasources, IngestModuleFactory factory) { IngestModuleIngestJobSettings settings = factory.getDefaultIngestJobSettings(); IngestModuleTemplate template = new IngestModuleTemplate(factory, settings); template.setEnabled(true); ArrayList<IngestModuleTemplate> templates = new ArrayList<>(); templates.add(template); IngestJobSettings ingestJobSettings = new IngestJobSettings(EncryptionDetectionTest.class.getCanonicalName(), IngestType.FILES_ONLY, templates);",REP KEEP REP DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
be even smarter about ordering of method evaluation within a class when performing guaranteed dereference analysis,"private boolean hasCallsToSameClass(ClassContext classContext, Method method, Set<String> calledMethods) {","private boolean hasCallsToSameClass(ClassContext classContext, Method method) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
SONARJAVA-1973 use false branch when reaching max loop on for each (#1108),"public void enqueue(ExplodedGraph.ProgramPoint newProgramPoint, ProgramState programState, boolean exitPath) { ExplodedGraph.ProgramPoint programPoint = newProgramPoint;","public void enqueue(ExplodedGraph.ProgramPoint programPoint, ProgramState programState, boolean exitPath) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Rename Parameter
Lazy initializing LithoYogaMeasureFunction and using stateless flag from component tree,"static YogaMeasureFunction getYogaMeasureFunction(final ComponentContext context) { if (context.isStatelessComponentEnabled()) { return context.getLayoutStateContext().getLithoYogaMeasureFunction(); } if (sMeasureFunction == null) { sMeasureFunction = new LithoYogaMeasureFunction(null, null, false);","static YogaMeasureFunction getYogaMeasureFunction( final Component component, @Nullable LayoutStateContext layoutStateContext) { if (component.isStateless()) { return layoutStateContext.getLithoYogaMeasureFunction();",KEEP KEEP ADD ADD REP REP REP REP REP REP REP REP KEEP ADD ADD REP KEEP ADD ADD ADD ADD REP REP,Add Parameter
Re-write of StarTree and StarTreeIndexNode. (#425),"private void serializeTree(StarTreeBuilder starTreeBuilder, boolean enableOffHeapFormat) throws Exception {",private void serializeTree(StarTreeBuilder starTreeBuilder) throws Exception {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Removes ComponentContext from InternalNode API,public Context getAndroidContext() { return mContext;,public ComponentContext getContext() { return mComponentContext;,KEEP REP REP KEEP KEEP REP,Change Return Type
Populate correct known anomalies to anomaly detection functions (#754),"private List<RawAnomalyResultDTO> getExistingRawAnomalies(BaseAnomalyFunction anomalyFunction, long monitoringWindowStart, long monitoringWindowEnd) {",private List<RawAnomalyResultDTO> getExistingAnomalies() {,KEEP KEEP ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Made it so now save the location of the divider of the split panes.,JSplitPane summaryTab(),Component summaryTab(),REP KEEP,Change Return Type
Remove table concept from codebase,public void initLoadingInvertedIndexColumnSet(String[] columnCollections) { _loadingInvertedIndexColumnSet.addAll(Arrays.asList(columnCollections));,"public void initLoadingInvertedIndexColumnSet(String tableName, String[] columnCollections) { _tableToloadingInvertedIndexColumnMap.put(tableName, new HashSet<String>(Arrays.asList(columnCollections)));",KEEP KEEP REP DEL DEL KEEP KEEP REP DEL DEL,Remove Parameter
Add #getFastDigest method to SyscallCache and use it in DigestUtils. Thread the real per-build SyscallCache through to everywhere that calls into DigestUtils.,"Artifact artifact, FileValue fileValue, SyscallCache syscallCache) throws IOException {","public static FileArtifactValue createForSourceArtifact(Artifact artifact, FileValue fileValue) throws IOException {",REP REP REP REP REP REP DEL KEEP KEEP KEEP,Add Parameter
disable and hide goto result button in context content viewer,private void showSourceText(boolean show) { jSourceTextLabel.setVisible(show); jSourceGoToResultButton.setEnabled(show);,private void showSourceText(boolean isVisible) { jSourceTextLabel.setVisible(isVisible);,KEEP KEEP KEEP REP KEEP ADD REP,Rename Parameter
Disable PTR for h-scrolls,@State boolean canPTR) {,"@Prop(optional = true) boolean disablePTR,",REP REP REP REP DEL,Rename Parameter
Allow context dependent checks when loading Starlark modules,"public static GuardedValue onlyWhenExperimentalFlagIsTrue(String flag, Object obj) { if (flag.charAt(0) != '-' && flag.charAt(0) != '+') { throw new IllegalArgumentException(String.format(""flag needs [+-] prefix: %s"", flag)); } return new GuardedValue() { @Override public Object getObject() { return obj; } @Override public String getErrorFromAttemptingAccess(String name) { return name + "" is experimental and thus unavailable with the current flags. It may be enabled by"" + "" setting --"" + flag.substring(1); } @Override public boolean isObjectAccessibleUsingSemantics( StarlarkSemantics semantics, Object clientData) { return semantics.isFeatureEnabledBasedOnTogglingFlags(flag, """"); } };","public static FlagGuardedValue onlyWhenExperimentalFlagIsTrue(String flag, Object obj) { return new FlagGuardedValue(obj, flag, FlagType.EXPERIMENTAL);",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP,Change Return Type
"List can be reordered , I'll update the UI by day's end.",public AuxClassPathController(DesignerRoot designerRoot) {,"public AuxClassPathController(DesignerRoot designerRoot, MainDesignerController parent) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
HDFS-8269. getBlockLocations() does not resolve the .reserved path and generates incorrect edit logs when updating the atime. Contributed by Haohui Mai.,"LocatedBlocks getBlockLocations(String clientMachine, String srcArg,","LocatedBlocks getBlockLocations(String clientMachine, String src,",KEEP KEEP KEEP KEEP REP,Rename Parameter
Add experiment to recycle ComponentHosts by Window,final MountState mountState) {,"void releaseMountContent(final Context context, final MountItem item, final String releaseCause) {",DEL DEL DEL DEL KEEP REP REP DEL DEL DEL KEEP,Add Parameter
add more options to ReJarClasses,public static List<String> readFromStandardInput() throws IOException { return readFrom(new InputStreamReader(System.in)); } public static List<String> readFrom(Reader r) throws IOException { BufferedReader in = new BufferedReader(r);,public static String [] readFromStandardInput() throws IOException { BufferedReader in = new BufferedReader(new InputStreamReader(System.in));,KEEP KEEP REP DEL KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP REP DEL,Change Return Type
"Fixed the activate item message, decoder debugging.",public ActivateItemMessage(int slot) { this.slot = slot;,"public ActivateItemMessage(int id, int item) { this.id = id; this.item = item;",KEEP KEEP REP DEL DEL KEEP REP KEEP REP DEL DEL DEL,Rename Parameter
more tweaking to tq analysis,"public static boolean valuesConflict(boolean strictChecking, FlowValue forward, FlowValue backward) {","public static boolean valuesConflict(@CheckForNull TypeQualifierValue typeQualifierValue, FlowValue forward, FlowValue backward) {",KEEP KEEP KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Fix up some raw types,protected Class<?> getPropertyType() {,protected Class getPropertyType() {,KEEP REP KEEP KEEP,Change Return Type
Changing to settings object,"AddImageTask(String deviceId, String imagePath, String timeZone, boolean ignoreFatOrphanFiles, ImageWriterSettings imageWriterSettings,","AddImageTask(String deviceId, String imagePath, String timeZone, boolean ignoreFatOrphanFiles, String imageWriterPath,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Coday changes,public void accept(Object value) {,public void accept(Object t) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Bug Report Generation : When "jmeter.save.saveservice.print_field_names" is false and sample_variables are set report generation fails,"private Pair<Boolean, SampleMetadata> readMetadata(char separator, boolean useSaveSampleCfg) {","private SampleMetadata readMetadata(char separator, boolean useSaveSampleCfg) {",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
More test cases for double checked locking,static public Object standardDoubleCheck() {,public void t() {,ADD KEEP REP REP KEEP,Change Return Type
GROOVY-Possible memory leak in Tomcat (GroovyScriptEngine ThreadLocal) (closes #245),private Class<?> doParseClass(GroovyCodeSource codeSource) {,private Class doParseClass(GroovyCodeSource codeSource) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Allow overriding GBFS system_id,"String network ) { super(url, language, false, httpHeaders, network);","public GbfsDataSourceParameters(String url, String language, Map<String, String> httpHeaders) { super(url, language, false, httpHeaders);",DEL DEL DEL KEEP REP REP DEL DEL KEEP KEEP KEEP KEEP ADD REP,Add Parameter
"Fix zero dim matrix and vector multiplication, GitHub issue #104","@Cached RLengthNode getLength,","@Specialization(guards = ""hasZeroDim(a, getADimsNode)"")",REP REP REP DEL,Add Parameter
Tweaks to report/Report.java,private void Report() {,private void report() {,KEEP KEEP REP KEEP,Rename Method
FastR Grid: LPolygon + support for 'stringwidth' units,"private void calcViewPortLayout(RList viewPort, Size size, ViewPortContext parentVPCtx, GridDevice device, DrawingContext drawingCtx) {","private void calcViewPortLayout(RList viewPort, Size size, ViewPortContext parentVPCtx, DrawingContext drawingCtx) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Optimize OrDocIdIterator (#1868),"public ArrayBasedDocIdIterator(int[] docIds, int searchableLength) { _docIds = docIds; _searchableLength = searchableLength;","public ArrayBasedDocIdIterator(int[] _docIdArray, int _searchableLength) { super(); this.list = _docIdArray; this.searchableLength = _searchableLength;",KEEP KEEP REP KEEP REP KEEP REP DEL KEEP REP REP KEEP REP,Rename Parameter
some more improvement to the hierarchy iterator. No impact on existing code.,public I next(),public S next(),KEEP REP KEEP,Change Return Type
[TE] Refactor. ThirdEye Principal should be immutable. (#6085),private ThirdEyePrincipal getPrincipal(ContainerRequestContext containerRequestContext) {,"private boolean isAuthenticated(ContainerRequestContext containerRequestContext, ThirdEyePrincipal principal) {",KEEP REP REP REP DEL DEL KEEP,Change Return Type
add par arg to fastr_context.eval,"static void eval(RIntVector contexts, RStringVector exprs, boolean par) { if (par) {","static void eval(RIntVector contexts, RStringVector exprs) { if (contexts.getLength() == 1) { RContext context = checkContext(contexts.getDataAt(0)); try { context.activate(); context.getThisEngine().parseAndEval(Source.fromText(exprs.getDataAt(0), ""<eval_input>""), true, false); } finally { context.destroy(); } } else {",KEEP KEEP KEEP KEEP KEEP REP REP REP DEL DEL DEL KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
SONARJAVA-595 Fix parsing error with empty statements in imports,public ImportClauseTree IMPORT_DECLARATION() { return b.<ImportClauseTree>nonterminal(JavaLexer.IMPORT_DECLARATION),public ImportTreeImpl IMPORT_DECLARATION() { return b.<ImportTreeImpl>nonterminal(JavaLexer.IMPORT_DECLARATION),KEEP REP KEEP KEEP KEEP REP,Change Return Type
minor edits,private static boolean isVargs(final Parameter[] parameters) { return (parameters.length > 0 && parameters[parameters.length - 1].getType().isArray());,private static boolean isVargs(final Parameter[] params) { return (params.length > 0 && params[params.length - 1].getType().isArray());,KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
Parametize ResourceValueAnalysisTestDriver and ResourceTrackingDetector,"public abstract ResourceTrackerType getResourceTracker(ClassContext classContext, Method method)","public abstract ResourceTracker<Resource> getResourceTracker(ClassContext classContext, Method method)",KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Use Contact URIs instead of contact ids.,"CharSequence name, int numberType, CharSequence numberLabel, Uri contactUri,","CharSequence name, int numberType, CharSequence numberLabel, long personId,",KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Use http based import manifest validation,private List<String> getPartsHeadUrl(final String manifest) throws Exception{,private List<String> getPartsKey(final String manifest) throws Exception{,KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
BookDownloader accepts new file types (including pdf),"public static boolean acceptsUri(Uri uri, String mime) {",public static boolean acceptsUri(Uri uri) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
[GR-40695] Fixed review comments.,"AbstractBridgeGenerator(AbstractBridgeParser parser, DefinitionData definitionData, AbstractTypeCache typeCache, BinaryNameCache binaryNameCache) {","AbstractBridgeGenerator(AbstractBridgeParser parser, DefinitionData definitionData, AbstractTypeCache typeCache) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
change PositionsCheckNode to recognize REmpty,private static boolean isRemovePosition(Object position) { return position instanceof RMissing;,private static boolean isRemovePosition(Object positions) { return positions instanceof RMissing;,KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP,Rename Parameter
used self-type pattern to eliminate duplicated methods on the type hierarchy of JavaSymbolicObject,public T substituteWithBinders(,public JavaSymbolicObject substituteWithBinders(,KEEP REP KEEP,Change Return Type
Rename "Method",protected List<Function> getAnnotationConstructors(TypeDeclaration klass) {,protected List<Method> getAnnotationConstructors(TypeDeclaration klass) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Sync chunks to observing players and not just the players in a region.,"private void syncChunkToPlayer(SpoutChunk chunk, Player player) {","private void syncChunkToPlayers(SpoutChunk chunk, Player player) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Pull readCHunkHeader out of readChunk,"protected static <T extends Chunk> T readChunk(ByteBuffer buffer, int chunkStartPosition, ResChunkHeader header) {","protected static <T extends Chunk> T readChunk(ByteBuffer buffer, int chunkStartPosition) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Added code to do the transformation from XML to HTML,"public HTMLBugReporter(Project project, String stylesheet) {",public HTMLBugReporter(Project project) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
bookmarks: list limited list,"public synchronized List<Bookmark> bookmarks(long fromId, int limitCount) {",public synchronized List<Bookmark> allBookmarks() {,KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
Component.parametrized return type,public final <P extends MarkupContainer> P findParent(final Class<P> c),public final MarkupContainer findParent(final Class<? extends MarkupContainer> c),KEEP KEEP ADD REP REP REP REP REP KEEP,Change Return Type
DNS / topology updated to avoid db use for service EUCA-13377,"public static CompatFunction<ServiceConfiguration,ServiceConfiguration> updateConfiguration( ) {","public static Function<ServiceConfiguration,ServiceConfiguration> updateConfiguration( ) {",KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Improve flex access/egress performance by delaying the computation of the linestring to the latest possible time,"public FlexPath(int distanceMeters, int durationSeconds, Supplier<LineString> geometrySupplier) {","public FlexPath(int distanceMeters, int durationSeconds, LineString geometry) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Handle virtual sources in DAP. (GR-37262),public com.oracle.truffle.tools.dap.types.Source assureLoaded(Source sourceLoaded) {,public int assureLoaded(Source sourceLoaded) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Enable Apple Silicon iOS simulator support via use of new CPU type. This will be removed in favor of platforms once moved onto the new toolchain resolution system.,"PlatformType applePlatformType, AppleCpus appleCpus, boolean removeSimPrefix) {","private static String getSingleArchitecture(PlatformType applePlatformType, AppleCpus appleCpus) {",REP REP REP REP REP REP DEL KEEP,Add Parameter
avoid passing in the entire KompileOptions,public ResolveHeatCoolAttribute(Set<String> transitions) { this.transitions = transitions;,public ResolveHeatCoolAttribute(KompileOptions kompileOptions) { this.kompileOptions = kompileOptions;,KEEP REP REP KEEP REP KEEP REP,Rename Parameter
review: Apply consistent naming for test-case "category" (not "group").,"public static RoutingTag testCaseCategory(String tag) { return new RoutingTag(Category.TestCaseCategory, tag);","public static RoutingTag testCaseGroup(String tag) { return new RoutingTag(Category.TestCaseGroup, tag);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Rename Method
2013.05.22 (1.47r11),static void appendNewImage(boolean hyperstack) {,static void appendNewImage() {,KEEP KEEP ADD REP KEEP,Add Parameter
Use file absolute paths as squid source file keys,"private SourceFile createSourceFile(File file) { return new SourceFile(file.getAbsolutePath(), file.getPath());","private SourceFile createSourceFile(String parentPackage, File file) { StringBuilder key = new StringBuilder(); if (!"""".equals(parentPackage)) { key.append(parentPackage); key.append(""/""); } key.append(file.getName()); return new SourceFile(key.toString(), file.getPath()); } @VisibleForTesting static String getPackageKey(AstNode astNode) { if (isEmptyFileOrParseError(astNode)) { return UNRESOLVED_PACKAGE; } else if (astNode.hasDirectChildren(JavaGrammar.PACKAGE_DECLARATION)) { AstNode packageNameNode = astNode.getFirstChild(JavaGrammar.PACKAGE_DECLARATION).getFirstChild(JavaTreeMaker.QUALIFIED_EXPRESSION_KINDS); return getAstNodeValue(packageNameNode).replace('.', '/'); } else { return """"; } } private static boolean isEmptyFileOrParseError(AstNode astNode) { return astNode == null || GenericTokenType.EOF.equals(astNode.getToken().getType()); } private static String getAstNodeValue(AstNode astNode) { StringBuilder sb = new StringBuilder(); for (AstNode child : AstNodeHacks.getDescendants(astNode)) { if (!child.hasChildren() && child.hasToken()) { sb.append(child.getTokenValue()); } } return sb.toString();",KEEP KEEP REP DEL DEL KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
add FFI up-return tracing,"private static void traceCall(CallMode mode, String name, Object... args) {","private static void traceCall(boolean down, String name, Object... args) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Reimplemented:,"public UpdateBugCollection(BugCollection origCollection, BugCollection newCollection) { this.origCollection = origCollection;","public UpdateBugCollection(BugCollection collectionToUpdate, BugCollection newCollection) { this.collectionToUpdate = collectionToUpdate;",KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Did codacy suggestions,"public void onTranslationException(TranslationException noTranslationEx) { logger.log(Level.WARNING, ""Could not successfully translate file name "" + originalFileName, noTranslationEx);","public void onTranslationException(TranslationException ex) { logger.log(Level.WARNING, ""Could not successfully translate file name "" + originalFileName, ex);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
bes: Allow additional headers to be passed to the server.,"T stub, @Nullable CallCredentials callCredentials, @Nullable ClientInterceptor interceptor) {","private static <T extends AbstractStub<T>> T withCallCredentials( T stub, @Nullable CallCredentials callCredentials) {",REP REP REP REP REP DEL DEL DEL DEL KEEP REP REP KEEP,Add Parameter
implement basic functionality and abstractions for call type and related builtins using existing RLanguage technology,"protected RLanguage asCallName(RList x) { return Call.makeCall(quote((String) x.getDataAt(0)), makeNamesAndValues(x));","protected RCall asCallName(RList x) { return new RCall(quote((String) x.getDataAt(0)), makeNamesAndValues(x));",KEEP REP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP,Change Return Type
Extract a PhoneCallDetails class.,"public void setPhoneCallDetails(PhoneCallDetailsViews views, PhoneCallDetails details) {","int callType, CharSequence name, CharSequence number, int numberType, CharSequence numberLabel) {",REP REP REP REP REP REP DEL DEL DEL DEL KEEP,Remove Parameter
Model has a map of animation,public float getDelay() {,public long getDelay() {,KEEP REP KEEP KEEP,Change Return Type
The same "exportname" is now handled separately for different sites. If,"public Map<CmsExportname, String> getExportnames() {","public Map<String, String> getExportnames() { Map<String, String> exportnames = new HashMap<String, String>();",KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Set Helix flapping window for all components (#4105),"private void setupHelixSystemProperties() { System.setProperty(SystemPropertyKeys.FLAPPING_TIME_WINDOW, _helixServerConfig .getString(CommonConstants.Helix.CONFIG_OF_SERVER_FLAPPING_TIME_WINDOW_MS, CommonConstants.Helix.DEFAULT_FLAPPING_TIME_WINDOW_MS));","private void setupHelixSystemProperties(Configuration conf) { System.setProperty(CommonConstants.Helix.HELIX_MANAGER_FLAPPING_TIME_WINDOW_KEY, conf.getString(CommonConstants.Helix.CONFIG_OF_HELIX_FLAPPING_TIMEWINDOW_MS, CommonConstants.Helix.DEFAULT_HELIX_FLAPPING_TIMEWINDOW_MS)); System.setProperty(CommonConstants.Helix.HELIX_MANAGER_MAX_DISCONNECT_THRESHOLD_KEY, conf.getString(CommonConstants.Helix.CONFIG_OF_HELIX_MAX_DISCONNECT_THRESHOLD, CommonConstants.Helix.DEFAULT_HELIX_FLAPPING_MAX_DISCONNECT_THRESHOLD));",KEEP KEEP REP DEL KEEP REP REP REP REP DEL DEL,Remove Parameter
Updated to handle ISpecialChannels.,"public ChannelManager (HttpServletRequest request, HttpServletResponse response, UserLayoutManager manager) { this (); this.req = request; this.res = response; this.ulm=manager;","public ChannelManager (HttpServletRequest request, HttpServletResponse response) { this (); this.req = request; this.res = response; }",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Add Parameter
Changed ClassParser.parse() so that it takes an unpopulated,public void parse(ClassInfo classInfo) throws InvalidClassFileFormatException {,public ClassInfo parse() throws InvalidClassFileFormatException {,KEEP ADD REP REP KEEP KEEP KEEP,Change Return Type
handle the case when archive does not contain file parent directories,"UnpackedTree(String localPathRoot, AbstractFile archiveRoot, FileManager fileManager) { this.localPathRoot = localPathRoot;","UnpackedTree(AbstractFile archiveRoot, FileManager fileManager) { root = new Data(); root.setFile(archiveRoot); root.setFileName(archiveRoot.getName());",ADD ADD REP KEEP KEEP KEEP KEEP REP KEEP REP DEL DEL DEL,Add Parameter
Fix problem when AnalysisMethod instances are found in frames.,NativeImageDebugBaseMethodInfo(ResolvedJavaMethod m) { super(m); method = promoteAnalysisToHosted(m);,NativeImageDebugBaseMethodInfo(ResolvedJavaMethod method) { super(method); this.method = method;,KEEP REP KEEP REP REP KEEP REP,Rename Parameter
Drop log events without log tag,public static PerfEvent populatePerfEventFromLogger(,public static void populatePerfEventFromLogger(,KEEP KEEP REP KEEP,Change Return Type
SONARJAVA-1726 Migrate Highlighting API (#878),public NewHighlighting highlightableFor(File file) { return context.newHighlighting().onFile(inputFromIOFile(file));,"public Highlightable highlightableFor(File file) { return resourcePerspectives.as(Highlightable.class, inputFromIOFile(file));",KEEP REP KEEP KEEP KEEP KEEP REP DEL,Change Return Type
Rewrote event processing to be much faster and reduce GC thrushing,"private void updateDragSpeedStatus(int x, int y, int timestamp) {",private void updateDragSpeedStatus(int[] ev) {,KEEP KEEP ADD ADD ADD ADD REP REP KEEP,Add Parameter
Avoid nested parallel querying which results in deadlock sometimes,public ConcurrentObjectHolder(Supplier<T> supplier) { this.supplier = supplier;,public ConcurrentObjectHolder(T object) { this.object = object;,KEEP REP REP KEEP REP KEEP REP,Rename Parameter
Refactoring: Rename and javadoc.,public void afterDecodingFields(Node node) {,public void afterFixingProperties(Node node) {,KEEP KEEP REP KEEP KEEP,Rename Method
fixed menu loading,"public MenuLoader(ResourceExtractor resourceExtractor, AttrResourceLoader attrResourceLoader) {",public MenuLoader(ResourceExtractor resourceExtractor) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
UP-3008 Get config mode request and parameter processing working,"public IPortletEntity getOrCreatePortletEntity(HttpServletRequest request, IUserInstance userInstance, String layoutNodeId) {","public IPortletEntity getOrCreatePortletEntity(HttpServletRequest request, IUserInstance userInstance, String channelSubscribeId) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
cleanup EventNode and EventRootNode,"EventNode(SingleEvent event, AbstractFile file, BlackboardArtifact artifact) { super(Children.LEAF, Lookups.fixed(event, file, artifact)); this.event = event; this.setIconBaseWithExtension(""org/sleuthkit/autopsy/timeline/images/"" + event.getEventType().getIconBase()); ","EventNode(SingleEvent eventById, AbstractFile file, BlackboardArtifact artifact) { super(Children.LEAF, Lookups.fixed(eventById, file, artifact)); this.e = eventById; this.setIconBaseWithExtension(""org/sleuthkit/autopsy/timeline/images/"" + e.getEventType().getIconBase()); ",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP KEEP REP,Rename Parameter
Hygiene: Remove unused method from RetrofitException,"public static RetrofitException httpError(Response<?> response) { return httpError(response.raw().request().url().toString(), response);","public static RetrofitException httpError(Response<?> response, Retrofit retrofit) { return httpError(response.raw().request().url().toString(), response, retrofit);",KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP REP DEL,Remove Parameter
"GROOVY-9896, add return for last case if no default present","private Statement adjustSwitchCaseCode(final Statement statement, final VariableScope scope, final boolean lastCase) { if (!statement.isEmpty() && statement instanceof BlockStatement) { BlockStatement block = (BlockStatement) statement; int breakIndex = block.getStatements().size() - 1; if (block.getStatements().get(breakIndex) instanceof BreakStatement) { if (doAdd) { block.getStatements().remove(breakIndex); return addReturnsIfNeeded(block, scope); } else { addReturnsIfNeeded(new BlockStatement(block.getStatements().subList(0, breakIndex), null), scope);","private Statement adjustSwitchCaseCode(final Statement statement, final VariableScope scope, final boolean defaultCase) { if (statement instanceof BlockStatement) { List<Statement> statements = ((BlockStatement) statement).getStatements(); if (!statements.isEmpty()) { int lastIndex = statements.size() - 1; Statement last = statements.get(lastIndex); if (last instanceof BreakStatement) { if (doAdd) { statements.remove(lastIndex); return addReturnsIfNeeded(statement, scope); } else { BlockStatement newBlock = new BlockStatement(); for (int i = 0; i < lastIndex; i += 1) { newBlock.addStatement(statements.get(i)); } return addReturnsIfNeeded(newBlock, scope); } } else if (defaultCase) { return addReturnsIfNeeded(statement, scope);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD REP KEEP KEEP KEEP REP REP KEEP REP REP DEL DEL DEL KEEP REP KEEP REP KEEP KEEP DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
add ingest context to ingest module process() API change.,"IngestImageThread(IngestManager manager, IngestContext<IngestModuleImage>ingestContext, Image image, IngestModuleImage module, IngestModuleInit init) {","IngestImageThread(IngestManager manager, Image image, IngestModuleImage module, IngestModuleInit init) {",KEEP KEEP ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
perf(db): optimize 10 asset storage logic,public void importAllAsset() { if (!flag) { this.account = AssetUtil.importAllAsset(this.account); flag = true;,public void importAsset() { if (!AssetUtil.isAllowAssetOptimization()) { return; } if (!this.isAssetImport) { Account account = AssetUtil.importAsset(this.account); if (null != account) { this.account = account; } this.isAssetImport = true;,KEEP KEEP REP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP REP REP DEL KEEP KEEP,Rename Method
ByteStreamUploader: Open files at the last possible moment.,private ListenableFuture<Long> upload(long pos) {,private ListenableFuture<Long> upload() {,KEEP KEEP ADD REP KEEP,Add Parameter
HDFS-4521. Invalid network toploogies should not be cached. Contributed by Colin Patrick McCabe.,"private Map<String, String> load() { Map<String, String> loadMap = new HashMap<String, String>();",private synchronized void load() { map.clear();,KEEP REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD REP,Change Return Type
Revert 5417 changes to hadoop,"public RecordReader<ByteBuffer, SortedMap<ByteBuffer, Cell>> createRecordReader(InputSplit inputSplit, TaskAttemptContext taskAttemptContext) throws IOException, InterruptedException","public RecordReader<ByteBuffer, SortedMap<CellName, Cell>> createRecordReader(InputSplit inputSplit, TaskAttemptContext taskAttemptContext) throws IOException, InterruptedException",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Compute group boundaries on the fly,private void popCaptureGroupEvent() {,private void popCaptureGroupEvent(CaptureGroupEvent expectedEvent) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Added a tree selection listener for the navigator tree.,private TreeModel createNavigatorTreeModel() { projectCollection = new ProjectCollection(); rootNode = new DefaultMutableTreeNode(projectCollection); navigatorTreeModel = new DefaultTreeModel(rootNode); return navigatorTreeModel; },private TreeModel createTreeModel() { this.projectCollection = new ProjectCollection(); this.rootNode = new DefaultMutableTreeNode(projectCollection); this.navigatorTreeModel = new DefaultTreeModel(rootNode); return this.navigatorTreeModel;,KEEP KEEP REP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD REP,Rename Method
modify AccountAssetIssue to AccountAsset,public static Protocol.AccountAsset getAsset(Protocol.Account account) {,public static Protocol.AccountAssetIssue getAsset(Protocol.Account account) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
THIRDEYE-349 : Implement end-to-end integration test for thirdeye,"public void serverPackage(FileSystem fileSystem, String root, String collection, FlowSpec flowSpec, DateTime minTime, DateTime maxTime) throws Exception {","private void serverPackage(String root, String collection, FlowSpec flowSpec, DateTime minTime, DateTime maxTime) throws Exception { FileSystem fileSystem = FileSystem.get(new Configuration());",REP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Add Parameter
Visualization bugs,public StarTreeConfig getConfig(@PathParam("collection") String collection),"public Response getConfig(@PathParam(""collection"") String collection) throws IOException { StarTree starTree = manager.getStarTree(collection); if (starTree == null) { throw new NotFoundException(""No tree for collection "" + collection); } byte[] bytes = starTree.getConfig().encode().getBytes(); return Response.ok(bytes, MediaType.APPLICATION_OCTET_STREAM).build(); }",KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Add file ext mismatch basic mode that checks only img and exe,"FileExtMismatchDetectorModuleSettings(boolean skipKnownFiles, boolean skipFilesWithNoExtension, boolean skipFilesWithTextPlainMimeType, boolean checkOnlyImageExeTypes) {","FileExtMismatchDetectorModuleSettings(boolean skipKnownFiles, boolean skipFilesWithNoExtension, boolean skipFilesWithTextPlainMimeType) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Adding EventDataProvider API interfaces (#1028),public boolean isRealtime() {,public boolean queryRealtime() {,KEEP KEEP REP KEEP,Rename Method
"doc: Remove deprecated bikeRentalServiceDirectory, update config.",NodeAdapter root ) { var c = root .of(parameterName) .since(V2_0) .summary("Configuration for the vehicle rental service directory.") .asObject();,public static VehicleRentalServiceDirectoryFetcherParameters create(NodeAdapter c) {,ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP,Rename Parameter
"create tags for LB-related resources (autoscaling groups, security groups)","final String tagKey, final String tagValue){","public void createAutoScalingGroup(final String groupName, final List<String> availabilityZones, final int capacity, final String launchConfigName){",REP DEL DEL KEEP REP KEEP DEL DEL DEL DEL DEL DEL KEEP REP,Add Parameter
"EUCA-11427 As per review request, removed countdown latches.  In addition, as some work is now done synchronously, changed return types to AlarmHistory, obviating the need to pass in alarmHistoryList as an argument.  Only difference is that executeAction() is essentially synchronous now, takes a minor bit longer, but with 5 threads working on this, it does not add much total time.  It also does not hog all of the message channel threads.",public AlarmStateEvaluationWorker(Collection<AlarmEntity> alarmEntities) {,"public AlarmStateEvaluationWorker(Collection<AlarmEntity> alarmEntities, CountDownLatch countdownLatch) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Fix: range with lists,"@Cached(""createMinReduce()"") UnaryArithmeticReduceNode minReduce, @Cached(""createMaxReduce()"") UnaryArithmeticReduceNode maxReduce) {","@Specialization(guards = ""args.getLength() == 1"") protected RVector<?> rangeLengthOne(RArgsValuesAndNames args, boolean naRm, boolean finite) {",REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
fixed stmt.getConnection() stuff that caused loose connections,"protected final Element createLayoutStructure (ResultSet rs, int chanId, int userId, Connection con, DocumentImpl doc) throws java.sql.SQLException {","protected final Element createLayoutStructure (ResultSet rs, int chanId, int userId, Statement stmt, DocumentImpl doc) throws java.sql.SQLException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Recursive subscripting for RLanguage,"protected RecursiveExtractSubscriptNode createRecursiveCache(Object x, Object[] positions) { if (isRecursiveSubscript(x, positions)) { return RecursiveExtractSubscriptNode.create((RAbstractContainer) x, positions[0]);","protected RecursiveExtractSubscriptNode createRecursiveCache(Object vector, Object[] positions) { if (isRecursiveSubscript(vector, positions)) { return RecursiveExtractSubscriptNode.create((RAbstractListVector) vector, positions[0]);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
SONARJAVA-4000 Add support of Maps in java:S1168 (#3791),"NavigableMap<Object, Object> navigableMap() {","NavigableMap<Object, Object> navigaleMap() {",KEEP KEEP REP KEEP,Rename Method
"if a file appears in both the fileList and the auxFile list, remove it from the auxFileList","public static void readFromStandardInput(Collection<String> result) throws IOException { readFrom(result, UserTextFile.bufferedReader(System.in));",public static List<String> readFromStandardInput() throws IOException { return readFrom(UserTextFile.bufferedReader(System.in));,KEEP KEEP ADD REP REP KEEP KEEP KEEP REP REP,Change Return Type
library rescan operation + resources,"private MenuItem addMenuItem(Menu menu, int id, String resourceKey, int iconId) {","private MenuItem addMenuItem(Menu menu, int index, String resourceKey, int iconId) {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Sulong: blacklist method,public Thread[] getAllRunningThreads() { return allRunningThreads.toArray(Thread[]::new);,public List<Thread> getAllRunningThreads() { return allRunningThreads;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Changed to use XField instead of InstanceField.,public XField getField() {,public InstanceField getField() {,KEEP REP KEEP KEEP,Change Return Type
make sure declared method versions in new klassversion points to the latest versions,"public MethodVersion swapMethodVersion(ObjectKlass.KlassVersion klassVersion, Ids<Object> ids) {","public void swapMethodVersion(ObjectKlass.KlassVersion klassVersion, Ids<Object> ids) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Fixes to vector update code generation.,"protected void writeObjectValue(@SuppressWarnings(""unused"") VirtualFrame virtualFrame, Frame frame, FrameSlot frameSlot, Object value, int mode, boolean isSuper) {","protected void writeObjectValue(@SuppressWarnings(""unused"") VirtualFrame virtualFrame, Frame frame, FrameSlot frameSlot, Object value, int mode) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Added support for %n as placeholder for numbers,"public void setTranslation(int id, Object object) { translations.put(id, object);","public void setTranslation(int id, String translation) { translations.put(id, translation);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
FBReaderApp does not save cancel actions list,"public void runCancelAction(CancelMenuHelper.ActionType type, Bookmark bookmark) { if (type == null) { return; }","public void runCancelAction(int index, CancelMenuHelper.ActionType type) {",KEEP KEEP REP REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD,Add Parameter
Cleanup & Use DataMap for reading/writing controller data,"private static Entity loadEntity(SpoutRegion r, CompoundTag tag) {","private static void loadEntity(SpoutRegion r, CompoundTag tag) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
feat(estimateEnergy): optimize the switch,"TransactionCapsule txCap, TransactionExtention.Builder txExtBuilder, Return.Builder txRetBuilder, GrpcAPI.EstimateEnergyMessage.Builder estimateBuilder)","TransactionCapsule trxCap, Builder builder, Return.Builder retBuilder, GrpcAPI.EstimateEnergyMessage.Builder estimateBuilder)",KEEP REP REP REP KEEP REP KEEP KEEP,Rename Parameter
cleanup,"@SuppressWarnings(""try"") @TruffleBoundary protected Object access(RPromise receiver, String field) {","protected Object access(@SuppressWarnings(""unused"") VirtualFrame frame, RPromise receiver, String field) {",ADD ADD KEEP KEEP REP DEL DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
"WICKET-5350 reintroduce wildcards for repeater over models, otherwise",public final List<? extends T> getList(),public final List<T> getList(),KEEP KEEP ADD ADD REP KEEP,Change Return Type
Added missing ImageWriterSettings,"public ImageWriterSettings(String path, boolean updateDatabasePath){ this.path = path; this.updateDatabasePath = updateDatabasePath; } public String getPath(){ return path;","public ImageWriterSettings(String x, boolean y) {",KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP,Rename Parameter
Response Assertion and Size Assertion can now be applied to a JMeter variable,protected String getScopeName() { return SCOPE;,"public void setScopeAll() { setProperty(SCOPE, SCOPE_ALL); }",REP REP REP KEEP REP REP DEL,Change Return Type
SONARJAVA-578 Live variable analysis,"private CFG(BlockTree tree, Symbol.MethodSymbol symbol) { methodSymbol = symbol;",private CFG(BlockTree tree) {,KEEP KEEP ADD ADD REP KEEP ADD ADD ADD,Add Parameter
[TE] handle data insufficient exceptions in the detection pipeline (#4685),"private void checkEarlyStop(long totalNestedMetrics, long successNestedMetrics, int i, List<Exception> exceptions) throws DetectionPipelineException {","private void checkEarlyStop(long totalNestedMetrics, long successNestedMetrics, int i, Exception lastException) throws DetectionPipelineException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Change TestLifecycle.createApplication() to TestLifecycle.getApplicationClass() so that we can use the Android Framework Instrumentation class to create and bind the application for us rather than doing it ourselves via reflection in ParallelUniverse.,"public Class getApplicationClass(Method method, AndroidManifest appManifest, Config config) {","public Application createApplication(Method method, AndroidManifest appManifest, Config config) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
AttributeDefinitionBuilder: get rid of useless empty constructor for captured locals #897,private void generateValueConstructor(MethodDefinitionBuilder methodDefinitionBuilder) {,private JCTree generateValueConstructor() {,KEEP ADD REP REP KEEP,Change Return Type
Checkbox selection mode for treetable,"protected void encodeNode(FacesContext context, TreeTable tt, TreeNode treeNode, String clientId, String rowKey, String parentRowKey) throws IOException {","protected void encodeNode(FacesContext context, TreeTable tt, TreeNode treeNode, String clientId, String rowKey) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Enhance CSV record reader to take a config file.,"public CSVRecordReader(String dataFile, RecordReaderConfig config, Schema schema) {","public CSVRecordReader(String dataFile, Schema schema) {",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
throw exception instead of silently reject submission,"protected void checkDisabledSelectItemSubmitted(FacesContext context, UIInput component, Object[] oldValues, String... newSubmittedValues) throws FacesException { String msg = ""Disabled select item has been submitted"";","protected boolean isDisabledSelectItemSubmitted(FacesContext context, UIInput component, Object[] oldValues, String... newSubmittedValues) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
feat: Link StopPlace with the correct TariffZone(FareZone),"private TariffZoneMapper mapTariffZones() { TariffZoneMapper tariffZoneMapper = new TariffZoneMapper( getStartOfPeriod(), idFactory, currentNetexIndex.getTariffZonesById() ); transitBuilder.getFareZonesById().addAll(tariffZoneMapper.listAllCurrentFareZones()); return tariffZoneMapper;",private void mapTariffZones() { TariffZoneMapper tariffZoneMapper = new TariffZoneMapper(idFactory); for (String tariffZoneId : currentNetexIndex.getTariffZonesById().localKeys()) { TariffZone tariffZone = currentNetexIndex.getTariffZonesById().lookupLastVersionById(tariffZoneId); transitBuilder.getFareZonesById().add(tariffZoneMapper.mapTariffZone(tariffZone)); },KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP REP REP REP REP REP DEL DEL DEL DEL DEL,Change Return Type
2015.07.01 (1.50a10),void installHotkey(String arg) { boolean byName = arg.equals("install2"); String[] commands = byName?null:getAllCommands();,void installHotkey() { String[] commands = getAllCommands();,KEEP ADD REP KEEP ADD ADD ADD ADD KEEP KEEP KEEP REP,Add Parameter
"changed execution logic, cleaned up methods for addNode and addFragment operations",public IAggregatedLayout getLayoutManager() {,public ILayout getLayoutManager() {,KEEP REP KEEP KEEP,Change Return Type
Proper fix of parent.frame(n) with n > 1 after do.call,"private RCaller(Frame callingFrame, Object nodeOrSupplier, boolean parentIsInternal) {","private RCaller(Frame callingFrame, Object nodeOrSupplier) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Javadoc fixups,public synchronized int count(int increment) { counter += increment;,public synchronized int count(int count) { counter += count;,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
added TODO's for encoding urls for "static" urls...,"protected CharSequence encode(RequestCycle requestCycle, ISharedResourceRequestTarget requestTarget)","protected String encode(RequestCycle requestCycle, ISharedResourceRequestTarget requestTarget)",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
portal.imageUrl renders confusing error #8583,public WebException getCause(),public Throwable getCause(),KEEP REP KEEP,Change Return Type
Add comment,"public HttpClientKey(URL url, boolean hasProxy, String proxyHost,","public HttpClientKey(URL url, boolean b, String proxyHost,",KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
Part 1 of the Implementation for new 'subpackages()` built-in helper function.,"public Set<Pair<String, Globber.Operation>> getKeySet() {","public Set<Pair<String, Boolean>> getKeySet() {",KEEP KEEP REP KEEP KEEP,Change Return Type
Cleans up some spacing issues,"private void saveReportAction(HashMap<ReportModule, String> reports) {",private void saveReportAction() {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
FastR Grid: proper line style support,public byte[] getLineType() {,public GridLineType getLineType() {,KEEP REP KEEP KEEP,Change Return Type
2014.08.12 (1.49f4),"public void setStack(ImageStack newStack, int channels, int slices, int frames) { if (newStack==null || channels*slices*frames!=newStack.getSize())","public void setStack(ImageStack stack, int nChannels, int nSlices, int nFrames) { if (nChannels*nSlices*nFrames!=stack.getSize())",KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP REP KEEP KEEP ADD ADD REP,Rename Parameter
Remove ShadowWebView set/get PictureListener and typo fix,"private InstrumentationConfiguration(Map<String, String> classNameTranslations, Collection<MethodRef> interceptedMethods, Collection<String> instrumentedPackages, Collection<String> instrumentedClasses, Collection<String> classesToNotAcquire, Collection<String> packagesToNotAquire, Collection<String> classesToNotInstrument) {","private InstrumentationConfiguration(Map<String, String> classNameTranslations, Collection<MethodRef> interceptedMethods, Collection<String> instrumentedPackages, Collection<String> instrumentedClasses, Collection<String> classesToNotAquire, Collection<String> packagesToNotAquire, Collection<String> classesToNotInstrument) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
WICKET-6936 allow alternative read and write,protected byte[] readFile(File file) throws IOException { byte[] data;,"private byte[] readFile(String sessionIdentifier, int id) { File file = getPageFile(sessionIdentifier, id, false); if (file.exists() == false)",REP KEEP REP REP REP REP KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Added option to access file content from EL resource wrapper.,"public Map<String, CmsJspResourceWrapper> getReadResource() {","public Map<String, CmsResource> getReadResource() {",KEEP KEEP REP KEEP KEEP,Change Return Type
Added database query metric,"public static void submitNormalizedTimingMetric(TimingMetric metric, long normalization) {","public static void submitNormalizedTimingMetric(TimingMetric metric, long count) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
optimiztion: multiple image calculation has been avoided,ZLTextImageElement(ZLImageData imageData) { myImageData = imageData;,ZLTextImageElement(ZLImage image) { myImage = image;,REP REP KEEP REP KEEP REP,Rename Parameter
More UI experiments for Confidence vs Rank vs Priority.,public static MarkerRank getRank(int bugRank) {,public static MarkerRank getRank(int rank) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
version => 2.0.6,LibraryImplementation(BooksDatabase db) { myDatabase = db;,LibraryImplementation() { myDatabase = new SQLiteBooksDatabase(LibraryService.this);,ADD REP KEEP KEEP KEEP REP DEL,Add Parameter
922: Put DataSource name in AccountDeviceInstanceKey,private String getDataSourceName(AccountDeviceInstance accountDeviceInstance) {,private String getDataSourceName(AccountDeviceInstance adi) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
wip wicket-ng ,public Url decodeURL(final Url url),public String decodeURL(final String url),KEEP REP KEEP REP KEEP,Change Return Type
Improvements to dealing with headers via Context.,"default Optional<String> header(CharSequence name) { return Optional.ofNullable(getRequest().getHeaders().get(name)); } default Context header(CharSequence name, Object... values) { getResponse().getHeaders().set(name, Arrays.asList(values)); return this;",default String header(CharSequence name) { return getRequest().getHeaders().get(name);,KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
SONARJAVA-2826 Support the import of PMD issues reports (#2121),private List<Issue> getExternalIssues(String projectKey) {,private List<Issue> getExternalIssues() {,KEEP KEEP ADD REP KEEP,Add Parameter
Replaced all SpoutAPI with the Spout Maths library,public Matrix4 getProjection() {,public Matrix getProjection() {,KEEP REP KEEP KEEP,Change Return Type
Use ordered query set for consistent tab ordering. (#12833),public abstract LinkedHashSet<QueryDTO> queries();,public abstract Set<QueryDTO> queries();,KEEP KEEP REP KEEP,Change Return Type
Fixed bug with the values() method for TSyncLongObjectHashMap,public Object[] values() { for (int m = 0; m < mapCount; m++) { lockArray[m].readLock().lock(); } try { int localSize = totalKeys.get(); Object[] values = new Object[size()]; int position = 0; for (int m = 0; m < mapCount; m++) { Object[] mapValues = mapArray[m].values(); for (Object mapValue : mapValues) { values[position++] = mapValue; } } if (position != localSize) { throw new IllegalStateException("Key counter does not match actual total map size"); } return values; } finally { for (int m = 0; m < mapCount; m++) { lockArray[m].readLock().unlock(); } },public V[] values() { return values(null);,KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
DateField does not throw ValidationException if presentation value is out of the range #2452,"protected boolean checkRange(V value, boolean handleError) {",protected boolean checkRange(V value) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Update src/main/java/org/opentripplanner/routing/edgetype/BikeRentalEdge.java,"public BikeRentalEdge(BikeRentalStationVertex vertex, Set<String> networks) { super(vertex, vertex);","public BikeRentalEdge(Vertex from, Vertex to, Set<String> networks) { super(from, to);",KEEP REP REP DEL DEL KEEP KEEP KEEP REP REP,Add Parameter
SONARJAVA-1416 cleanup after rebase,"public Map<SymbolicValue, ObjectConstraint> getValuesWithConstraints(final Object state) { final Map<SymbolicValue, ObjectConstraint> result = new HashMap<>();",public List<ConstrainedValue> getValuesWithConstraints(final Object state) { final List<ConstrainedValue> result = new ArrayList<>();,KEEP ADD REP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP REP,Change Return Type
kompile/krun api-lize,"public static RewriterResult run(CompiledDefinition compiledDef, String programText, Integer depth) {",public static RewriterResult run(CompiledDefinition compiledDef) {,KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
analysis,"private ListRow(Metric metric, String title) {",private ListRow(Metric metric) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fixed #948,"protected void encodeIcon(FacesContext context, String label, String styleClass) throws IOException {","protected void encodeIcon(FacesContext context, String label) throws IOException {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
How could I even....,public <T extends Component> T addComponent(Component component) {,public Component addComponent(Component component) {,KEEP ADD ADD ADD REP KEEP KEEP KEEP,Change Return Type
Share behavior cache  (#1760),"public SymbolicExecutionVisitor(List<JavaFileScanner> executableScanners, BehaviorCache behaviorCache) {","public SymbolicExecutionVisitor(List<JavaFileScanner> executableScanners, SquidClassLoader classLoader) {",KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Changed location for AssignmentToNonFinalStatic violations from field declaration at to assignment in constructor.,private Node initializedInConstructor(List<NameOccurrence> usages) {,private boolean initializedInConstructor(List<NameOccurrence> usages) { boolean initInConstructor = false;,KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL,Change Return Type
Initialize Watchdog early,"DeadlockWatchdog(int watchdogInterval, boolean watchdogExitOnTimeout) { this.watchdogInterval = watchdogInterval; this.watchdogExitOnTimeout = watchdogExitOnTimeout; if (this.watchdogInterval > 0) {",DeadlockWatchdog() { watchdogInterval = SubstrateOptions.DeadlockWatchdogInterval.getValue(); watchdogExitOnTimeout = SubstrateOptions.DeadlockWatchdogExitOnTimeout.getValue(); if (watchdogInterval > 0) {,ADD ADD ADD REP KEEP REP KEEP REP REP KEEP REP KEEP REP KEEP KEEP KEEP,Add Parameter
"No Bug # available, Jira down, enhancement that drops channels from DLM fragment merge if end user does not have permission to use channel. Approved by apetro via dev list email 5/13/05.","public static Document constructILF( Document PLF, Vector sequence, IPerson person) throws javax.xml.parsers.ParserConfigurationException, AuthorizationException","public static Document constructILF( Document PLF, Vector sequence ) throws javax.xml.parsers.ParserConfigurationException",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP REP KEEP ADD REP,Add Parameter
UP-2488 portlet execution thread worker refactoring,"protected <V> V waitForWorker(PortletExecutionWorker<V> worker, long timeout) {","protected <V> V waitForWorker(PortletExecutionWorker<V> worker, Future<V> future, long timeout) {",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP,Remove Parameter
allow the expectWarning annotations to specify whether it should match bug patterns or bug kinds,"private Collection<SourceLineAnnotation> countWarnings(MethodDescriptor methodDescriptor, String bugCode, boolean matchPattern) {","private Collection<SourceLineAnnotation> countWarnings(MethodDescriptor methodDescriptor, String bugCode) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
SONARJAVA-3777 Rely on ECJ warnings to improve S1128 (#3551),private static String extractLastClassName(String reference) { int lastIndexOfDot = reference.lastIndexOf('.'); return lastIndexOfDot == -1 ? reference : reference.substring(lastIndexOfDot + 1);,"private static String extractFirstClassName(String reference) { int firstIndexOfDot = reference.indexOf('.'); return firstIndexOfDot == -1 ? reference : reference.substring(0, firstIndexOfDot); } private class CommentVisitor extends SubscriptionVisitor { @Override public List<Tree.Kind> nodesToVisit() { return Collections.singletonList(Tree.Kind.TRIVIA); } public void checkImportsFromComments(CompilationUnitTree cut) { scanTree(cut); } @Override public void visitTrivia(SyntaxTrivia syntaxTrivia) { updatePendingImportsForComments(syntaxTrivia.comment());",KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Method
WICKET-5410 Remove setting interfaces,public final ApplicationSettings getApplicationSettings(),public final IApplicationSettings getApplicationSettings(),KEEP KEEP REP KEEP,Change Return Type
cleanup and comments in Chunker,"private void readHelper(int maxBytes, boolean inWhiteSpaceBuffer) throws IOException {","private void readHelper(int maxBytes, boolean inBaseChunk, boolean inWhiteSpaceBuffer) throws IOException {",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
"Internal changes to structure of extractors in Core, these classes are not public API",public Reader getReader(BlackboardArtifact artifact) throws InitReaderException {,"public Reader getReader(BlackboardArtifact source) throws InitReaderException { return new InputStreamReader(getInputStream(source), StandardCharsets.UTF_8); } @Override public void setExtractionSettings(ExtractionContext context) {",KEEP KEEP KEEP REP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
Fix int overflow bug group-by key generation uncovered by test,"public static long generateRawKey(int[] values, int[] cardinalities) { long groupKey = 0;","private static int generateGroupKey(int[] values, int[] cardinalities) { int groupKey = 0;",REP KEEP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
lots more small optimizations,"private List<Tuple2<KLabel, Long>> printKType(StringBuilder sb) {",private void printKType(StringBuilder sb) {,KEEP ADD REP KEEP KEEP KEEP,Change Return Type
Fix #5547: FileUpload: support chunking and resume,"protected void decodeAdvanced(FileUpload fileUpload, T request, String inputToDecodeId) throws IOException, ServletException {","protected void decodeAdvanced(FacesContext context, FileUpload fileUpload, T request, String inputToDecodeId) throws IOException, ServletException {",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Plumb transitive packages to RuleContext,NestedSet<Package> transitivePackages) {,NestedSet<Package> transitivePackagesForPackageRootResolution) {,KEEP REP KEEP,Rename Parameter
Make CppCompileAction implement Action.execute() instead of beginExecution().,public ActionResult execute(ActionExecutionContext actionExecutionContext),public ActionContinuationOrResult beginExecution(ActionExecutionContext actionExecutionContext),KEEP REP REP KEEP,Change Return Type
refine minion worker event observer to track finer grained progress for tasks (#9449),"public String getSubtaskProgress(@Context HttpHeaders httpHeaders,","public Map<String, String> getSubtaskProgress(@Context HttpHeaders httpHeaders,",KEEP REP DEL KEEP KEEP KEEP,Change Return Type
[WICKET-6491] ajax download seems to work under both IE11 and Edge,public CharSequence getUrl(PageParameters params),public CharSequence getUrl(),KEEP KEEP ADD REP,Add Parameter
Added option of appending data to files.,"FileWriteTextRConnection(FileRConnection base, boolean append) throws IOException {",FileWriteTextRConnection(FileRConnection base) throws IOException {,KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Move class initialization and object instantiation tracing into static state,"public static void reportClassInitialized(Class<?> clazz, StackTraceElement[] stackTrace) { initializedClasses.put(clazz, relevantStackTrace(stackTrace));","public static void reportClassInitialized(Class<?> c, StackTraceElement[] stackTrace) { if (ImageSingletonsSupport.isInstalled() && ImageSingletons.contains(RuntimeClassInitializationSupport.class)) { RuntimeClassInitializationSupport runtimeClassInitialization = ImageSingletons.lookup(RuntimeClassInitializationSupport.class); runtimeClassInitialization.reportClassInitialized(c, stackTrace); }",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Introduce enum for wheelchair accessibility,public void setWheelchairBoarding(WheelChairBoarding boarding) { this.wheelchairBoarding = boarding;,public void setWheelchairAccessible(int wheelchairAccessible) { this.wheelchairAccessible = wheelchairAccessible;,KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
Removed formal signature from frame slots operated by RArguments,"public static Object[] create(RFunction functionObj, RCaller call, MaterializedFrame callerFrame, Object[] evaluatedArgs, ArgumentsSignature suppliedSignature, DispatchArgs dispatchArgs) {","public static Object[] create(RFunction functionObj, RCaller call, MaterializedFrame callerFrame, Object[] evaluatedArgs, ArgumentsSignature signature, DispatchArgs dispatchArgs) { return create(functionObj, call, callerFrame, evaluatedArgs, ArgumentsSignature.empty(evaluatedArgs.length), signature, dispatchArgs);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
find dowloaded book by hash,"private static boolean useDemoReferences(NetworkBookItem book, IBookCollection collection) {",private static boolean useDemoReferences(NetworkBookItem book) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix chart URL length problem on /stats page,"protected void showChartImg(HttpServletResponse resp, GChart chart) throws IOException { Matcher m = Pattern.compile(""(\\d+)x(\\d+)"").matcher(chart.getParameters().get(""chs""));","protected void showChartImg(HttpServletResponse resp, String url) throws IOException { Matcher m = Pattern.compile(""&chs=(\\d+)x(\\d+)"").matcher(url);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
UI: add meta data to Media class,public synchronized void addMedia(Media media) {,"public synchronized void addMediaItem(Media item) { if (!mediaDirExists(item.getPath())) { ContentValues values = new ContentValues(); values.put(MEDIA_NAME, item.getName()); values.put(MEDIA_PATH, item.getPath()); values.put(MEDIA_TIME, item.getTime()); values.put(MEDIA_LENGTH, item.getLength()); values.put(MEDIA_TYPE, item.getType()); values.put(MEDIA_WIDTH, item.getWidth()); values.put(MEDIA_HEIGHT, item.getHeight()); mDb.insert(MEDIA_TABLE_NAME, null, values); } }",KEEP KEEP KEEP REP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
fix quality flaw: improve coverage (#1595),"private ProgramState handleMethodInvocation(CheckerContext context, MethodInvocationTree mit) {","private ProgramState handleMethodInvocation(CheckerContext context, Tree syntaxNode) { MethodInvocationTree mit = (MethodInvocationTree) syntaxNode;",KEEP KEEP KEEP KEEP REP REP KEEP DEL DEL DEL DEL DEL,Rename Parameter
Add untar failure server meter (#5768),"public SegmentFetcherAndLoader(PinotConfiguration config, InstanceDataManager instanceDataManager, ServerMetrics serverMetrics)","public SegmentFetcherAndLoader(PinotConfiguration config, InstanceDataManager instanceDataManager)",KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Fix web history artifact count for IE,"private boolean executePasco(String indexFilePath, String filename) {","private boolean executePasco(String indexFilePath, int fileIndex) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
reimplemented algorithm so that parents and children are selected separately,"public Map<String, Md5MetaData> getMataData(){ return Collections.unmodifiableMap(this.metadata);",public List<Long> getChildren() { return Collections.unmodifiableList(this.children);,KEEP REP REP REP KEEP REP,Change Return Type
Visual update of the call log.,"View listHeaderView, TextView listHeaderTextView) {","View standAloneHeaderView, TextView standAloneHeaderTextView) {",KEEP REP KEEP REP KEEP,Rename Parameter
Long time to load Notes and Discrepancies in OC 3.9,"public Integer getSubjectDNCountWithFilter(ListNotesFilter filter, Integer currentStudyId) {","public Integer getCountWithFilter(ListNotesFilter filter, Integer currentStudyId) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Make TOKENS the canonical place to determine tokens.,private Collection<Token> getTokensFor(InetAddress endpoint),"private Collection<Token> getTokensFor(InetAddress endpoint, String piece)",KEEP KEEP KEEP REP DEL DEL,Remove Parameter
Remove proto_lang_toolchain rule's $(PLUGIN_OUT) placeholder and simplify ProtoCompileActionBuilder.,"String outReplacementFormatFlag,","String commandLine,",KEEP REP,Rename Parameter
Limit amount of diagnostic output.,"private static void printStackTrace(Log log, IsolateThread vmThread, int invocationCount) {","private static void printStackTrace(Log log, IsolateThread vmThread) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
special network link for synchronization service,"public SignOutAction(Activity activity, ZLNetworkContext context) {",public SignOutAction(Activity activity) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
manual merging with steffen branch: visited hyperlinks engine,public ZLColor getTextColor(ZLTextHyperlink hyperlink) {,public ZLColor getTextColor(byte hyperlinkType) {,KEEP KEEP REP REP KEEP,Rename Parameter
Use a PopupMenu to show the available fields to add, void setExpanded(boolean value) {," void setExpanded(boolean value, boolean animate) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Fixing an issue with parsing the xml-rpc response to a command,private void parseOkReply(String reply) throws CloudRuntimeException { VsmOkResponse response = new VsmOkResponse(reply.trim()); if (!response.isResponseOk()) { throw new CloudRuntimeException(response.toString());,"private void parseReply(String reply) throws CloudRuntimeException { reply = reply.trim(); if (reply.endsWith(SSH_NETCONF_TERMINATOR)) { reply = reply.substring(0, reply.length() - (new String(SSH_NETCONF_TERMINATOR).length()));",KEEP KEEP REP KEEP KEEP KEEP KEEP ADD REP KEEP ADD REP KEEP REP KEEP REP REP REP DEL DEL DEL DEL,Rename Method
Improved Datatable System,"public SpoutClientWorld worldChanged(String name, UUID uuid, byte[] data) {","public SpoutClientWorld worldChanged(String name, UUID uuid, byte[] datatable) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
no bitmap reference in pure java (non-android) code,"public synchronized ZLImage getCover(Book book, int maxWidth, int maxHeight) {","public synchronized Bitmap getCover(Book book, int maxWidth, int maxHeight) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Don't check the invariants when replacing a node at certain usages.,"public final void replaceAtUsages(Node replacement, Predicate<Node> filter, boolean checkInvariants) { replaceAtUsages(replacement, filter, false, checkInvariants);","private void replaceAtUsages(Node replacement, Predicate<Node> filter, boolean forDeletion) {",ADD REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD,Rename Parameter
Ensure VEX only AVX instructions use valid regs,"public VexBlendOp(AMD64Assembler.VexRVMROp opcode, AVXKind.AVXSize size, AllocatableValue result, AllocatableValue x, AllocatableValue y, AllocatableValue mask, AMD64 arch) {","public VexBlendOp(AMD64Assembler.VexRVMROp opcode, AVXKind.AVXSize size, AllocatableValue result, AllocatableValue x, AllocatableValue y, AllocatableValue mask) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
adding holiday event api (#1060),public List<EventDTO> getEvents(EventFilter eventFilter) {,public List<? extends Event> getEvents(EventFilter eventFilter) {,KEEP REP DEL DEL KEEP KEEP KEEP,Change Return Type
remove generic specializations in EnvFunctions,@Test public void TestSimpleBuiltins_testEnvironmentIgnore_14d25c1c38347070f388d2f433245dab() { assertEvalError("{ as.environment(as.environment) }"); },@Test public void TestSimpleBuiltins_testEnvironment_14d25c1c38347070f388d2f433245dab() { assertEvalError("{ as.environment(as.environment) }"); },KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
recognize switch statements that have exhaustive labels for an enum,"public void enterSwitch(DismantleBytecode dbc, @CheckForNull XClass enumType) {",public void enterSwitch(DismantleBytecode dbc) {,KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
"Introduced FormalArguments holding parameter names and default values and changed AccessArgumentNode accordingly. Error free, but NOT WORKING YET","protected RRootNode(SourceSection src, FormalArguments formalArguments, FrameDescriptor frameDescriptor) {","protected RRootNode(SourceSection src, Object[] parameterNames, FrameDescriptor frameDescriptor) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
MID-8140 non-eq filters with multivalue poly work in JSONB[]+extensions,"private Predicate processPolyStringStrictEq(ValueFilterValues<?, ?> values) throws QueryException { PolyString poly = values.singleValuePolyString();","private Predicate processPolyStringBoth(ValueFilterValues<?, ?> values) throws QueryException { Object value = values.singleValueRaw(); assert value != null;  if (!(value instanceof PolyString)) { throw new QueryException( ""PolyString value must be provided to match both orig and norm values, was: "" + value + "" (type "" + value.getClass() + "")""); } PolyString poly = (PolyString) value; ",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP REP DEL,Rename Method
refactored KeywordHits now that we know its correct,"void addRegExpToList(Map<String, Map<String, Set<Long>>> listMap, String regExp, String keywordInstance, Long artifactId) {","void addRegExpToList(Map<String, Map<String, Set<Long>>> listMap, String regExp, String word, Long id) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP,Rename Parameter
Rewrite ColMeans to use VectorDataLibrary,"@CachedLibrary(""x.getData()"") VectorDataLibrary dataLib) { checkVectorLength(dataLib, x, rowNum, colNum);","@Specialization(guards = ""!naRm"") protected RDoubleVector colMeansNaRmFalse(RDoubleVector x, int rowNum, int colNum, @SuppressWarnings(""unused"") boolean naRm) { checkVectorLength(x, rowNum, colNum);",REP REP REP REP REP DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP,Add Parameter
incapsulated auth token argument of 'install' commands,public String install(JacksonRepresentation<UserCredentials> userCredentialsRep) throws IOException { UserCredentials userCredentials = userCredentialsRep.getObject(); String token = userCredentials.getToken();,public String install(String token) throws IOException {,KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Removal of warnings and modifications of RR plugins for word/word2010,"public List<HashMap<String,Object>> dbConnect(String path, String query) {","public List dbConnect(String path, String query) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add isDuringStage graph stage flag,public boolean isAfterStage(StageFlag stage) { return stageFlags.contains(stage); } public void setDuringStage(StageFlag stage) { assert isBeforeStage(stage) : "Cannot set during stage " + stage + " since the graph is not before that stage"; currentStage = stage;,public boolean isAfterStage(StageFlag state) { return stageFlags.contains(state);,KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
AvoidCallingFinalize: constructor false negative fix,private boolean isNotInFinalizeMethod(ASTPrimaryExpression primaryExpression) { ASTMethodDeclaration methodDeclaration = primaryExpression.getFirstParentOfType(ASTMethodDeclaration.class); return methodDeclaration == null || isNotFinalizeMethodDeclaration(methodDeclaration);,private boolean isFinalizeMethodBlock(ASTBlock block) { ASTMethodDeclaration methodDeclaration = block.getFirstParentOfType(ASTMethodDeclaration.class); return methodDeclaration != null && isFinalizeMethodDeclaration(methodDeclaration);,KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP REP,Rename Parameter
Added method to CFG for getting the Location of an exception,IsNullValueDataflow isNullDataflow) {,"public LockFrameModelingVisitor(ConstantPoolGen cpg, LockResourceTracker resourceTracker, Lock lock, ValueNumberDataflow vnaDataflow) {",REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
Merging r1597238 from trunk to branch-2.,public static MiniDFSNNTopology createDefaultTopology(int basePort) {,public static MiniDFSNNTopology createDefaultTopology() {,KEEP KEEP KEEP ADD REP KEEP,Add Parameter
WICKET-258 FormTester doesn't pass form components default values,"private CheckGroup newCheckGroup(final String id, List candidateChoices)",private CheckGroup newCheckGroup(List candidateChoices),KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
SONARJAVA-2483 enqueue all possible catch blocks (#1825),"public Type getExceptionType(SemanticModel semanticModel) { Preconditions.checkState(isCatchBlock(), ""Block %s is not a catch block"", id); return semanticModel.getClassType(exceptionType);",public String getExceptionType() { return exceptionType;,KEEP ADD REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP,Change Return Type
#228,"protected void encodeMarkup(FacesContext context, ColorPicker colorPicker, String value) throws IOException {","protected void encodeMarkup(FacesContext context, ColorPicker colorPicker) throws IOException {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Transferred security classes from 1.0 + patches branch,public Object getAttribute(String key);,"public Object getAttribute(String sKey); public void   setAttribute(String sKey, Object oValue);",KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Issue #580: Constructors and main methods were never 'ancestor local',"public static MethodDefinitionBuilder main(AbstractTransformer gen) { return new MethodDefinitionBuilder(gen, false, ""main"")","public static MethodDefinitionBuilder main(AbstractTransformer gen, boolean ancestorLocal) { return new MethodDefinitionBuilder(gen, ancestorLocal, ""main"")",KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP REP KEEP,Remove Parameter
Slightly improve the performances of zeroOrMore(),public boolean isOneOrMoreRule(Object ruleKey) { return oneOrMores.contains(ruleKey); } public boolean isZeroOrMoreRule(Object ruleKey) { return zeroOrMores.contains(ruleKey);,public boolean isRepeatedRule(Object ruleKey) { return repeated.contains(ruleKey);,KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Method
Prepare context fields for patching,public ContextEnvironment env() {,public TruffleLanguage.Env getEnv() {,KEEP REP REP KEEP,Change Return Type
Only decode filename from uri when it's actually used,"public Media(Context context, String location, long time, long length, int type,","public Media(Context context, String location, String filename, long time, long length, int type,",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
JavaDocs and move isValidChar(char) to LabelComponent,public void setPasswordChar(char passwordChar) { if (!isValidChar(passwordChar)) { throw new IllegalArgumentException("Specified character must be a valid character as designated by LabelComponent#isValidChar(char)"); } this.passwordChar = passwordChar;,public void setPasswordChar(char character) { passwordChar = character;,KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP REP,Rename Parameter
Use IAM roles for loadbalancer VMs (INCOMPLETE),"public void createLaunchConfiguration(final String imageId, final String instanceType, final String instanceProfileName, final String launchConfigName,","public void createLaunchConfiguration(final String imageId, final String instanceType, final String launchConfigName,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD KEEP,Add Parameter
Newify pattern support for pull(closes #689 #686),"private Expression transformMethodCall(MethodCallExpression mce, Expression argsExp) {","private Expression transformMethodCall(MethodCallExpression mce, Expression args) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Made ComponentGenerateUtils#updateLayoutComponent method return void,public static void updateLayoutComponent(PsiClass layoutSpecCls) { LithoLoggerProvider.getEventLogger().log(TAG + ".invoke");,public static boolean updateLayoutComponent(PsiClass layoutSpecCls) {,KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD,Change Return Type
Fixed specializations with respect to fallback.,"protected RAbstractDoubleVector doIntVector(RAbstractIntVector x, @Cached(""createClassProfile()"") ValueProfile operandTypeProfile) { RAbstractIntVector operand = operandTypeProfile.profile(x); if (useClosure()) { return (RAbstractDoubleVector) castWithReuse(RType.Double, operand, naProfile.getConditionProfile()); }",protected RDoubleVector doLogicalVectorDims(RAbstractLogicalVector operand) {,KEEP ADD ADD ADD REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
Remove parent from CHunk constructor,"protected static <T extends Chunk> T readChunk(ByteBuffer buffer, int chunkStartPosition) {","protected static <T extends Chunk> T readChunk(ByteBuffer buffer, int chunkStartPosition, Chunk parentChunk) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Improve timer and counter recording,public int matchLevel(DebugContext.Scope scope) {,public int matchLevel(String input) {,KEEP KEEP REP REP KEEP,Rename Parameter
Remove the support of the old Star-Tree (#5086),public long getTotalDocs() { return _totalDocs;,public long getTotalRawDocs() { return _totalRawDocs;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Medialibrary: update to match API changes,"abstract public AbstractMediaWrapper[] getTracks(boolean withThumbnail, int sort, boolean desc); abstract public AbstractMediaWrapper[] getPagedTracks(boolean withThumbnail, int sort, boolean desc, int nbItems, int offset);","abstract public AbstractMediaWrapper[] getTracks(int sort, boolean desc); abstract public AbstractMediaWrapper[] getPagedTracks(int sort, boolean desc, int nbItems, int offset);",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Create a flows graph only when the method is implementation-invoked and parsed.,"public MethodTypeFlowBuilder createMethodTypeFlowBuilder(PointsToAnalysis bb, PointsToAnalysisMethod method) { return new MethodTypeFlowBuilder(bb, method);","public MethodTypeFlowBuilder createMethodTypeFlowBuilder(PointsToAnalysis bb, MethodTypeFlow methodFlow) { return new MethodTypeFlowBuilder(bb, methodFlow);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
WICKET-3367,"final ISortStateLocator stateLocator, final IAjaxCallListener ajaxCallListener)","final ISortStateLocator stateLocator, final IAjaxCallDecorator decorator)",KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Use generics with BlockComponent,public T getMaterial() { return (T) MaterialRegistry.get(getData().get(Data.HELD_MATERIAL_NAME));,public BlockMaterial getMaterial() { return (BlockMaterial) MaterialRegistry.get(getData().get(Data.HELD_MATERIAL_NAME));,KEEP REP KEEP KEEP KEEP REP KEEP,Change Return Type
SONARJAVA-3493 Add missing method behaviors for Guava's methods,"void checkArgumentWithMessage(@javax.annotation.Nullable Object param, Object errorMessage) { Preconditions.checkArgument(param != null, errorMessage); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate) { Preconditions.checkArgument(param != null, errorMessageTemplate); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, char p1) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, char p1, char p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, char p1, int p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, char p1, long p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, char p1, Object p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, int p1) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, int p1, char p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, int p1, int p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, int p1, long p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, int p1, Object p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, long p1) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, long p1, char p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, long p1, int p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, long p1, long p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, long p1, Object p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, Object p1) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, Object p1, char p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, Object p1, int p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, Object p1, long p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString(); } void checkArgumentWithMessage(@javax.annotation.Nullable Object param, String errorMessageTemplate, Object p1, Object p2) { Preconditions.checkArgument(param != null, errorMessageTemplate, p1, p2); param.toString();","void checkArgumentWithMessage(@javax.annotation.Nullable Object param) { Preconditions.checkArgument(param != null, ""This is so bad.""); param.toStringdd Parameter
Started working on inlining of JSR subroutines.,private void build(Subroutine subroutine) throws CFGBuilderException {,private void build(Context context) throws CFGBuilderException {,KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
UP-3439 Reduce memory usage,"public void generateCharacterEvents(HttpServletRequest servletRequest, XMLEventReader eventReader, StartElement event, Collection<CharacterEvent> eventBuffer) throws XMLStreamException { this.generateCharacterEvents(servletRequest, event, eventBuffer);","public List<CharacterEvent> getCharacterEvents(HttpServletRequest servletRequest, XMLEventReader eventReader, StartElement event) throws XMLStreamException { final List<CharacterEvent> characterEvents = this.getCharacterEvents(servletRequest, event);",KEEP REP REP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP REP REP REP DEL DEL DEL,Change Return Type
Report analysis errors using a dialog.,"public AnalysisRun(Project project, FindBugsFrame frame) {","public AnalysisRun(Project project, ConsoleLogger logger) {",KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Fixes reindexing bug with filter on long column (#13386),"final List<String> dimensions, final List<String> metrics )","public static DruidSegmentInputEntity makeInputEntity(final Interval interval, final File segmentDirectory)",REP REP REP REP REP REP REP DEL DEL,Add Parameter
UP-2768 Move preference update logic into PortletPreferencesImpl so it works for all preference storage,public void setPortletPreferences(List<IPortletPreference> newPreferences) { if (this.portletPreferences == newPreferences) {,public void setPortletPreferences(List<IPortletPreference> portletPreferences) { if (this.portletPreferences == portletPreferences) {,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
"Clean up FilesystemCalls: rename to SyscallCache, move to a top-level class, and get rid of AtomicReference wherever possible. Use a SyscallCache for any command-scoped classes, and Supplier<SyscallCache> for others. This change should have no runtime-observable effects (all underlying caches are the same).","SyscallCache syscallCache,","FilesystemCalls syscalls,",REP REP,Rename Parameter
Honor @Config(manifest=___) for Gradle projects,public static FileFsFile from(String... paths) {,public static FileFsFile from(String... part) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Add ClassLoadingEnv,"private ClassfileParser(ClassLoadingEnv env, ClassfileStream stream, StaticObject loader, Symbol<Type> requestedClassType, ClassRegistry.ClassDefinitionInfo info) {","private ClassfileParser(ClassfileStream stream, StaticObject loader, Symbol<Type> requestedClassType, EspressoContext context, ClassRegistry.ClassDefinitionInfo info) {",KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP,Add Parameter
Use CONTACT_ID field for the quick contact badge.,"int contactIdColumn, int lookUpKeyColumn) { long contactId = cursor.getLong(contactIdColumn);","int photoIdColumn, int lookUpKeyColumn) { long contactId = cursor.getLong(photoIdColumn);",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
IAM federated region token service EUCA-10444,private <R> R regionDispatchByIdentifier(,private UserPrincipal regionDispatchByIdentifier(,KEEP ADD REP KEEP,Change Return Type
SC: write array component type for optimized for-each loop,"private void writeOptimizedForEachLoop(final ForStatement loop, final Parameter loopVariable, final Expression arrayExpression, final ClassNode arrayType) {","private void writeOptimizedForEachLoop(final ForStatement loop, final Parameter loopVariable, final Expression collectionExpression, final ClassNode collectionType) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP,Rename Parameter
Fix #4246: CheckStyle issues.,private RepeatStatus getRepeatStatus() {,private RepeatStatus _getRepeatStatus() {,KEEP KEEP REP KEEP,Rename Method
TE: Adding external resource load in dashboard app (#1670),"public AlertTaskInfo(long jobExecutionId, DateTime windowStartTime, DateTime windowEndTime, AlertConfigDTO alertConfigDTO) {","DateTime windowEndTime, EmailConfigurationDTO alertConfig, AlertConfigDTO alertConfigDTO) {",ADD ADD ADD KEEP REP REP REP KEEP KEEP KEEP,Remove Parameter
Keep track of all drawable resources in one spot in `XResourceLoader`.,public DrawableResourceLoader(ResBunch resBunch) { this.resBunch = resBunch;,"public DrawableResourceLoader(ResBundle<DrawableNode> drawableNodes) { this.drawableNodes = drawableNodes; } @Override protected void processResourceXml(FsFile xmlFile, XpathResourceXmlLoader.XmlNode xmlNode, XmlContext xmlContext) throws Exception { String name = toResourceName(xmlFile); drawableNodes.put(xmlContext.getDirPrefix(), name, new DrawableNode.Xml(parse(xmlFile), xmlContext), xmlContext);",KEEP REP REP KEEP REP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Changed block placement and creation method signatures,"public void onPlacement(Block block, short data, BlockFace against, Vector3 clickedPos, boolean isClickedBlock, Cause<?> cause) { this.onCreate(block, data, cause);","public boolean onPlacement(Block block, short data, BlockFace against, Vector3 clickedPos, boolean isClickedBlock, Cause<?> cause) { block.setMaterial(this, data, cause); return true;",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP DEL DEL,Change Return Type
cleanup IMarkupFragment API,public final IMarkupFragment find(final String id),"public final int findComponentIndex(final String id, final int startIndex)",KEEP KEEP REP REP KEEP REP DEL DEL DEL,Change Return Type
Bug JMS Sampler : Add a selector when REQUEST / RESPONSE is chosen,"private Receiver(ConnectionFactory factory, Destination receiveQueue, String principal, String credentials, boolean useResMsgIdAsCorrelId, String jmsSelector) throws JMSException {","private Receiver(ConnectionFactory factory, Destination receiveQueue, String principal, String credentials, boolean useResMsgIdAsCorrelId) throws JMSException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
6305 fix listener for case events,"private void addToColumn(Component component, int columnNumber) {","private void addToColumn(Component component, Object constraints, int columnNumber) {",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP,Remove Parameter
changed removeChannel() to return boolean,"public boolean removeChannel (String channelId) throws PortalException { return this.gulm.removeChannel(channelId,this.sessionId);","public void removeChannel (String channelId) throws PortalException { this.gulm.removeChannel(channelId,this.sessionId);",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP,Change Return Type
Entities are not deleted from the new screens #1577,"protected void commitIfNeeded(Entity entityToRemove, CollectionContainer container, ScreenData screenData) {","protected void commitIfNeeded(CollectionContainer container, ScreenData screenData) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
Issue: WICKET-4141,"private final Component resolveAutomaticLink(final PathInfo pathInfo, final String id,","private final Component resolveAutomaticLink(final MarkupContainer container, final String id,",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
updated 12.12.2008 22:38,public static void abort(Interpreter interp) { if (interp!=null) interp.abortMacro(); } public void abortMacro() { if (!calledMacro) { batchMode = false; imageTable = null;,public static void abort(Interpreter interpreter) { if (interpreter!=null) { if (!interpreter.calledMacro) { batchMode = false; imageTable = null; } interpreter.done = true; instance = null; IJ.showStatus("Macro aborted");,KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
libvlc: remove static EventHandler in MediaPlayer,private void handleVout(int voutCount) {,private void handleVout(Message msg) {,KEEP KEEP REP REP KEEP,Rename Parameter
Added option to blacklist single resources from search result.,public void initUI(I_CmsAppUIContext uiContext) {,public void initUI(I_CmsAppUIContext context) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Moved light blocks to chunks,"public boolean resolve(SpoutChunk chunk) { int x = 0, y = 0, z = 0;","public boolean resolve() { this.lastResolveTime = System.nanoTime(); long key; int x = 0, y = 0, z = 0, i, j; int newChanges = 0;",KEEP KEEP ADD REP KEEP DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL KEEP KEEP,Add Parameter
* Fuzzy command matching,"public GlowCommand(GlowServer server, String name, String desc, String usage, String... aliases) { super(name, desc, ""/"" + name + "" "" + usage, Arrays.asList(aliases));","public GlowCommand(GlowServer server, String name, String desc, String usage) { super(name, desc, ""/"" + name + "" "" + usage, new ArrayList<String>());",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL,Add Parameter
SONARJAVA-325 Do not report missing package-info.java on test packages,public Set<File> getDirectoriesWithoutPackageFile() { return directoriesWithoutPackageFile;,public Set<File> getDirectoriesWithPackageFile() { return directoriesWithPackageFile;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Remove LayoutState dependency from TransitionManager,public TransitionManager(OnAnimationCompleteListener onAnimationCompleteListener) {,"OnAnimationCompleteListener onAnimationCompleteListener, MountState mountState) {",REP REP REP DEL KEEP,Remove Parameter
Change textWatcher to varArg,"@Prop(optional = true, varArg = ""textWatcher"") List<TextWatcher> textWatchers) {",@Prop(optional = true) TextWatcher textWatcher) {,KEEP KEEP ADD ADD ADD REP REP REP KEEP,Rename Parameter
Implement getDirectoryEntries and readdir for RemoteActionFileSystem.,"protected ImmutableList<String> getDirectoryEntries(PathFragment path) throws IOException { HashSet<String> entries = new HashSet<>(); boolean ignoredNotFoundInRemote = false; if (isOutput(path)) { try { delegateFs.getPath(path).getDirectoryEntries().stream() .map(Path::getBaseName) .forEach(entries::add); ignoredNotFoundInRemote = true; } catch (FileNotFoundException ignored) { } } try { remoteOutputTree.getPath(path).getDirectoryEntries().stream() .map(Path::getBaseName) .forEach(entries::add); } catch (FileNotFoundException e) { if (!ignoredNotFoundInRemote) { throw e; } } return ImmutableList.sortedCopyOf(entries); } @Override protected Collection<Dirent> readdir(PathFragment path, boolean followSymlinks) throws IOException { HashMap<String, Dirent> entries = new HashMap<>(); boolean ignoredNotFoundInRemote = false; if (isOutput(path)) { try { for (var entry : delegateFs .getPath(path) .readdir(followSymlinks ? Symlinks.FOLLOW : Symlinks.NOFOLLOW)) { entries.put(entry.getName(), entry); } ignoredNotFoundInRemote = true; } catch (FileNotFoundException ignored) { } } try { for (var entry : remoteOutputTree .getPath(path) .readdir(followSymlinks ? Symlinks.FOLLOW : Symlinks.NOFOLLOW)) { entries.put(entry.getName(), entry); } } catch (FileNotFoundException e) { if (!ignoredNotFoundInRemote) { throw e; } } return ImmutableList.sortedCopyOf(entries.values()); }",protected Collection<String> getDirectoryEntries(PathFragment path) throws IOException { return super.getDirectoryEntries(path); }hange Return Type
updating of when an issue is last seen,"void loadDatabaseInfo(String hash, int id, long firstSeen, long lastSeen) {","void loadDatabaseInfo(String hash, int id, long firstSeen) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
subMenu => submenu,"private Menu addSubmenu(Menu menu, String id) { return menu.addSubmenu(ZLResource.resource(""menu"").getResource(id).getValue());","private Menu addSubMenu(Menu menu, String id) { return menu.addSubMenu(ZLResource.resource(""menu"").getResource(id).getValue());",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP,Rename Method
refactored without workspace Attribute,"private Map<String, String> getAttributes() { final Map<String, String> attributes = new HashMap<>(3); attributes.put(""attr1"", ""value1""); attributes.put(""attr2"", ""value2""); attributes.put(""attr3"", ""value3"");",private List<Attribute> getAttributes() { List<Attribute> attributes = new ArrayList<>(3); attributes.add(new Attribute().withName("attr1") .withValue("value1") .withDescription("description1")); attributes.add(new Attribute().withName("attr2") .withValue("value2") .withDescription("description2")); attributes.add(new Attribute().withName("attr3") .withValue("value3") .withDescription("description3"));,KEEP ADD REP KEEP KEEP ADD ADD REP KEEP KEEP KEEP REP REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL,Change Return Type
Pass context to CustomDirectories util,void updateMediaDirs(Context context) {,void updateMediaDirs() {,KEEP ADD REP KEEP,Add Parameter
SONARJAVA-1132 Remove usage of AstNode to get tokens of ForStatementTree,"Optional<StatementExpressionListTreeImpl> forUpdate, AstNode closeParenTokenAstNode,","Optional<StatementExpressionListTreeImpl> forUpdate, AstNode forUpdateSemicolonTokenAstNode,",KEEP KEEP KEEP REP,Rename Parameter
Complete first implementation of CollaboratinoMonitor,synchronized void removeDataSourceAddTask(UUID dataSourceId) { uuidsToAddDataSourceTasks.remove(dataSourceId.hashCode());,synchronized void removeDataSourceAddTask(DataSourceAddedEvent event) { uuidsToAddDataSourceTasks.remove(event.getDataSourceId().hashCode());,KEEP KEEP REP REP KEEP REP,Rename Parameter
Fix account list for group editing (for master),public static boolean areContactWritableAccountsAvailable(Context context) {,public static boolean areAccountsAvailable(Context context) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
updated 01.10.2009 23:37,void updateBounds() {,void adjustSize(boolean draw) {,KEEP REP DEL KEEP,Remove Parameter
Some fixes to polyglot API.,"LLVMManagedPointer doNative(LLVMNativePointer address, LLVMInteropType.Structured type) { return LLVMManagedPointer.create(LLVMTypedForeignObject.create(address, type));","LLVMNativePointer doNative(LLVMNativePointer address, LLVMInteropType.Structured type) { return address.export(type);",REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Change Return Type
"Implement getServicesManager(), which /reload needs or something.",public SimpleServicesManager getServicesManager() { return servicesManager;,public ServicesManager getServicesManager() { throw new UnsupportedOperationException("Not supported yet.");,KEEP REP KEEP KEEP REP REP DEL DEL DEL,Change Return Type
Now makes sure that any GOE props files are processed after jar files from all packages have been added to the classpath.,List<File> goePropsFiles) throws Exception {,"protected static void loadPackageDirectory(File directory, boolean verbose) throws Exception {",REP REP DEL DEL DEL DEL DEL KEEP KEEP KEEP,Add Parameter
Separate LayoutStateContext into Render & Layout state context,"final @Nullable RenderStateContext renderStateContext, @Nullable ComponentContext context) {","final @Nullable LayoutStateContext layoutStateContext, @Nullable ComponentContext context) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP,Rename Parameter
WICKET-5240 Add ModificationWatcher implementation that uses NIO2 file system polling,"public Nio2ModificationWatcher(final Application application, Duration pollFrequency)",public Nio2ModificationWatcher(final Application application),KEEP KEEP KEEP ADD ADD REP,Add Parameter
More work on timeline,"public void encodeEvent(FacesContext context, TimelineEvent event, SimpleDateFormat formatter, String timelineId) throws IOException {","public void encodeEvent(FacesContext context, TimelineEvent event) throws IOException {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP,Add Parameter
Using modification time to replace data version when externalview,"public HelixBrokerRoutingTable(HelixExternalViewBasedRouting helixExternalViewBasedRouting, String instanceId, HelixManager helixManager) {","public HelixBrokerRoutingTable(HelixExternalViewBasedRouting helixExternalViewBasedRouting, String instanceId) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Replace Vector by Collections.synchronized(new ArrayList()),public List<Integer> getData(String key) {,public Vector<Integer> getData(String key) {,KEEP REP KEEP KEEP KEEP,Change Return Type
YARN-2314. Disable ContainerManagementProtocolProxy cache by default to prevent creating thousands of threads in a large cluster. Contributed by Jason Lowe,private synchronized boolean removeProxy(,private synchronized void removeProxy(,KEEP KEEP REP KEEP,Change Return Type
Thread TreeProps through Sections,"public void insert(int index, RenderInfo renderInfo, TreeProps treeProps) {","public void insert(int index, RenderInfo renderInfo) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
GG-30694 [IGNITE-13074] Thin client: Fix default compute cluster group,"ClientComputeImpl(ReliableChannel ch, ClientBinaryMarshaller marsh, ClientClusterGroupImpl dfltGrp) {","ClientComputeImpl(ReliableChannel ch, ClientBinaryMarshaller marsh, ClientClusterImpl cluster) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Resolve compilation error by replacing stream,public Collection<Trip> getTripsForStop(StopLocation stop) { var ret = new ArrayList<Trip>(0); for(var t : getPatternsForStop(stop)) { ret.addAll(t.getTrips()); } return ret;,public List<Trip> getTripsForStop(StopLocation stop) { return getPatternsForStop(stop) .stream() .flatMap(t -> t.getTrips().stream()) .collect(Collectors.toCollection(ArrayList::new));,KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP,Change Return Type
Modified DataModelActionsFactory to deal with artifact source content,"static List<Action> getActions(Content content, boolean isArtifactSource) {",static List<Action> getActions(Content content) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Renames fields and parameters in RenderUnit,"public void addMountBinder(DelegateBinder<?, ? super MOUNT_CONTENT> binder) {","public void addMountBinder(DelegateBinder<?, ? super MOUNT_CONTENT> extension) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Migrate Section perf events to better logger,"public static PerfEvent getSectionsPerformanceEvent( ComponentContext c, int eventId, Section currentSection, Section nextSection) { final ComponentsLogger logger = c.getLogger(); if (logger == null) { return null; } final PerfEvent logEvent = logger.newBetterPerformanceEvent(eventId); logEvent.markerAnnotate(","public static LogEvent getSectionsPerformanceEvent( ComponentsLogger logger, String logTag, int eventId, Section currentSection, Section nextSection) { final LogEvent logEvent = logger.newPerformanceEvent(eventId); logEvent.addParam(",KEEP KEEP REP KEEP REP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP REP REP,Change Return Type
Fixed up component typing issues,"public <T extends Component> T addComponent(Component component) { if (component.attachTo(this)) { Class<? extends Component> clazz = component.getClass(); if (hasComponent(clazz)) { return (T) getComponent(clazz); } components.put(clazz, component); component.onAttached(); return (T) component; } else { return null;",public WorldComponent addComponent(Component component) { Class<? extends Component> clazz = component.getClass(); if (hasComponent(clazz)) { return (WorldComponent) getComponent(clazz);,KEEP ADD ADD ADD REP KEEP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
small change (rename fields and function) in RDispatch,RDispatch(String groupGenericName) { this.groupGenericName = groupGenericName;,RDispatch(String genericName) { this.genericName = genericName;,KEEP REP KEEP REP KEEP REP,Rename Parameter
Replaced getStaticLabel() with getLabelResource(),public String getLabelResource(),public String getStaticLabel(),KEEP KEEP REP,Rename Method
"Revert, use system/admin credentials to add subscription","protected SubscriptionInfo doAddTrialSubscription(String accountId) throws IOException, JsonParseException { String accessToken = login();","protected SubscriptionInfo doAddTrialSubscription(String accountId, String accessToken) throws IOException, JsonParseException {",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Remove Parameter
Create new layout for xlarge contact-detail-items,"private static String buildActionString(DataKind kind, ContentValues values, Context context) {","boolean lowerCase, Context context) {",ADD ADD ADD ADD ADD REP REP KEEP KEEP KEEP,Remove Parameter
Move the ThumbnailerManager into the MainActivity,private ThumbnailerManager(Activity parentActivity) { mActivity = parentActivity;,public ThumbnailerManager(VideoListFragment videoListActivity) { mVideoListActivity = videoListActivity;,REP REP REP KEEP REP KEEP REP,Rename Parameter
fixed getHash() call with closed DB,"public String getHash(Book book, boolean force) {",public String getHash(Book book) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Allow native.existing_rule and native.existing_rules to return a lightweight view.,public Object existingRules(StarlarkThread thread) throws EvalException {,"public Dict<String, Dict<String, Object>> existingRules(StarlarkThread thread) throws EvalException {",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP,Change Return Type
"[Java] [Native] Unify exception messages for async, add the status code (#9825)","String message = formatExceptionMessage(operationId, response.statusCode(), body); return new ApiException(response.statusCode(), message, response.headers(), body); } private String formatExceptionMessage(String operationId, int statusCode, String body) { if (body == null || body.isEmpty()) { body = ""[no body]"";",if (body != null) { msgPrefix += ": " + body;,ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP REP REP REP REP REP REP REP REP REP,Rename Parameter
AudioBrowserFragment: Load content sooner,"private void setupAdapters(final int currentTab) { if (mArtistsAdapter == null) { mArtistsAdapter = new AudioBrowserAdapter(MediaLibraryItem.TYPE_ARTIST, this); artistProvider = ViewModelProviders.of(requireActivity(), new ArtistProvider.Factory(mSettings.getBoolean(Constants.KEY_ARTISTS_SHOW_ALL, false))).get(ArtistProvider.class); } if (mAlbumsAdapter == null) { mAlbumsAdapter = new AudioBrowserAdapter(MediaLibraryItem.TYPE_ALBUM, this); albumProvider = ViewModelProviders.of(requireActivity()).get(AlbumProvider.class); } if (mSongsAdapter == null) { mSongsAdapter = new AudioBrowserAdapter(MediaLibraryItem.TYPE_MEDIA, this); tracksProvider = ViewModelProviders.of(requireActivity()).get(TracksProvider.class); } if (mGenresAdapter == null) { mGenresAdapter = new AudioBrowserAdapter(MediaLibraryItem.TYPE_GENRE, this); genresprovider = ViewModelProviders.of(requireActivity()).get(Genresprovider.class); } if (mPlaylistAdapter == null) { mPlaylistAdapter = new AudioBrowserAdapter(MediaLibraryItem.TYPE_PLAYLIST, this); playlistsProvider = ViewModelProviders.of(requireActivity()).get(PlaylistsProvider.class); } mAdapters = new AudioBrowserAdapter[] {mArtistsAdapter, mAlbumsAdapter, mSongsAdapter, mGenresAdapter, mPlaylistAdapter};","private void setupObservers() { final SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(requireContext()); artistProvider = ViewModelProviders.of(requireActivity(), new ArtistProvider.Factory(prefs.getBoolean(Constants.KEY_ARTISTS_SHOW_ALL, false))).get(ArtistProvider.class); albumProvider = ViewModelProviders.of(requireActivity()).get(AlbumProvider.class); tracksProvider = ViewModelProviders.of(requireActivity()).get(TracksProvider.class); genresprovider = ViewModelProviders.of(requireActivity()).get(Genresprovider.class); playlistsProvider = ViewModelProviders.of(requireActivity()).get(PlaylistsProvider.class);",KEEP KEEP ADD ADD REP KEEP ADD ADD ADD REP REP REP KEEP ADD ADD REP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
"Switch RuntimeSerialization.{registerLambdaCapturingClass,registerProxyClass} to java.lang.Class<?> arguments","public static void registerLambdaCapturingClass(Class<?> lambdaCapturingClass) { ImageSingletons.lookup(RuntimeSerializationSupport.class).registerLambdaCapturingClass(ConfigurationCondition.alwaysTrue(), lambdaCapturingClass);","public static void registerLambdaCapturingClass(String lambdaCapturingClassName) { ImageSingletons.lookup(RuntimeSerializationSupport.class).registerLambdaCapturingClass(ConfigurationCondition.alwaysTrue(), lambdaCapturingClassName);",KEEP KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
Fix thumbnails scale for TV,"void updateCardViewImage(MediaLibraryItem mediaLibraryItem) { if (!TextUtils.isEmpty(mediaLibraryItem.getArtworkMrl()) && mediaLibraryItem.getArtworkMrl().startsWith(""http"")) { AsyncImageLoader.LoadImage(new HttpImageLoader(mediaLibraryItem.getArtworkMrl()), mCardView);","void updateCardViewImage(MediaLibraryItem mediaWrapper) { mCardView.getMainImageView().setScaleType(ImageView.ScaleType.CENTER_CROP); if (!TextUtils.isEmpty(mediaWrapper.getArtworkMrl()) && mediaWrapper.getArtworkMrl().startsWith(""http"")) { AsyncImageLoader.LoadImage(new HttpImageLoader(mediaWrapper.getArtworkMrl()), mCardView);",KEEP KEEP REP KEEP DEL KEEP REP KEEP REP KEEP KEEP REP KEEP,Rename Parameter
2012.04.23 (1.46m),private boolean deleteOverlayRoi(ImagePlus imp) { Overlay overlay = imp!=null?imp.getOverlay():null;,"private boolean deleteOverlayRoi(ImagePlus imp, Roi roi) { Overlay overlay = imp.getOverlay();",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP REP,Remove Parameter
Merging r1604955 from trunk to branch-2.,Collection<String> getUsers() {,Set<String> getUsers() {,REP KEEP KEEP,Change Return Type
generate more random numbers at once,public double[] genrandDouble(int count) { int state0 = state[0]; int state1 = state[1]; double[] result = new double[count]; for (int i = 0; i < count; i++) { state0 = 36969 * (state0 & 0177777) + (state0 >>> 16); state1 = 18000 * (state1 & 0177777) + (state1 >>> 16); int x = (state0 << 16) ^ (state1 & 0177777); double d = (x & 0xffffffffL) * RRNG.I2_32M1; result[i] = RRNG.fixup(d);  } state[0] = state0; state[1] = state1; return result;,public double genrandDouble() { state[0] = 36969 * (state[0] & 0177777) + (state[0] >>> 16); state[1] = 18000 * (state[1] & 0177777) + (state[1] >>> 16); int x = (state[0] << 16) ^ (state[1] & 0177777); double d = (x & 0xffffffffL) * RRNG.I2_32M1; return RRNG.fixup(d); ,KEEP ADD REP REP KEEP ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP,Change Return Type
GetDirectBufferCapacity() JNI must return -1 if the given object is not a direct java.nio.Buffer.,"static long GetDirectBufferCapacity(JNIEnvironment env, JNIObjectHandle handle) { Target_java_nio_Buffer buf = Support.directBufferFromJNIHandle(handle); return (buf == null) ? -1 : buf.capacity;","static long GetDirectBufferCapacity(JNIEnvironment env, JNIObjectHandle hbuf) { Buffer buffer = JNIObjectHandles.getObject(hbuf); return buffer.capacity();",KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP REP KEEP ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Changed from JCE to bouncy castle API,public AsymmetricCipherKeyPair  getKeyPair(String algorithm) {,public KeyPair getKeyPair(String algorithm) {,KEEP ADD REP KEEP KEEP KEEP,Change Return Type
Issue #501: Improve quality of error messages when we can't parse the command line arguments,public Class<A> getType() {,public Class<T> getType() {,KEEP REP KEEP KEEP,Change Return Type
Eliminate some illegal access warnings when indy is enabled (#1058),public MetaClass getMetaClass() {,public void getMetaClass() {,KEEP REP KEEP KEEP,Change Return Type
Implement other types in NewAltRepNode,public static int getLengthUncached(RAbstractVector altrepVec) { assert altrepVec.isAltRep();,public static int getLengthUncached(RStringVector altStringVec) { assert altStringVec.isAltRep();,KEEP KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
Update toolchain resolution to use ToolchainTypeRequirement.,ImmutableSet<ToolchainTypeRequirement> toolchainTypeRequirements),ImmutableSet<Label> requestedToolchainTypeLabels),REP REP,Rename Parameter
Fix blackboard code,"private void addInterestingFileToArtifacts(AbstractFile file, String ruleSetName, String ruleName, List<BlackboardArtifact> artifacts) throws TskCoreException {","private void addInterestingFile(AbstractFile file, String ruleSetName, String ruleName) throws TskCoreException {",KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
various cloud updates,"void loadDatabaseInfo(String hash, int id, long firstSeen, String bugDatabaseKey, @CheckForNull Timestamp bugFiled, @CheckForNull String filedBy) {","void loadDatabaseInfo(String hash, int id, long firstSeen) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
"Inside SegmentPreProcessor, enhance the logic of inverted index creation (#323)","SegmentPreProcessor(File indexDir, SegmentMetadataImpl segmentMetadata, IndexLoadingConfigMetadata indexConfig) {","SegmentPreProcessor(File indexDir, SegmentMetadataImpl metadata, IndexLoadingConfigMetadata indexConfig) {",KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
add documentation,"private static Tuple2<Set<Sentence>, List<Sort>> genInternal(K term, K ensures, Att att, Module m) { if (term instanceof KApply) { KApply kapp = (KApply) term;","private static Tuple2<Set<Sentence>, List<Sort>> genInternal(K body, K ensures, Att att, Module m) { if (body instanceof KApply) { KApply kapp = (KApply) body;",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
UP-3625 Remove use of reflection in favor of abstract method,protected abstract Comparator<? super D> getDiscriminatorComparator();,"protected abstract ComparableExtractingComparator<?,?> getDiscriminatorComparator();",KEEP KEEP ADD ADD REP KEEP,Change Return Type
HDFS-6753. Initialize checkDisk when DirectoryScanner not able to get files list for scanning (Contributed by J.Andreina),"DirectoryScanner(DataNode datanode, FsDatasetSpi<?> dataset, Configuration conf) { this.datanode = datanode;","DirectoryScanner(FsDatasetSpi<?> dataset, Configuration conf) {",ADD ADD REP KEEP KEEP KEEP KEEP ADD ADD ADD,Add Parameter
#30 aligned SortMeta with FilterMeta,"public SortMeta(String columnKey, String sortField, SortOrder sortOrder, MethodExpression sortFunction) { this.columnKey = columnKey;","public SortMeta(UIColumn column, String sortField, SortOrder sortOrder, MethodExpression sortFunction) { this.column = column;",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Logs appropriate method in case of exception. Lck files deleted.,"private Logger(String name, String resourceBundleName) { super(name, resourceBundleName);","private Logger(java.util.logging.Logger log) { super(log.getName(), log.getResourceBundleName());",KEEP ADD ADD REP REP KEEP REP REP,Add Parameter
Added some documentation.,"public static void emit(UnsignedWord safepointId, int numJavaThreads, long startTicks) {","public static void emit(UnsignedWord safepointId, int numOfThreads, long startTicks) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
WICKET-2747 AjaxPagingNavigator Link factories should return AbstractLink,"protected AbstractLink newPagingNavigationIncrementLink(String id, IPageable pageable, int increment)","protected Link<?> newPagingNavigationIncrementLink(String id, IPageable pageable, int increment)",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
MAINTENANCE: Solve lint issues and reenable lint rules,"public boolean connect(String host, int port) {","public Boolean connect(String host, int port) { this.host = host; this.port = port;",KEEP REP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL,Change Return Type
General change to the way that dataflow analyses work:,private Iterator<Edge> logicalPredecessorEdgeIterator(BasicBlock block) { return isForwards ? cfg.incomingEdgeIterator(block) : cfg.outgoingEdgeIterator(block);,private Iterator<BasicBlock> logicalPredecessors(BasicBlock block) { if (isForwards) return cfg.predecessorIterator(block);  else return cfg.successorIterator(block); ,KEEP REP REP KEEP KEEP DEL DEL KEEP REP REP REP REP REP,Change Return Type
PG array handle fix (use proper item type),"public static Object convertStringToValue(DBCSession session, DBSTypedObject arrayType, String string) throws DBCException { if (arrayType.getDataKind() == DBPDataKind.ARRAY) {","public static Object convertStringToValue(DBCSession session, DBSTypedObject itemType, String string) throws DBCException { if (itemType.getDataKind() == DBPDataKind.ARRAY) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Adding fix for handling time buckets,"static String getBetweenClause(String collection, DateTime start, DateTime end, TimeSpec timeFieldSpec) {","static String getBetweenClause(DateTime start, DateTime end, TimeSpec timeFieldSpec) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
UI Updates,private void fileSizeCheckActionPerformed(java.awt.event.ActionEvent evt) { if (!this.fileSizeCheck.isSelected()) {,private void fileCheckActionPerformed(java.awt.event.ActionEvent evt) { if (!this.fileCheck.isSelected()) {,KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Method
#30 merged globalFilter to filterMeta,public List<SortMeta> getSortMeta() {,public List<SortMeta> getMultiSortState() {,KEEP KEEP REP KEEP,Rename Method
[GR-37162] Add support for parsing dependencies,"private CoffFile(ByteSequence bytes, ImageFileHeader header, ImageOptionHeader optionHeader) {","private CoffFile(ByteSequence bytes, ImageFileHeader header) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Machine agent implementation (#691),"@Nullable @Named(""machine.ws_agent.run_command"") String wsAgentRunCommand,","@Named(WS_AGENT_PROCESS_START_COMMAND) String wsAgentStartCommandLine,",ADD REP KEEP REP,Rename Parameter
WICKET-4201 removing unnecessary parameters plus javadoc for PageProvider#Provision class,Provision resolveTo(IRequestablePage page),Provision resolve(IRequestablePage page),KEEP REP KEEP,Rename Method
@Subcribe is not supported on methods on behaviors,"private void subscribeComponent(Component component, Behavior behavior, Method method)","private void subscribeComponent(Component component, Method method)",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
Changed to add get/set transform to transform component,public Transform getTransform() { return wrapped.copy(); },public Transform copy() { return wrapped.copy(); },KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Refactor: Remove arity and varargs from constructors of method yields,"public ExceptionalYield(ExplodedGraph.Node node, MethodBehavior behavior) { super(node, behavior);","public ExceptionalYield(int arity, boolean varArgs) { super(arity, varArgs);",KEEP REP REP REP REP KEEP REP REP,Add Parameter
improve fitGraph and other small tweaks,private void organicLayoutButtonActionPerformed(ActionEvent evt) {,private void OrganicLayoutButtonActionPerformed(ActionEvent evt) {,KEEP KEEP REP KEEP KEEP,Rename Method
More lighting stuff,"public SpoutChunk(SpoutWorld world, SpoutRegion region, float x, float y, float z, PopulationState popState, int[] palette, int blockArrayWidth, int[] variableWidthBlockArray, byte[] skyLight, byte[] blockLight, ManagedHashMap extraData, boolean lightStable) { this(world, region, x, y, z, popState, extraData, lightStable);","public SpoutChunk(SpoutWorld world, SpoutRegion region, float x, float y, float z, PopulationState popState, int[] palette, int blockArrayWidth, int[] variableWidthBlockArray, byte[] skyLight, byte[] blockLight, ManagedHashMap extraData) { this(world, region, x, y, z, popState, extraData);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
New layout of the contact widget,"final Context context, final AppWidgetManager appWidgetManager, final int widgetId) {","public static void loadWidgetData(final Context context, final int widgetId) {",REP REP REP REP REP REP KEEP KEEP KEEP KEEP,Add Parameter
Added getFragment(String fragmentId) method plus some modifications,public Set getFragmentIds() throws PortalException { Set fragmentIds = new HashSet(); for ( Enumeration nodes = layout.elements(); nodes.hasMoreElements();) { ALNode node = (ALNode) nodes.nextElement(); String fragmentId = node.getFragmentId(); if ( fragmentId != null && !fragmentIds.contains(fragmentId)) fragmentIds.add(fragmentId); },public Enumeration getFragmentIds() throws PortalException {,KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
disabled one failing test after backing out changeset 38cad6b67bd1,@Test public void TestSimpleBuiltins_testLookupIgnore_48d8f6c2d2586ee471cfa0421ea5b4ae() { assertEval("{ exists(\"sum\") }"); },@Test public void TestSimpleBuiltins_testLookup_48d8f6c2d2586ee471cfa0421ea5b4ae() { assertEval("{ exists(\"sum\") }"); },KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
Rename variables,public WheelchairAccessibilityRequest wheelchairAccessibility() {,public WheelchairAccessibilityRequest accessibilityMode() {,KEEP KEEP REP KEEP,Rename Method
Fix classloader issue where plugins are handed the wrong version of a class.,"public CommonPluginLoader(final Engine engine, final CommonSecurityManager manager, final double key) { this.engine = engine;","public CommonPluginLoader(final Engine game, final CommonSecurityManager manager, final double key) { this.game = game;",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Clean up getters and setters of filters,"public void updateListFilter(ContactListFilter filter, boolean restoreSelectedUri) {","public void setFilter(ContactListFilter filter, boolean restoreSelectedUri) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
- fixed method name typo,public void setCompressionType(@SuppressWarnings("unused") RCompression.Type cType) throws IOException { throw new IOException("Not yet implemented");,public void setCompressiontype(@SuppressWarnings("unused") RCompression.Type cType) throws IOException { throw new IOException();,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Rename Method
Add Help->Check For Updates item to menu,"public void showUpdateDialog(Collection<UpdateChecker.PluginUpdate> updates, boolean force) {",public void showUpdateDialog(Collection<UpdateChecker.PluginUpdate> updates) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Added support for non-string "levels" attribute.,"protected Object doObject(VirtualFrame frame, RAbstractContainer container) {","protected Object doObject(VirtualFrame frame, RAbstractVector vector) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
"1917-Comments added and other minor clean up, emptyNode removed",T visit(FileTypesByMimeType.FileTypesByMimeTypeNode ftByMimeTypeNode);,T visit(FileTypesByMimeType.FileTypesByMimeTypeNode aThis);,KEEP KEEP REP,Rename Parameter
git-svn-id: https://only.mawhrin.net/repos/FBReaderJ/trunk@66 6a642e6f-84f6-412e-ac94-c4a38d5a04b0,"public ZLTextControlEntry createControlEntry(byte kind, boolean isStart) {","public ZLTextControlEntryImpl createControlEntry(byte kind, boolean isStart) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Remove VisibilityController interface,"RBuiltinFactory(String name, RVisibility visibility, String[] aliases, RBuiltinKind kind, ArgumentsSignature signature, int[] nonEvalArgs, boolean splitCaller, boolean alwaysSplit, RDispatch dispatch,","RBuiltinFactory(String name, String[] aliases, RBuiltinKind kind, ArgumentsSignature signature, int[] nonEvalArgs, boolean splitCaller, boolean alwaysSplit, RDispatch dispatch,",KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Enable autotune to tune alert filter for a group of functions (#1913),"public Response tuneAlertFilter(@PathParam(""functionIds"") String ids,","public Response tuneAlertFilter(@PathParam(""functionId"") long id,",KEEP KEEP REP REP REP,Rename Parameter
Rename config to params where appropriate,FlexParameters flexParams,FlexParameters config,KEEP REP,Rename Parameter
[multistage][reland] fix leaf stage return data schema (#9929),"private static TransferableBlock composeDirectTransferableBlock(InstanceResponseBlock responseBlock, DataSchema desiredDataSchema) { Collection<Object[]> resultRows = responseBlock.getRows(); List<Object[]> extractedRows = new ArrayList<>(resultRows.size()); if (resultRows instanceof List) { for (Object[] orgRow : resultRows) { extractedRows.add(canonicalizeRow(orgRow, desiredDataSchema)); } } else if (resultRows instanceof PriorityQueue) { PriorityQueue<Object[]> priorityQueue = (PriorityQueue<Object[]>) resultRows; while (!priorityQueue.isEmpty()) { extractedRows.add(canonicalizeRow(priorityQueue.poll(), desiredDataSchema)); } } else { throw new UnsupportedOperationException(""Unsupported collection type: "" + resultRows.getClass()); } return new TransferableBlock(extractedRows, desiredDataSchema, DataBlock.Type.ROW); } private static boolean inOrder(int[] columnIndices) { for (int i = 0; i < columnIndices.length; i++) { if (columnIndices[i] != i) { return false; } } return true; }","private static List<Object[]> toList(Collection<Object[]> collection, DataSchema dataSchema) { if (collection == null || collection.isEmpty()) { return new ArrayList<>(); } List<Object[]> resultRows = new ArrayList<>(collection.size()); if (collection instanceof List) { for (Object[] orgRow : collection) { resultRows.add(canonicalizeRow(orgRow, dataSchema));",KEEP KEEP REP REP REP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD REP REP REP REP REP KEEP REP REP REP KEEP ADD ADD ADD ADD ADD ADD REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP KEEP KEEP ADD ADD ADD ADD REP REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP,Change Return Type
Interim checkin of new hash db API work,"private HashDb(int handle, String name, String databasePath, boolean useForIngest, boolean showInboxMessages, DBType type) {","private HashDb(int handle, String name, List<String> databasePaths, boolean useForIngest, boolean showInboxMessages, DBType type) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Store flagging value in DataAddedTask.,"private DataAddedTask(EamDb db, PropertyChangeEvent evt, boolean flagNotableItemsEnabled) {","private DataAddedTask(EamDb db, PropertyChangeEvent evt) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
2014.03.07 (1.48s),public static Rectangle getZeroBasedMaxBounds() {,public static Rectangle getModifiedMaxWindowBounds() {,KEEP KEEP KEEP REP KEEP,Rename Method
Recursive local file support in FileManager and dir tree,public Boolean visit(LocalFileNode lfn) { return visitDeep(lfn); } @Override public Boolean visit(LayoutFileNode fn) { return visitDeep(fn);,"public Boolean visit(LocalFileNode dfn) { boolean hasChildren = dfn.hasContentChildren(); if (!hasChildren) { return true; } List<Content> derivedChildren = dfn.getContentChildren(); for (Content childContent : derivedChildren) { if (((AbstractFile) childContent).isDir()) { return false; } else { try { if (childContent.hasChildren()) { return false; } } catch (TskCoreException e) { logger.log(Level.SEVERE, ""Error checking if derived file node is leaf."", e); } } } return true;",KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP REP REP REP REP REP DEL DEL DEL DEL KEEP DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Remove constructor from base class ColumnIndexDirectory (#6996),"protected FilePerIndexDirectory(File segmentDirectory, SegmentMetadataImpl segmentMetadata, ReadMode readMode) { Preconditions.checkNotNull(segmentDirectory); Preconditions.checkNotNull(readMode); Preconditions.checkNotNull(segmentMetadata); Preconditions.checkArgument(segmentDirectory.exists(), ""SegmentDirectory: "" + segmentDirectory.toString() + "" does not exist""); Preconditions.checkArgument(segmentDirectory.isDirectory(), ""SegmentDirectory: "" + segmentDirectory.toString() + "" is not a directory""); _segmentDirectory = segmentDirectory; _segmentMetadata = segmentMetadata; _readMode = readMode; } @Override public void setSegmentMetadata(SegmentMetadataImpl segmentMetadata) { _segmentMetadata = segmentMetadata;","protected FilePerIndexDirectory(File segmentDirectory, SegmentMetadataImpl metadata, ReadMode readMode) { super(segmentDirectory, metadata, readMode);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP,Rename Parameter
Don't re-attempt analyses that have failed.,"public Analysis getAnalysis(Method method) throws CFGBuilderException, DataflowAnalysisException { AnalysisResult<Analysis> result = map.get(method);","public AnalysisResult getAnalysis(Method method) throws CFGBuilderException, DataflowAnalysisException { AnalysisResult result = map.get(method);",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
"[GR-6010] Use the new Scope class after metadata deprecation, provide global scope.",protected Iterable<Scope> findTopScopes(RContext langContext) { return RScope.createTopScopes(langContext);,"public AbstractScope findScope(RContext langContext, Node node, Frame frame) { return RScope.createScope(node, frame);",REP REP REP REP DEL DEL DEL DEL KEEP KEEP REP DEL,Change Return Type
Revert D5900370: [Litho] EventTrigger Outside of Component Hierarchy,"protected static EventTrigger getEventTrigger(ComponentContext c, int methodId, String key) {","protected static EventTrigger getEventTrigger(ComponentContext c, int id, String key) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
SONARJAVA-3065 Deprecate coverage per test,AnalysisWarningsWrapper analysisWarnings) {,"public UnitTestAnalyzer(File report, ResourcePerspectives perspectives, JavaResourceLocator javaResourceLocator, JavaClasspath javaClasspath) {",REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
Implemented missing static api methods.,"public VirtualFrameClearNode(Receiver frame, int frameSlotIndex, int illegalTag, VirtualFrameAccessType type, byte accessMode) {","public VirtualFrameClearNode(Receiver frame, int frameSlotIndex, int illegalTag, VirtualFrameAccessType type, boolean staticAccess, boolean primitiveAccess) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP DEL DEL KEEP,Add Parameter
Add editor for visible valuesDeltas,public List<ValuesDelta> getVisibleValuesDeltas() {,public List<ValuesDelta> getVisibleNonEmptyValuesDeltas() {,KEEP KEEP REP KEEP,Rename Method
return more fields in loadInfoFromConn2 and serializeInfoFromConn,"private VersionInfo(int version, int writerVersion, int minReaderVersion, String format, String nativeEncoding) {","public VersionInfo(int version, int writerVersion) {",REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
WICKET-4744 Investigate reworking WicketObjects#clone(Object|Model) methods to use ISerializer,public static <T> T cloneModel(final T object),public static Object cloneModel(final Object object),KEEP KEEP ADD REP KEEP REP KEEP,Change Return Type
docs,public String getField() { return field;,public String getSortField() { return sortField;,KEEP KEEP REP KEEP KEEP REP,Rename Method
"keyword search ingest: search only images being ingested, not other images present in the index",public long[] getIdFilters() { return idFilters; },public long getIdFilter() { return idFilter;,KEEP REP REP KEEP KEEP ADD REP,Change Return Type
Fix #6728: Multisort priority indicators (#6729),SortMeta sortMeta) throws IOException {,"protected void encodeColumnHeaderContent(FacesContext context, DataTable table, UIColumn column, String sortIcon) throws IOException {",REP REP DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP,Rename Parameter
"if empty, use default order","private void storeProperties(Node root, String type) { if(type.isEmpty()) return;",private void storeProperties(Node root) {,KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD,Add Parameter
[java] CloseResource false positive when resource included in return value,"ASTMethodOrConstructorDeclaration method) { return !isWrappingResourceMethodParameter(var, method); } private boolean isWrappingResourceMethodParameter(ASTVariableDeclarator var, ASTMethodOrConstructorDeclaration method) { String wrappedVarName = getWrappedVariableName(var); if (wrappedVarName != null) { ASTFormalParameters methodParams = method.getFirstDescendantOfType(ASTFormalParameters.class); if (methodParams != null) { List<ASTVariableDeclaratorId> ids = methodParams.findDescendantsOfType(ASTVariableDeclaratorId.class); for (ASTVariableDeclaratorId id : ids) { if (id.hasImageEqualTo(wrappedVarName) && isResourceTypeOrSubtype(id)) { return true; } }","private boolean isMethodParameter(ASTVariableDeclarator var, ASTMethodOrConstructorDeclaration methodOrCstor) { if (!var.hasInitializer()) { return false; } boolean result = false; ASTVariableInitializer initializer = var.getInitializer(); ASTName name = initializer.getFirstDescendantOfType(ASTName.class); if (name != null) { ASTFormalParameters formalParameters = null; if (methodOrCstor instanceof ASTMethodDeclaration) { formalParameters = ((ASTMethodDeclaration) methodOrCstor).getFormalParameters(); } else if (methodOrCstor instanceof ASTConstructorDeclaration) { formalParameters = ((ASTConstructorDeclaration) methodOrCstor).getFormalParameters(); } if (formalParameters != null) { List<ASTVariableDeclaratorId> ids = formalParameters.findDescendantsOfType(ASTVariableDeclaratorId.class); for (ASTVariableDeclaratorId id : ids) { if (id.hasImageEqualTo(name.getImage()) && isResourceTypeOrSubtype(id)) { result = true; break; } } }",DEL DEL DEL DEL KEEP REP KEEP REP REP REP REP REP DEL KEEP REP REP REP REP REP REP REP DEL DEL KEEP REP KEEP REP KEEP KEEP KEEP KEEP REP KEEP REP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP DEL KEEP DEL DEL KEEP KEEP,Rename Parameter
API changes to prepare for entities,public Set<Entity> getAll(Class<? extends Controller> type) { return (Set) entityManager.getAll(type);,public Collection<Entity> getAll(Class<? extends Controller> type) { return (Collection) entityManager.getAll(type);,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
Eliminate Symbol class references from ReadVariableNode related classes.,public RNode visit(FunctionCall call) {,public RNode visit(FunctionCall callParam) { FunctionCall call = callParam;,KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL,Rename Parameter
Temporarily backed out changeset: ed173dfd9480,"public OptVariableDefaultPromiseNode(RPromiseFactory factory, ReadVariableNode rvn, boolean wrap) { super(factory, rvn, wrap);","public OptVariableDefaultPromiseNode(RPromiseFactory factory, ReadVariableNode rvn, int wrapIndex) { super(factory, rvn, wrapIndex);",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP REP,Rename Parameter
category abbreviation goes in message files,"public boolean registerBugCategory(String category, BugCategory bc) {","public boolean registerBugCategoryDescription(String category, String desc) {",KEEP KEEP REP KEEP REP REP KEEP,Rename Parameter
Revert "Fixed allocation size for HugeByteBuffer and proper deallocation of buffer in tests","HugeByteBuffer(ByteBuffer[] buffers, long startPosition, long size, boolean owner, int segmentSize, int extension) {","HugeByteBuffer(ByteBuffer[] buffers, long startPosition, long size, boolean owner, int segmentSize, int extensionBytes) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix an issue with setting off days,boolean afterMidnight,boolean isAfterMidnight,KEEP REP,Rename Parameter
Fixed delegate portlet config save/cancel parsing issue with RespondrJS.,"public PortletEntityIdImpl(IPortletDefinitionId portletDefinitionId, String layoutNodeId, int userId) {","public PortletEntityIdImpl(IPortletDefinitionId portletDefinitionId, String layoutNodeId, int userId, String compositeIdString) {",KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
YARN-1659. Defined the ApplicationTimelineStore store as an abstraction for implementing different storage impls for storing timeline information. Contributed by Billie Rinaldi.,public Long getStartTime() {,public long getStartTime() {,KEEP REP KEEP KEEP,Change Return Type
[Java] Make AeronCluster.asyncConnect work completely asynchronously. Don't report exceptions to the error handler that are used for async resources.,"AsyncConnect(final Context ctx, final long deadlineNs)","AsyncConnect(final Context ctx, final Subscription egressSubscription, final long deadlineNs)",KEEP KEEP KEEP KEEP DEL DEL DEL KEEP KEEP,Remove Parameter
Control panels layer has been rewritten,private final void createNavigation(View layout) {,"private final void createNavigation() { final ControlPanel panel = myNavigatePanel.ControlPanel; final View layout = getLayoutInflater().inflate(R.layout.navigate, panel, false);",KEEP KEEP KEEP ADD REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Add multiselect to contact picker,"AddGroupMembersAsyncTask(Context context, long[] contactIds, long groupId, String accountName, String accountType) {","AddGroupMembersAsyncTask(Context context, long contactId, long groupId, String accountName, String accountType) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Update Medialibrary method to check if scanning,public static synchronized Medialibrary getInstance(Context context) { if (sInstance == null) {,public static synchronized Medialibrary getInstance() { if (sInstance == null),KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP ADD,Add Parameter
documentation for records (cont'd) plus minor refactoring/cleanup,"static MethodNode createCopyWith(final ClassNode cNode, final List<PropertyNode> pList) {","static void createCopyWith(final ClassNode cNode, final List<PropertyNode> pList) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
#3413,public void update(Collection<String> expressions) { if (expressions == null || expressions.isEmpty()) {,public void update(Collection<String> clientIds) { if (clientIds == null || clientIds.isEmpty()) {,KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
FastR Grid: make DrawingContext immutable,public static RList createNew(GridDevice device) {,public static RList createNew() {,KEEP KEEP KEEP ADD REP KEEP,Add Parameter
add a freshness based consumption status checker (#9244),"public StreamPartitionMsgOffset fetchLatestStreamOffset(long maxWaitTimeMs) { try (StreamMetadataProvider metadataProvider = _streamConsumerFactory.createPartitionMetadataProvider(_clientId, _partitionGroupId)) { return metadataProvider.fetchStreamPartitionOffset(OffsetCriteria.LARGEST_OFFSET_CRITERIA, maxWaitTimeMs);","private void fetchLatestStreamOffset() { try (StreamMetadataProvider metadataProvider = _streamConsumerFactory .createPartitionMetadataProvider(_clientId, _partitionGroupId)) { _latestStreamOffsetAtStartupTime = metadataProvider.fetchStreamPartitionOffset(OffsetCriteria.LARGEST_OFFSET_CRITERIA, 5000);",ADD REP REP REP KEEP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP REP DEL KEEP REP,Change Return Type
Close RocksDB objects that are AutoCloseable,public static RocksPageStore open(RocksPageStoreOptions pageStoreOptions) throws IOException { Preconditions.checkArgument(pageStoreOptions.getMaxPageSize() > 0);,public static RocksPageStore open(RocksPageStoreOptions options) throws IOException { Preconditions.checkArgument(options.getMaxPageSize() > 0);,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
SONARJAVA-1073 Encapsulate triggering of analysis / Simplify reporting of issues,"public static void analyze(MethodTree method, SymbolicExecutionCheck check) { BlockTree block = method.block(); if (block != null) { ExecutionState executionState = new ExecutionState(); List<SymbolicValue> arguments = new ArrayList<>(); for (VariableTree methodParameter : method.parameters()) {","public DataFlowVisitor(MethodTree analyzedMethod, SymbolicExecutionCheck check) { this.check = check; executionState = new ExecutionState(); List<SymbolicValue> arguments = new ArrayList<>(); for (VariableTree methodParameter : analyzedMethod.parameters()) { if (isSymbolRelevant(methodParameter.symbol())) {",KEEP ADD ADD REP REP KEEP KEEP KEEP ADD REP KEEP ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL KEEP,Rename Parameter
Follow the java convention for parameter names,"public JLabeledRadioI18N(String labelResource, String[] itemResources, String selectedItem) { setLabel(labelResource); init(itemResources, selectedItem);","public JLabeledRadioI18N(String label_resource, String[] item_resources, String selectedItem) { setLabel(label_resource); init(item_resources, selectedItem);",KEEP KEEP REP KEEP REP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
remove some useless members,"protected void playVideo(int position, boolean fromStart) {",protected void playVideo(int position) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
fixed resource model bug,public <String> IWrapModel<String> wrapOnAssignment(final Component<String> component),public <String> IWrapModel<String> wrapOnInhertance(final Component<String> component),KEEP KEEP KEEP REP KEEP KEEP,Rename Method
"Keep a Bitmap's pixels when created from Bitmap.createBitmap(int[], int, int, Config).","public static Bitmap createBitmap(int[] colors, int width, int height, Bitmap.Config config) { if (colors.length != width * height) { throw new IllegalArgumentException(""array length ("" + colors.length + "") did not match width * height ("" + (width * height) + "")""); } Bitmap newBitmap = Bitmap.createBitmap(width, height, config); ShadowBitmap shadowBitmap = shadowOf(newBitmap); shadowBitmap.createdFromColors = colors; shadowBitmap.colors = new int[colors.length]; System.arraycopy(colors, 0, shadowBitmap.colors, 0, colors.length); return newBitmap; } @Implementation public int getPixel(int x, int y) { internalCheckPixelAccess(x, y); if (colors != null) { return colors[y * getWidth() + x]; } else { return 0; } } @Implementation public void setPixel(int x, int y, int color) { if (isRecycled()) { throw new IllegalStateException(""Can't call setPixel() on a recycled bitmap""); } else if (!isMutable()) { throw new IllegalStateException(""Bitmap is immutable""); } internalCheckPixelAccess(x, y); if (colors == null) { colors = new int[getWidth() * getHeight()]; } colors[y * getWidth() + x] = color;","public static Bitmap createBitmap(int[] ignored, int width, int height, Bitmap.Config config) { return Bitmap.createBitmap(width, height, configename Parameter
fixed NPE (and crash) in linux dev environment,public static Optional<Shell> markKNIMEShell() { var shell = PlatformUI.getWorkbench().getDisplay().getActiveShell();,public static void markKNIMEShell() { Shell shell = PlatformUI.getWorkbench().getDisplay().getActiveShell();,KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
UP-2047,public IChannelType getChannelType(String name);,public IChannelType getChannelType(String fname);,KEEP KEEP KEEP REP,Rename Parameter
SONARJAVA-3072 Removal of 'File' to rely on 'InputFile' (#2474),static SonarComponents sonarComponents(InputFile inputFile) {,static SonarComponents sonarComponents(File file) {,KEEP KEEP REP REP KEEP,Rename Parameter
#6592 skip filter and sort if none active,"public void sort(TreeTable tt, Map<String, SortMeta> sortBy) {",public void sort(TreeTable tt) {,KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
Back out "Move interstage props out of generated Component class",static TypeSpecDataHolder generateCopyInterStageImpl(SpecModel specModel) {,"SpecModel specModel, ClassName implClassName) {",REP REP REP REP KEEP,Remove Parameter
should only have used generic Throwable here,"protected HTTPSampleResult errorResult(Throwable t, HTTPSampleResult res) { return testElement.errorResult(t, res);","protected HTTPSampleResult errorResult(IllegalArgumentException e, HTTPSampleResult res) { return testElement.errorResult(e, res); } protected HTTPSampleResult errorResult(IOException iex, HTTPSampleResult res) { return testElement.errorResult(iex, res);",KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
modified to use new renderer arch and support html and csv,"private ReportType(ArtGenerator generator, RendererFactory rendererFactory)","private ReportType(ArtGenerator generator, HtmlRenderer renderer)",KEEP KEEP KEEP REP REP,Rename Parameter
possible different icons for different servers,"synchronized void addServiceItem(String name, String url, int iconId) {","synchronized void addServiceItem(String name, String url) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Remove stopIndex and stopSequence from Place,"Integer stopIndex, Integer stopSequence ) {","public ApiPlace mapPlace(Place domain, Calendar arrival, Calendar departure) {",REP REP REP REP REP DEL DEL DEL KEEP,Add Parameter
Android: Allow reading global settings without a Settings object,private static void showMessage(Context context),"private static void showMessage(Context context, Settings settings)",KEEP KEEP KEEP KEEP REP DEL DEL,Remove Parameter
Refactor anomaly detection framework for adding grouping logic (#1143),"private void setupTask(TaskInfo taskInfo, TaskContext taskContext) throws Exception { DetectionTaskInfo detectionTaskInfo = (DetectionTaskInfo) taskInfo; windowStarts = detectionTaskInfo.getWindowStartTime(); windowEnds = detectionTaskInfo.getWindowEndTime(); anomalyFunctionSpec = detectionTaskInfo.getAnomalyFunctionSpec(); jobExecutionId = detectionTaskInfo.getJobExecutionId(); anomalyFunctionFactory = taskContext.getAnomalyFunctionFactory();",protected void setupTask(TaskInfo taskInfo) { DetectionTaskInfo detectionTaskInfo = (DetectionTaskInfo) taskInfo; windowStarts = detectionTaskInfo.getWindowStartTime(); windowEnds = detectionTaskInfo.getWindowEndTime(); anomalyFunctionSpec = detectionTaskInfo.getAnomalyFunctionSpec(); jobExecutionId = detectionTaskInfo.getJobExecutionId(); },REP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Adding partition aware routing table builder (#1558),"public RoutingTableBuilderFactory(Configuration configuration, ZkHelixPropertyStore<ZNRecord> propertyStore) {",public RoutingTableBuilderFactory(Configuration configuration) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fixed null pointer exception in scan result,"public void registerPush(Hashtable metaData, boolean noFallback) {","public void registerPush(String id, boolean noFallback) {",KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Dynamic rate limit for pinot brokers (#2922),"public void dropTableQueryQuota(String tableNameWithType) { LOGGER.info(""Dropping rate limiter for table {}"", tableNameWithType); removeRateLimiter(tableNameWithType);","public void dropTableQueryQuota(String tableName) { String rawTableName = TableNameBuilder.extractRawTableName(tableName); LOGGER.info(""Dropping rate limiter for table {}"", rawTableName); removeRateLimiter(tableName);",KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Improve naming and documentation for String.tokenize (closes #541),"public static List<String> tokenize(CharSequence self, Character delimiter) { return tokenize(self, delimiter.toString());","public static List<String> tokenize(CharSequence self, Character token) { return tokenize(self, token.toString());",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
WICKET-4307,private void doChecksForNoComponent(final TestNoComponentInterface noncomponent),private void doChecksForNoComponent(final TestNoComponent component),KEEP KEEP KEEP REP REP,Rename Parameter
Implement an endpoint that outputs the baseline calculated by algorithms (#1623),"public Map<DimensionMap, MetricTimeSeries> getDimensionMapMetricTimeSeriesMap() { return dimensionMapMetricTimeSeriesMap;","public Map<DimensionMap, MetricTimeSeries> getDimensionKeyMetricTimeSeriesMap() { return dimensionKeyMetricTimeSeriesMap;",KEEP KEEP KEEP REP KEEP KEEP REP,Rename Method
Fixed issues with building Android locally with push.,"protected String registerNativeImplementationsAndCreateStubs(ClassLoader parentClassLoader, File stubDir, File... classesDirectory) throws MalformedURLException, IOException { nativeInterfaces = findNativeInterfaces(parentClassLoader, classesDirectory);","protected String registerNativeImplementationsAndCreateStubs(File stubDir, File... classesDirectory) throws MalformedURLException, IOException { nativeInterfaces = findNativeInterfaces(classesDirectory);",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Operators: added bitwise pseudo-operators (#729),"OperatorTranslation(int arity, String ceylonMethod,","OperatorTranslation(Class<? extends Tree.OperatorExpression> operatorClass, String ceylonMethod,",REP REP DEL DEL KEEP KEEP,Rename Parameter
Improved mobile selectManyButton with prerendered markup + ajax update support.,"public void encodeMarkup(FacesContext context, SelectManyButton button) throws IOException {","public void encodeEnd(FacesContext context, UIComponent component) throws IOException { SelectManyButton button = (SelectManyButton) component;",KEEP KEEP REP KEEP REP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Parameter
tips downloading has been implemented,private String getLocalFilePath() { return Paths.networkCacheDirectory() + "/tips/tips.xml";,private ZLFile getFile() { return ZLFile.createFileByPath(Paths.networkCacheDirectory() + "/tips/tips.xml");,KEEP REP REP KEEP KEEP REP KEEP REP,Change Return Type
fixes to comments,"public List<? extends Map<? extends KVariable,? extends K>> match(K k, org.kframework.definition.Rule rule) { return search(k, Optional.of(0), Optional.empty(), rule);","public List<Map<KVariable, K>> match(K k, org.kframework.definition.Rule rule) { return (List<Map<KVariable, K>>) search(k, Optional.of(0), Optional.empty(), rule);",KEEP ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Change Return Type
Renames fields and parameters in RenderUnit,"RenderType renderType, List<DelegateBinder<?, ? super MOUNT_CONTENT>> mountBinders) {","List<DelegateBinder<?, ? super MOUNT_CONTENT>> mountUnmountExtensions) {",ADD ADD KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
set @Values annotation will only reloaded the resouces from values folder,public void setValuesResQualifiers( String qualifiers ){ this.oldValuesResQualifier = this.valuesResQualifiers; this.valuesResQualifiers = qualifiers;,public void setLocale( String locale ){ this.oldLocale = this.locale; this.locale = locale;,KEEP KEEP REP KEEP REP KEEP REP KEEP REP REP KEEP REP,Rename Parameter
HDFS-5080. Merge change r1514386 from trunk.,"long fromTxnId, boolean forReading, boolean inProgressOk) {","public QuorumCall<AsyncLogger, RemoteEditLogManifest> getEditLogManifest(long fromTxnId, boolean forReading) {",REP REP REP REP DEL KEEP REP KEEP,Add Parameter
Extended DBImpl to create DBImplOracle which is a bit,"protected Element createChannelNode(Statement stmt, DocumentImpl doc, int chanId, String idTag) throws java.sql.SQLException","protected Element createChannelNode(Connection con, DocumentImpl doc, int chanId, String idTag) throws java.sql.SQLException",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
HDFS-7276. Limit the number of byte arrays used by DFSOutputStream and provide a mechanism for recycling arrays.,"private Packet(byte[] buf, int chunksPerPkt, long offsetInBlock, long seqno, int checksumSize) {","Packet(int pktSize, int chunksPerPkt, long offsetInBlock, long seqno, int checksumSize) {",ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
MAPREDUCE-6376. Add avro binary support for jhist files. Contributed by Ray Chiang,"EventWriter(FSDataOutputStream out, WriteMode mode) throws IOException {",EventWriter(FSDataOutputStream out) throws IOException {,KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Backport CASSANDRA-7386,public File getWriteableLocationAsFile(long writeSize),public File getWriteableLocationAsFile(),KEEP KEEP ADD REP,Add Parameter
initial changes to generalize ingest to input Content not just Image,Content getContent() { return pipelineContext.getScheduledTask().getContent();,Image getImage() { return pipelineContext.getScheduledTask().getImage();,REP REP KEEP KEEP REP,Change Return Type
changed bootstrap to just build tree,"public StandAloneBootstrapTool(String collection, StarTreeConfig starTreeConfig, Collection<Iterable<StarTreeRecord>> recordStreams, File outputDir)","public StandAloneBootstrapTool(Collection<Iterable<StarTreeRecord>> recordStreams, File outputDir, StarTreeRecordThresholdFunction thresholdFunction)",KEEP ADD ADD ADD ADD REP KEEP KEEP REP DEL DEL,Add Parameter
Revert "Fix #2054 by using a visitor to determine whether we can trust the type attributed to the variable in the else clause of if statements and if expressions.","List<JCStatement> transformIf(java.util.List<Condition> conditions, Tree.Block thenPart, Tree.Variable elseVar, Tree.Block elsePart) { return new IfCondList(conditions, thenPart, elseVar, elsePart).getResult();","List<JCStatement> transformIf(java.util.List<Condition> conditions, Tree.Block thenPart, Tree.Variable elseVar, Tree.Block elsePart, boolean trustedElseType) { return new IfCondList(conditions, thenPart, elseVar, elsePart, trustedElseType).getResult();",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP DEL,Remove Parameter
super.@x should fail for private fields -- no getX() or setX() workaround(closes #1291),"public void visitPropertyExpression(final PropertyExpression expression) { if (existsProperty(expression, !typeCheckingContext.isTargetOfEnclosingAssignment(expression))) return;","public void visitPropertyExpression(final PropertyExpression pexp) { if (visitPropertyExpressionSilent(pexp, pexp)) return;",KEEP KEEP KEEP KEEP REP KEEP KEEP REP REP KEEP,Rename Parameter
Parse tree reconstructed (almost),protected OctetNode visit(RSyntaxCall element) { LinkedList<OctetNode> children = new LinkedList<>();,protected Object visit(RSyntaxCall element) {,KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Change Return Type
Add test for maxSlope penalty of PathwayEdge,public double getMaxSlope() { return slope;,public float getMaxSlope() { return (float) slope;,KEEP REP KEEP KEEP KEEP DEL KEEP,Change Return Type
Port weekly report job,"protected File getFile(String viewId, String reportsDir, Map<String, String> context) throws ParseException {","protected File getFile(String tableName, String reportsDir, Map<String, String> context) throws ParseException {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Fixed #1772 Support maven overrides in Ceylon Ant tasks,protected String getMavenOverrides() { return mavenOverrides;,protected String getCwd() { return cwd;,KEEP KEEP REP KEEP KEEP REP,Rename Method
more generification,public List<V> getChoices(),public List getChoices(),KEEP REP KEEP,Change Return Type
Improve tests (and testability),"private ServiceDate inferServiceDate(Trip trip) { var staticTripTimes = getStaticPattern.apply(trip).getScheduledTimetable().getTripTimes(trip); return new ServiceDate(inferServiceDate(staticTripTimes, timeZoneId));",private LocalDate inferServiceDate(Trip trip) { var staticTripTimes = getStaticPattern.apply(trip).getScheduledTimetable().getTripTimes(trip);,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Change Return Type
Rename args to be a bit more meaningful.,"public FileVisitResult preVisitDirectory(Path file, BasicFileAttributes attrs)","public FileVisitResult preVisitDirectory(Path arg0, BasicFileAttributes arg1)",KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Enable getEventDeclarations for MountSpec,"PsiClass psiClass, Class<?> annotationClass) { final PsiAnnotation specAnnotation = AnnotationUtil.findAnnotation(psiClass, annotationClass.getName()); if (specAnnotation == null) { throw new RuntimeException(annotationClass.getName() + "" annotation not found on class"");","public static ImmutableList<EventDeclarationModel> getEventDeclarations(PsiClass psiClass) { final PsiAnnotation layoutSpecAnnotation = AnnotationUtil.findAnnotation(psiClass, LayoutSpec.class.getName()); if (layoutSpecAnnotation == null) { throw new RuntimeException(""LayoutSpec annotation not found on class"");",REP REP REP REP DEL KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
WICKET-258 FormTester doesn't pass form components default values,"private CheckGroup newCheckGroup(Form parent, String id, List<Book> candidateChoices)","private CheckGroup newCheckGroup(Form parent, List<Book> candidateChoices)",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
Android: Get game metadata from core,"public static void launch(FragmentActivity activity, String[] filePaths)","public static void launch(FragmentActivity activity, GameFile gameFile) { if (sIgnoreLaunchRequests) return; sIgnoreLaunchRequests = true; Intent launcher = new Intent(activity, EmulationActivity.class); launcher.putExtra(EXTRA_SELECTED_GAMES, scanForSecondDisc(gameFile)); launcher.putExtra(EXTRA_SELECTED_TITLE, gameFile.getTitle()); launcher.putExtra(EXTRA_SELECTED_GAMEID, gameFile.getGameId()); launcher.putExtra(EXTRA_PLATFORM, gameFile.getPlatform()); new AfterDirectoryInitializationRunner().run(activity, true, () -> activity.startActivity(launcher)); } public static void launchFile(FragmentActivity activity, String[] filePaths)",KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP,Rename Parameter
"#5982, #5981","public static String getMessage(Locale locale, String messageId, Object[] params) { String summary = null; FacesContext facesContext = FacesContext.getCurrentInstance(); Application application = facesContext.getApplication(); String userBundleName = application.getMessageBundle(); ResourceBundle bundle = null; ClassLoader currentClassLoader = LangUtils.getCurrentClassLoader(application.getClass()); if (userBundleName != null) { try { bundle = getBundle(userBundleName, locale, currentClassLoader, facesContext); if (bundle.containsKey(messageId)) { summary = bundle.getString(messageId); } } catch (MissingResourceException e) { } } if (summary == null) { try { bundle = getBundle(PRIMEFACES_BUNDLE_BASENAME, locale, currentClassLoader, facesContext); if (bundle == null) { throw new NullPointerException(); } if (bundle.containsKey(messageId)) { summary = bundle.getString(messageId); } } catch (MissingResourceException e) { } } if (summary == null) { try { bundle = getBundle(DEFAULT_BUNDLE_BASENAME, locale, currentClassLoader, facesContext); if (bundle == null) { throw new NullPointerException(); } if (bundle.containsKey(messageId)) { summary = bundle.getString(messageId); } } catch (MissingResourceException e) { } } summary = getFormattedText(locale, summary, params);","public static FacesMessage getMessage(Locale locale, String messageId, Object[] params) {hange Return Type
Few small updates,"public Task scheduleSyncDelayedTask(Object plugin, Runnable task);","public int scheduleSyncDelayedTask(Object plugin, Runnable task);",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Add optional pause between child samples,"private void testSubResults(boolean nanoTime, long pause) throws Exception {",private void testSubResults(boolean nanoTime) throws Exception {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Add a new Python client python-nextgen (#14157),private List<CodegenProperty> getModelDependencies( List<CodegenProperty> vars) { return vars.stream(),private List<CodegenProperty> getModelDependencies(CodegenModel model) { return model.getAllVars().stream(),KEEP KEEP ADD REP REP KEEP KEEP REP,Rename Parameter
fix & cleanup workflow between directories & tabs,private void addMediaLibraryTabs() {,private void addMediaLibraryTabs(int tabToShow) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Stops using LayoutOutput.getId() [3/n],public @Nullable LithoRenderUnit getContentOutput() {,public @Nullable LayoutOutput getContentOutput() {,KEEP KEEP REP KEEP KEEP,Change Return Type
Fix the memory issue for selection query with large limit (#7112),"public static List<Object[]> reduceWithoutOrdering(Collection<DataTable> dataTables, int limit) { List<Object[]> rows = new ArrayList<>(Math.min(limit, SelectionOperatorUtils.MAX_ROW_HOLDER_INITIAL_CAPACITY));","public static List<Object[]> reduceWithoutOrdering(Collection<DataTable> dataTables, int selectionSize) { List<Object[]> rows = new ArrayList<>(selectionSize);",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD REP,Rename Parameter
#9237 code cleanup,"BinaryFormatAction(DBDBinaryFormatter formatter, DBDAttributeBinding attr) {","BinaryFormatAction(String prefId, DBDBinaryFormatter formatter, DBDAttributeBinding attr) {",REP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
"Added an InstructionIterator inner class, and changed the",public InstructionIterator instructionIterator() { return new InstructionIterator();,public Iterator<InstructionHandle> instructionIterator() { return instructionList.iterator();,KEEP REP KEEP KEEP KEEP ADD REP,Change Return Type
Updates for latest HA-JDBC EUCA-6685,"private static DatabaseClusterMBean lookup( final String ctx, final long timeout ) throws NoSuchElementException { return lookupMBean( ImmutableMap.of( ""cluster"", ctx, ""type"", ""DatabaseCluster"" ), DatabaseClusterMBean.class, new Predicate<DatabaseClusterMBean>() { @Override public boolean apply( final DatabaseClusterMBean cluster ) { cluster.getinactiveDatabases( ); return true; } }, timeout ); } private static DriverDatabaseMBean lookupDatabase( final String contextName, final String hostName ) throws NoSuchElementException { return lookupMBean( ImmutableMap.of( ""cluster"", contextName, ""type"", ""Database"", ""database"", hostName ), DriverDatabaseMBean.class, new Predicate<DriverDatabaseMBean>() { @Override public boolean apply( final DriverDatabaseMBean database ) { database.getid( ); return true; } }, 0 ); } private static <T> T lookupMBean( final Map<String,String> props, final Class<T> type, final Predicate<T> tester, final long timeout ) { long until = System.currentTimeMillis() + timeout; do try { final T bean = Mbeans.lookup( jdbcJmxDomain, props, type ); tester.apply( bean ); return bean; } catch ( UndeclaredThrowableException e ) { if ( Exceptions.isCausedBy( e, InstanceNotFoundException.class ) ) { if ( System.currentTimeMillis() < until ) { try { TimeUnit.SECONDS.sleep( 5 ); } catch ( InterruptedException e1 ) { Thread.interrupted( ); break; } LOG.debug( ""Waiting for MBean "" + type.getSimpleName( ) + ""/"" + props ); continue; } throw new NoSuchElementException( type.getSimpleName() + "" "" + props.toString() ); } else { throw Exceptions.toUndeclared( e ); } } while ( System.currentTimeMillis() < until ); throw new NoSuchElementException( type.getSimpleName() + "" "" + props.toString() );","static DriverDatabaseClusterMBean lookup( final String ctx ) throws NoSuchElementException { final DriverDatabaseClusterMBean cluster = Mbeans.lookup( Databases.jdbcJmxDomain, ImmutableMap.builder( ).put( ""cluster"", ctx ).build( ), DriverDatabaseClusterMBean.class ); return cluster; }hange Return Type
Optimization: remove unnecessary javascript bridge message.,public void onPageLoadComplete(@Nullable PageInfo pageInfo) { this.pageInfo = pageInfo;,public void onPageLoadComplete() {,KEEP KEEP ADD ADD REP KEEP ADD ADD ADD,Add Parameter
use event bus for category change events,public void handleCategoryChanged(CategoryChangeEvent evt) { if (getFile() != null && evt.getIds().contains(getFileID())) {,public void handleCategoryChanged(Collection<Long> ids) { if (getFile() != null && ids.contains(getFileID())) {,KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
working through translatable panel and extracting translate text task,"private void setStatus(String msg, boolean showWarningIcon) { statusLabel.setText(msg); statusLabel.setIcon(showWarningIcon ? warningIcon : null);",private void setWarningLabelMsg(String msg) { boolean hasWarning = !StringUtils.isEmpty(msg); warningLabel.setText(hasWarning ? msg : ""); warningLabel.setIcon(hasWarning ? warningIcon : null);,KEEP KEEP REP REP DEL KEEP REP REP REP REP DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP,Add Parameter
More nothing -> null fixes,boolean isNullValue(ProducedType type) {,boolean isNothing(ProducedType type) { return type.getSupertype(typeFact.getNothingDeclaration()) != null;,KEEP REP KEEP KEEP DEL DEL DEL DEL,Rename Method
fix,"private Set<Sentence> createDisamb(Module mod, Module extensionM, Set<Sentence> extensionProds) {","private Set<Sentence> createDisamb(Module mod, Set<Sentence> extensionProds) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
SONARJAVA-3787 Children of Switch Statement should not be a Switch Expression (#3521),"private void buildSwitch(SwitchTree switchTree, Tree terminator) {","private void buildSwitchExpression(SwitchExpressionTree switchExpressionTree, Tree terminator) {",KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
store end position in bookmarks; set end position for new bookmarks,"int start_paragraphIndex, int start_elementIndex, int start_charIndex, int end_paragraphIndex, int end_elementIndex, int end_charIndex, boolean isVisible ) { super(start_paragraphIndex, start_elementIndex, start_charIndex);","Bookmark(long id, long bookId, String bookTitle, String text, Date creationDate, Date modificationDate, Date accessDate, int accessCount, String modelId, int paragraphIndex, int elementIndex, int charIndex, boolean isVisible) { super(paragraphIndex, elementIndex, charIndex);",REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP DEL DEL KEEP REP KEEP REP KEEP REP KEEP ADD REP KEEP REP REP REP,Add Parameter
minor refactor,public ClosureWriter(final WriterController controller) { this.controller = controller;,"public ClosureWriter(WriterController wc) { this.controller = wc; closureClassMap = new HashMap<Expression,ClassNode>(); factory = normalController -> controller;",KEEP ADD REP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
Add new case objects,"private void addFilesToPortableCase(TagName oldTagName, ReportProgressPanel progressPanel) throws TskCoreException { List<ContentTag> tags = currentCase.getServices().getTagsManager().getContentTagsByTagName(oldTagName); System.out.println(""\nFiles tagged with "" + oldTagName.getDisplayName());","private void addFilesToPortableCase(TagName tagName, ReportProgressPanel progressPanel) throws TskCoreException { List<ContentTag> tags = currentCase.getServices().getTagsManager().getContentTagsByTagName(tagName);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD REP,Rename Parameter
annotations: Tidy up control over which method annotations we emit,public MethodDefinitionBuilder noModelAnnotations() { this.annotationFlags = Annotations.noModel(annotationFlags);,public MethodDefinitionBuilder ignoreAnnotations(boolean ignoreAnnotations) { this.ignoreModelAnnotations = ignoreAnnotations;,KEEP KEEP REP DEL KEEP REP KEEP REP,Remove Parameter
Fix #6890: DataExporter work with column field (#6891),"protected void addColumnValues(PrintWriter writer, DataTable table, List<UIColumn> columns) throws IOException {","protected void addColumnValues(PrintWriter writer, List<UIColumn> columns) throws IOException {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
"[Java] Better tests for jakarta option (webclient, resttemplate) (#14363)",public Pet addPet(Pet pet) throws RestClientException { return addPetWithHttpInfo(pet).getBody();,public void addPet(Pet body) throws RestClientException { addPetWithHttpInfo(body);,KEEP REP KEEP REP KEEP KEEP KEEP ADD REP,Change Return Type
adding thirdeye admin tab with json entity editor (#628),"public AnomalyResource(AnomalyFunctionManager anomalyFunctionDAO, RawAnomalyResultManager anomalyResultDAO, EmailConfigurationManager emailConfigurationDAO, MergedAnomalyResultManager anomalyMergedResultDAO) {","public AnomalyResource(ThirdEyeDashboardConfiguration dashboardConfiguration, AnomalyFunctionManager anomalyFunctionDAO, RawAnomalyResultManager anomalyResultDAO, EmailConfigurationManager emailConfigurationDAO, MergedAnomalyResultManager anomalyMergedResultDAO) { this.dashboardConfiguration = dashboardConfiguration;",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL,Remove Parameter
clean up threads when shutting down context,"public EvalThread(Map<Integer, Thread> threadMap, ChildContextInfo info, Source source, boolean usePolyglot) { this.threadMap = threadMap;","public EvalThread(ChildContextInfo info, Source source, boolean usePolyglot) {",KEEP ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD,Add Parameter
- Fix for broken FB Eclipse build: bugrank.txt file was not deployed,"public void setUserDesignationKey(String key, @CheckForNull BugCollection bugCollection, Project project) {","public void setUserDesignationKey(String key, @CheckForNull BugCollection bugCollection) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix problem with jersey class not fount exception,"HttpTransport httpTransport,","HttpJsonRequestFactory httpJsonRequestFactory,",REP REP,Rename Parameter
GG-30902 [IGNITE-13557] Logging improvements for PDS memory restore process,"Map<GroupPartitionId, Integer> partStates","Map<GroupPartitionId, Integer> partitionStates",KEEP KEEP REP,Rename Parameter
Fix detection job runner for adhoc detection. (#683),"private long createJob(DateTime monitoringWindowStartTime, DateTime monitoringWindowEndTime) {",private long createJob() {,KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
Remove not used attributes from request focus methods,"void requestFocusWithOffset(final Object id, final int offset) {","void requestFocusWithOffset(final String sectionKey, final Object id, final int offset) {",KEEP KEEP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
return this in 2 methods,public Resource setIdleTimeout(Duration value),public void setIdleTimeout(Duration value),KEEP REP KEEP KEEP,Change Return Type
"Cleanup/document report gen panels, disable cancel button when already cancelled",void addCloseAction(ActionListener listener) { this.actionListener = listener; },void addCloseAction(ActionListener l) { this.actionListener = l; },KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
Make synthesize methods more general,"private ModuleLayer synthesizeRuntimeModuleLayer(List<Configuration> parentConfigs, ImageClassLoader cl, Set<String> reachableModules, Set<Module> syntheticModules) {","private ModuleLayer synthesizeRuntimeBootLayer(ImageClassLoader cl, Set<String> reachableModules, Set<Module> syntheticModules) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
put last signatures into CheckedReadsNode,"protected final Object[] prepareArguments(Frame callerFrame, MaterializedFrame genericDefFrame, EvaluatedArguments reorderedArgs, RFunction function, RStringVector clazz, String functionName) {","protected Object[] prepareArguments(Frame callerFrame, EvaluatedArguments reorderedArgs, RFunction function, RStringVector clazz, String functionName) {",KEEP ADD KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
WICKET-6772 Use StandardCharsets.UTF_8 instead of looking up charsets,"public String decode(final String s, final Charset charset)","public String decode(final String s, final Charset enc)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Implement Hermetic sandbox with support for hardlinks,"public FileContentsProxy(long ctime, long mtime, long nodeId) {","private FileContentsProxy(long ctime, long nodeId) {",REP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
STC: handle wildcard for self-referential type parameter,"private static GenericsType[] boundUnboundedWildcards(final GenericsType[] actual, final GenericsType[] declared) { int n = actual.length; GenericsType[] newTypes = new GenericsType[n]; for (int i = 0; i < n; i += 1) { newTypes[i] = boundUnboundedWildcard(actual[i], declared[i]);","private static GenericsType[] boundUnboundedWildcards(final GenericsType[] usage, final GenericsType[] declaration) { GenericsType[] newGts = new GenericsType[usage.length]; for (int i = 0, n = usage.length; i < n; i += 1) { newGts[i] = boundUnboundedWildcard(usage[i], declaration[i]);",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP ADD ADD ADD ADD KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP,Rename Parameter
reformatting,private float f1() { return 0; } private float f2() { return 0; },private float floatFct1() { return 0; } private float floatFct2() { return 0; },KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Convert NavigationView to Fragment (1/2),private void onGroupMenuItemClicked(long groupId) {,"private void onGroupMenuItemClicked(long groupId, String title) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Add preliminary widget feature,private AudioServiceController(Context c) {,private AudioServiceController() {,KEEP ADD REP KEEP,Add Parameter
"Issue #284: Refactor the CallBuilder so that it can be configured to alias its argument expressions, allowing clients to build their own Let","private SyntheticName getArgumentName(Naming.SyntheticName basename, int argumentNum) {",private SyntheticName getArgumentName(int argumentNum) {,KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Fix up some raw types,public Vector<String> getAddressVector() {,public Vector getAddressVector() {,KEEP REP KEEP KEEP,Change Return Type
nitpick fix: componentName -> id,"public WicketExampleHeader(String id, String exampleTitle)","public WicketExampleHeader(String componentName, String exampleTitle)",KEEP KEEP REP KEEP KEEP,Rename Parameter
Support alias replacement in PinotQuery (#5016),"static void validate(Map<Identifier, Expression> aliasMap, PinotQuery pinotQuery)",static void validate(PinotQuery pinotQuery),KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
Adds user visible categories,"public String initializeView(WebRequest webRequest, PortletRequest portletRequest, Model model, @RequestParam(required=false) String initialFilter){ this.setUpInitialView(webRequest, portletRequest, model, initialFilter); return ""jsp/Marketplace/view""; }","@RenderMapping public String initializeView(WebRequest webRequest, PortletRequest portletRequest, Model model){ this.setUpInitialView(webRequest, portletRequest, model); return ""jsp/Marketplace/view""; }",DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP KEEP ADD REP KEEP KEEP KEEP,Add Parameter
YARN-1717. Enabled periodically discarding old data in LeveldbTimelineStore. Contributed by Billie Rinaldi.,"private static byte[] createStartTimeLookupKey(String entityId, String entityType) throws IOException {","private static byte[] createStartTimeLookupKey(String entity, String entitytype) throws IOException {",KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP,Rename Parameter
Bug Cache Manager should not store at all response with header "no-cache" and store other types of Cache-Control having max-age value,"private void setCache(String lastModified, String cacheControl, String expires, String etag, String url, String date) {","private void setCache(String lastModified, String cacheControl, String expires, String etag, String url) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
More basic code,public Player[] getPlayers() {,public Entity[] getPlayers() { return players.toArray(emptyEntityArray); },KEEP REP KEEP KEEP DEL DEL DEL,Change Return Type
SONARJAVA-2377 reset field value smartly on getClass and static methods (#1594),"private void resetFieldValues(boolean resetOnlyStaticFields) { programState = programState.resetFieldValues(constraintManager, resetOnlyStaticFields);",private void resetFieldValues() { programState = programState.resetFieldValues(constraintManager);,KEEP KEEP ADD REP KEEP KEEP KEEP ADD REP,Add Parameter
Fix AudioService -> VideoPlayer transition,"private static void start(Context context, String location, String title, boolean fromStart, int openedPosition) {","public static void start(Context context, String location, String title, boolean fromStart, boolean newTask) {",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
"Refactor parsers to store URLs in a Collection, and implement the Set in the parent class","public Iterator getEmbeddedResourceURLs(byte[] html, URL baseUrl, Collection urls)","public Iterator getEmbeddedResourceURLs(byte[] html, URL baseUrl)",KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
introduced INetworkLink.getStringId() method,public INetworkLink getLinkByStringId(String stringId) {,public INetworkLink getLinkBySiteName(String siteName) {,KEEP KEEP REP REP KEEP,Rename Parameter
Rework connection management to allow per-thread singleton pools,private ResourceLimitingJdbcDataSource initPool(String maxPool) { ResourceLimitingJdbcDataSource source = null; source = new ResourceLimitingJdbcDataSource(); DefaultConfiguration config = new DefaultConfiguration("rl-jdbc"); ,private void initPool() throws Exception { excaliburSource = new ResourceLimitingJdbcDataSource(); DefaultConfiguration config = new DefaultConfiguration("rl-jdbc");,KEEP ADD ADD ADD REP REP REP REP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
add uploadLLCSegment endpoint in TableResource (#6653),"protected ImmutableSegment setUpSegment(String tableNameWithType, String segmentName, String segmentNamePostfix, List<ImmutableSegment> segments)","protected ImmutableSegment setUpSegment(String tableNameWithType, String segmentNamePostfix, List<ImmutableSegment> segments)",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
implement and use TruffleLanguage.disposeContext,public static void printHelp(Client client) {,"public static void printHelp(Client client, int exitCode) {",KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Enable uploading segments to realtime tables (#8584),"public static Integer getRealtimeSegmentPartitionId(String segmentName, String realtimeTableName, HelixManager helixManager, String partitionColumn) {","public static int getRealtimeSegmentPartitionId(String segmentName, String realtimeTableName, HelixManager helixManager, String partitionColumn) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"AUT-616 	Add support to enqueue Image ingests",protected Void doInBackground() throws Exception {,protected Object doInBackground() throws Exception {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Make cache serializers pluggable,private File tempCacheFile(UUID cfId),private SequentialWriter tempCacheFile(UUID cfId),KEEP REP KEEP KEEP,Change Return Type
"Added implement for stopping execution of services. Also, added the optimization code per Adam suggestion.","private static JavaSystemCaller.ExecEnvironmentFactory getExecEnvironmentFactory(final String aCommand, final String... someParameters) { final String anOSName = System.getProperty(""os.name""); if (anOSName.toLowerCase().startsWith(""windows"")) { return new JavaSystemCaller.WindowsExecEnvFactory(aCommand, someParameters); } return new JavaSystemCaller.UnixExecEnvFactory(aCommand, someParameters); } private Exec() {   } public static synchronized void stop() { try { logger.log(Level.INFO, ""Stopping Execution of: "" + command); Process stop = Runtime.getRuntime().exec(aShell.getShellCommand() + "" "" + command); stop.waitFor(); if (proc != null) { proc.destroy(); proc = null; } } catch (InterruptedException ex) { throw new RuntimeException(ex); } catch (IOException ex) { throw new RuntimeException(ex); } } public static Process getProcess() { return proc; } } private JavaSystemCaller() {   } public abstract static class ExecEnvironmentFactory { private String command = null; private ArrayList<String> parameters = new ArrayList<String>(); final String getCommand() { return this.command; } final ArrayList<String> getParameters() { return this.parameters; } public ExecEnvironmentFactory(final String aCommand, final String... someParameters) { if (aCommand == null || aCommand.length() == 0) { throw new IllegalArgumentException(""Command must not be empty""); } this.command = aCommand; for (int i = 0; i < someParameters.length; i++) { final String aParameter = someParameters[i]; if (aParameter == null || aParameter.length() == 0) { throw new IllegalArgumentException(""Parameter n閹?'"" + i + ""' must not be empty""); } this.parameters.add(aParameter); } } public abstract JavaSystemCaller.IShell createShell(); public abstract String createCommandLine(); protected final String buildCommandLine(final String aCommand, final ArrayList<String> someParameters) { final StringBuilder aCommandLine = new StringBuilder(); aCommandLine.append(aCommand); for (String aParameter : someParameters) { aCommandLine.append("" ""); aCommandLine.append(aParameter); } return aCommandLine.toString(); } } public static final class WindowsExecEnvFactory extends JavaSystemCaller.ExecEnvironmentFactory { public WindowsExecEnvFactory(final String aCommand, final String... someParameters) { super(aCommand, someParameters); } @Override public JavaSystemCaller.IShell createShell() { return new JavaSystemCaller.WindowsShell(); } @Override public String createCommandLine() { String aCommand = getCommand(); if (aCommand.toLowerCase().trim().equals(""ls"")) { aCommand = ""dir""; } return buildCommandLine(aCommand, getParameters()); } } public static final class UnixExecEnvFactory extends JavaSystemCaller.ExecEnvironmentFactory { public UnixExecEnvFactory(final String aCommand, final String... someParameters) { super(aCommand, someParameters); } @Override public JavaSystemCaller.IShell createShell() { return new JavaSystemCaller.UnixShell(); } @Override public String createCommandLine() { String aCommand = getCommand(); if (aCommand.toLowerCase().trim().equals(""dir"")) { aCommand = ""ls""; } return buildCommandLine(aCommand, getParameters()); } } public interface IShell { String getShellCommand(); } public static class WindowsShell implements JavaSystemCaller.IShell { @Override public final String getShellCommand() { final String osName = System.getProperty(""os.name""); if (osName.equals(""Windows 95"")) { return ""command.com /C""; } return ""cmd.exe /C""; } } public static class UnixShell implements JavaSystemCaller.IShell { @Override public final String getShellCommand() { return ""/bin/sh -c""; } }","private static ExecEnvironmentFactory getExecEnvironmentFactory(final String aCommand, final String... someParameters) { final String anOSName = System.getProperty(""os.name"" ); if(anOSName.toLowerCase().startsWith(""windows"")) { return new WindowsExecEnvFactory(aCommand, someParameters); } return new UnixExecEnvFactory(aCommand, someParameters); } private Exec() {  } } private JavaSystemCaller() {  } public abstract static class ExecEnvironmentFactory { private String command = null; private ArrayList<String> parameters = new ArrayList<String>(); final String getCommand() { return this.command; } final ArrayList<String> getParameters() { return this.parameters; } public ExecEnvironmentFactory(final String aCommand, final String... someParameters) { if(aCommand == null || aCommand.length() == 0) { throw new IllegalArgumentException(""Command must not be empty""); } this.command = aCommand; for (int i = 0; i < someParameters.length; i++) { final String aParameter = someParameters[i]; if(aParameter == null || aParameter.length() == 0) { throw new IllegalArgumentException(""Parameter n閹?'""+i+""' must not be empty""); } this.parameters.add(aParameter); } } public abstract IShell createShell(); public abstract String createCommandLine(); protected final String buildCommandLine(final String aCommand, final ArrayList<String> someParameters) { final StringBuilder aCommandLine = new StringBuilder(); aCommandLine.append(aCommand); for (String aParameter : someParameters) { aCommandLine.append("" ""); aCommandLine.append(aParameter); } return aCommandLine.toString(); } } public static final class WindowsExecEnvFactory extends ExecEnvironmentFactory { public WindowsExecEnvFactory(final String aCommand, final String... someParameters) { super(aCommand, someParameters); } @Override public IShell createShell() { return new WindowsShell(); } @Override public String createCommandLine() { String aCommand = getCommand(); if(aCommand.toLowerCase().trim().equals(""ls"")) { aCommand = ""dir""; } return buildCommandLine(aCommand, getParameters()); } } public static final class UnixExecEnvFactory extends ExecEnvironmentFactory { public UnixExecEnvFactory(final String aCommand, final String... someParameters) { super(aCommand, someParameters); } @Override public IShell createShell() { return new UnixShell(); } @Override public String createCommandLine() { String aCommand = getCommand(); if(aCommand.toLowerCase().trim().equals(""dir"")) { aCommand = ""ls""; } return buildCommandLine(aCommand, getParameters()); } } public interface IShell { String getShellCommand(); } public static class WindowsShell implements IShell { @Override public final String getShellCommand() { final String osName = System.getProperty(""os.name"" ); if( osName.equals( ""Windows 95"" ) ) { return ""command.com /C""; } return ""cmd.exe /C""; } } public static class UnixShell implements IShell { @Override public final String getShellCommand() { return ""/bin/sh -c""; } }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP REP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
some datatable generification,public final IColumn<T>[] getColumns(),public final IColumn[] getColumns(),KEEP KEEP REP KEEP,Change Return Type
Beginning to rename "proxy" and "fake" internally to "sheep".,"private Constructor<?> findConstructor(Object instance, Class<?> sheepClass) {","private Constructor<?> findConstructor(Object instance, Class<?> fakeClass) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix the int overflow issue for large index (#1851),"public int readInt(int index, int numBitsPerValue) { long bitOffset = (long) index * numBitsPerValue; int byteOffset = (int) (bitOffset / Byte.SIZE); int bitOffsetInFirstByte = (int) (bitOffset % Byte.SIZE);","public int readInt(int bitOffset, int numBitsPerValue) { int byteOffset = bitOffset / Byte.SIZE; int bitOffsetInFirstByte = bitOffset % Byte.SIZE;",KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD REP KEEP REP KEEP KEEP KEEP ADD REP KEEP REP,Rename Parameter
[Part 2] Deepstore by-pass in LLC: introduce segment uploader for segment split commit. (#5277),"public SegmentCommitter createSplitSegmentCommitter(SegmentCompletionProtocol.Request.Params params, SegmentUploader segmentUploader) { return new SplitSegmentCommitter(LOGGER, _protocolHandler, _indexLoadingConfig, params, segmentUploader);","public SegmentCommitter createSplitSegmentCommitter(SegmentCompletionProtocol.Request.Params params, String controllerVipUrl) { return new SplitSegmentCommitter(LOGGER, _protocolHandler, _indexLoadingConfig, params, controllerVipUrl);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Device/Port: replace IsValid() with GetState(),@Override public final int getState() {,@Override public final boolean isValid() {,KEEP KEEP KEEP REP REP KEEP,Change Return Type
Move and reformat test code,@Test public void testGermanAutobahnSpeed() {,"@Test public void setCorrectCarSpeed() { assertSpeed(1.3889, ""5""); assertSpeed(1.3889, ""5 kmh""); assertSpeed(1.3889, "" 5 kmh ""); assertSpeed(1.3889, "" 5 ""); assertSpeed(4.166669845581055, ""15""); assertSpeed(4.305559158325195, ""15.5""); assertSpeed(4.305559158325195, ""15.5 kmh""); assertSpeed(4.305559158325195, ""15.5 kph""); assertSpeed(4.305559158325195, ""15.5 km/h""); assertSpeed(22.347200393676758, ""50 mph""); assertSpeed(22.347200393676758, ""50.0 mph"");",KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Method
"Fixed NPE in FileBased instance config, removed segment replace test via OFFLINE/ONLINE (no longer used) (#1638)","private void runStorageServer(int numQueryThreads, int runTimeSec, TableDataManager tableDataManager) throws Exception {","private void runStorageServer(int numQueryThreads, int runTimeSec, TableDataManager tableDataManager, boolean replaceSegments) throws Exception {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Remove Parameter
Fixed ingest job cancellation,"DataSourceIngestModuleStatusHelper(IngestJob ingestJob, String moduleDisplayName) { this.ingestJob = ingestJob;","DataSourceIngestModuleStatusHelper(ProgressHandle progress, String moduleDisplayName) { this.progress = progress;",REP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Support DISTINCT on multiple MV columns (#8873),"public DictionaryBasedMultiColumnDistinctOnlyExecutor(List<ExpressionContext> expressions, boolean hasMVExpression,","public DictionaryBasedMultiColumnDistinctOnlyExecutor(List<ExpressionContext> expressions,",KEEP KEEP KEEP ADD ADD,Add Parameter
SONARJAVA-1228 Update JavaCheckVerifier to handle version,"private static void assertNoIssues(Multimap<Integer, Map<IssueAttribute, String>> expected, Set<AnalyzerMessage> issues, boolean providedJavaVersion) {","private static void assertNoIssues(Multimap<Integer, Map<IssueAttribute, String>> expected, Set<AnalyzerMessage> issues) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
refactor Kast to lazy initliaze the parser generator,public Kast(FileUtil files){ this.files = files;,public Kast(ParserGenerator generator){ this.generator = generator;,KEEP REP REP REP KEEP REP,Rename Parameter
Bug HTTP(S) Test Script Recorder (ProxyControl) does not add TestElement's returned by SamplerCreator createChildren () ,"public synchronized void deliverSampler(final HTTPSamplerBase sampler, final TestElement[] testElements, final SampleResult result) {","public synchronized void deliverSampler(final HTTPSamplerBase sampler, final TestElement[] subConfigs, final SampleResult result) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
EUCA-10999 removed system metric folding in CW and added individual folded points where needed (ELB and EC2),"private static ListMetric createMetric(String accountId, String metricName, String namespace, Map<String, String> dimensionMap, MetricType metricType) {","private static List<ListMetric> foldMetric(String accountId, String metricName, String namespace, Map<String, String> dimensionMap, MetricType metricType) { List<ListMetric> metrics = Lists.newArrayList();",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL,Change Return Type
Fix s3 API not being compatible with aws command line,public List<Prefix> getCommonPrefixes() {,public CommonPrefixes getCommonPrefixes() {,KEEP REP KEEP KEEP,Change Return Type
more test cases,public int report() {,public int report(int b) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Keep separate list in the job settings,private List<HashDatabase> getHashSetList() { List<HashDatabase> hashDatabases = new ArrayList<>(); for (HashSetModel model : this.knownBadHashSetModels) { if (! model.isValid()) { model.setEnabled(false); } hashDatabases.add(model.getDatabase()); } for (HashSetModel model : this.knownHashSetModels) { if (! model.isValid()) { model.setEnabled(false);,"private void getHashSetNames(List<HashSetModel> hashSetModels, List<String> enabledHashSetNames, List<String> disabledHashSetNames) { for (HashSetModel model : hashSetModels) { if (model.isEnabled() && model.isValid()) { enabledHashSetNames.add(model.getName()); } else { disabledHashSetNames.add(model.getName());",KEEP REP REP REP REP REP REP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP DEL KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD REP KEEP ADD ADD ADD ADD REP,Change Return Type
Implement new "unspecified" handlers for byContent support (#1023).,"public ContentNegotiationHandler(Map<String, Block> blocks, Handler noMatchHandler, Handler unspecifiedHandler) {","public ContentNegotiationHandler(Map<String, Block> blocks, Handler noMatchHandler) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Added code to explore the call graph for potentially unlocked methods.,private Set<Method> findLockedMethods(ClassContext classContext),private void findLockedNonpublicMethods(ClassContext classContext),KEEP REP REP KEEP,Change Return Type
Fixed Subtypes2 so that vertices are added to the,private SupertypeQueryResults getSupertypeQueryResults(ClassDescriptor classDescriptor) throws ClassNotFoundException { SupertypeQueryResults supertypeQueryResults = supertypeSetMap.get(classDescriptor);,private SupertypeQueryResults getSupertypeQueryResults(ClassDescriptor typeClassDescriptor) throws ClassNotFoundException { SupertypeQueryResults supertypeQueryResults = supertypeSetMap.get(typeClassDescriptor);,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
make reset table async (#9203),@ApiParam(value = "Name of the target instance to reset") @QueryParam("targetInstance") @Nullable String targetInstance) {,"@ApiParam(value = ""Maximum time in milliseconds to wait for reset to be completed. By default, uses "" + ""serverAdminRequestTimeout"") @QueryParam(""maxWaitTimeMs"") long maxWaitTimeMs) {",KEEP KEEP REP REP REP REP REP DEL DEL DEL KEEP REP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
Generate methodBehavior from bytecode using signature and follow invoke static,"public static BytecodeCFG buildCFG(String signature, SquidClassLoader classLoader) { try(InputStream is = classLoader.getResourceAsStream(Convert.bytecodeName(signature.substring(0, signature.indexOf('#'))) + "".class"")) {","public static BytecodeCFG buildCFG(Symbol.MethodSymbol methodSymbol, SquidClassLoader classLoader) { try(InputStream is = classLoader.getResourceAsStream(Convert.bytecodeName(((JavaSymbol.TypeJavaSymbol) methodSymbol.owner()).getFullyQualifiedName()) + "".class"")) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
code simplification,LibraryListAdapter(BaseActivity activity) { super(activity);,"LibraryListAdapter(BaseActivity activity, List<FBTree> items) { super(activity, items);",KEEP REP DEL DEL KEEP REP DEL,Remove Parameter
Use sets to avoid orderding issues,private Set<FareProduct> productsCoveringItinerary(,private List<FareProduct> productsCoveringItinerary(,KEEP REP KEEP,Change Return Type
Simplify,"private void pushTargets(JavaNode loop, ScopeData breakTarget, ScopeData continueTarget) {","private Set<String> pushTargets(JavaNode loop, ScopeData breakTarget, ScopeData continueTarget) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Warn for unnecessary escapes in untagged template literals,"String message, TemplateLiteralToken.ErrorLevel errorLevel) { return new SkipTemplateCharactersResult(message, errorLevel, getPosition());","private SkipTemplateCharactersResult createSkipTemplateCharactersResult(String message) { return new SkipTemplateCharactersResult(message, getPosition());",REP REP REP REP KEEP KEEP KEEP KEEP ADD KEEP,Add Parameter
code: fix sonar check,public int getBalance() {,public int getBALANCE() {,KEEP KEEP REP KEEP,Rename Method
members reordering,public void addStyleEntry(ZLTextStyleEntry entry) { int len = 2; for (int mask = entry.getMask(); mask != 0; mask >>= 1) { len += mask & 1; } final char[] block = getDataBlock(len);,public void addControl(ZLTextStyleEntry entry) { int len = 2; for (int mask = entry.getMask(); mask != 0; mask >>= 1) { len += mask & 1; } final char[] block = getDataBlock(len);,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
EVERREST-83 Update accordingly to the changes in Everrest,"protected void filter(GenericResourceMethod GenericResourceMethod, Object[] arguments) throws ApiException { if (GenericResourceMethod.getMethod().getName().equals(""isCodenvyUsageLegal"")) {","protected void filter(GenericMethodResource genericMethodResource, Object[] arguments) throws ApiException { if (genericMethodResource.getMethod().getName().equals(""isCodenvyUsageLegal"")) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Implement commands to install CDEC on single node with puppet master,InstallCommand(ConfigUtil configUtil) { this.configUtil = configUtil;,InstallCommand(ConfigFactory configFactory) { this.configFactory = configFactory;,REP REP KEEP REP KEEP REP,Rename Parameter
refactor: Transfer instance is needed to calculate cost,private Transfer findMatchingTargetPoint(,private TransferPoint findMatchingTargetPoint(,KEEP REP KEEP,Change Return Type
Updated DataContentViewerMedia so that elapsed time and total duration,public void resetVideo() {,public void restartVideo() {,KEEP KEEP REP KEEP,Rename Method
3508: File content viewer for binary plist files,"private PropKeyValue parseProperty(String key, NSObject value) {","private <T> PropKeyValue<T> castValue(String key, NSObject value) {",KEEP REP REP DEL KEEP KEEP KEEP KEEP,Change Return Type
Redo ShadowMotionEvent to mirror Android native code.,"public MotionEvent setPointer2(float pointer1X, float pointer1Y) { NativeInput.MotionEvent event = getNativeMotionEvent(); List<NativeInput.PointerCoords> pointerCoords = event.getSamplePointerCoords(); List<PointerProperties> pointerProperties = event.getPointerProperties(); ensureTwoPointers(pointerCoords, pointerProperties); pointerCoords.get(1).setAxisValue(AMOTION_EVENT_AXIS_X, pointer1X); pointerCoords.get(1).setAxisValue(AMOTION_EVENT_AXIS_Y, pointer1Y); return realMotionEvent; } private static void ensureTwoPointers( List<NativeInput.PointerCoords> pointerCoords, List<PointerProperties> pointerProperties) { if (pointerCoords.size() < 2) { pointerCoords.add(new NativeInput.PointerCoords()); } if (pointerProperties.size() < 2) { pointerProperties.add(new PointerProperties()); } } @Deprecated public void setPointerIndex(int pointerIndex) { NativeInput.MotionEvent event = getNativeMotionEvent(); event.setAction( event.getAction() | ((pointerIndex & 0xff) << MotionEvent.ACTION_POINTER_INDEX_SHIFT)); } @Deprecated public void setPointerIds(int index0PointerId, int index1PointerId) { NativeInput.MotionEvent event = getNativeMotionEvent(); List<NativeInput.PointerCoords> pointerCoords = event.getSamplePointerCoords(); List<PointerProperties> pointerProperties = event.getPointerProperties(); ensureTwoPointers(pointerCoords, pointerProperties); pointerProperties.get(0).id = index0PointerId; pointerProperties.get(1).id = index1PointerId;","public MotionEvent setPointer2(float x, float y) { this.x[1] = x; this.y[1] = y; pointerCount = 2; return realObject;",KEEP KEEP KEEP REP KEEP REP KEEP ADD REP KEEP ADD REP REP KEEP ADD REP REP KEEP ADD ADD ADD ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Cross-integration test of Realtime & Basic Auth & TLS (#7010),"public static Connection fromZookeeper(String zkUrl, PinotClientTransport transport) {","public static Connection fromZookeeper(String zkUrl, Map<String, String> headers) {",KEEP KEEP KEEP KEEP KEEP REP REP DEL KEEP,Rename Parameter
Reformatted to conform with JMeter (Turbine) conventions.,public void setDirty(boolean dirty),public void setDirty(boolean d),KEEP KEEP KEEP REP,Rename Parameter
added convinience methods,"protected Map<String, Object> variablesMap()","protected Map<String, Serializable> variablesMap()",KEEP KEEP REP KEEP,Change Return Type
Fix for bug 1658,public String[] getParameterValues(String name) { return (String[])parameters.get(name);,public String[] getParameterValues(String arg0) { return (String[])parameters.values().toArray(new String[0]);,KEEP KEEP KEEP REP KEEP KEEP REP DEL,Rename Parameter
UP-2975 Simplify logic for thread+request scoped maps. No need for extra locking when the maps will always be accessed by a single thread.,"protected Map<IPortletWindowId, IPortletWindow> getPortletWindowMap(HttpServletRequest request) {","protected ConcurrentMap<IPortletWindowId, IPortletWindow> getPortletWindowMap(HttpServletRequest request) {",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
fix typed lookup with promises that don't match,"protected boolean checkType(Object objArg, String type) { Object obj = objArg;","protected boolean checkType(Object obj, String type) {",KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD,Rename Parameter
GUI changes,private void imageTableMouseReleased(java.awt.event.MouseEvent evt) { if (importRadioButton.isSelected()) { imageTableSelect(); } } private void driveListMouseReleased(java.awt.event.MouseEvent evt) {,private void imageTableMouseClicked(java.awt.event.MouseEvent evt) { if (importRadioButton.isSelected()) { imageTableSelect(); } },KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Rename Method
Clean up networking code,"private void syncEntity(Entity observed, Set<? extends Entity> observers, boolean forceDestroy) {","private void syncEntity(Entity ent, Set<? extends Entity> observers, boolean forceDestroy) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
adapt and extends tests for special calls,"private static void assertCallCounts(String test, int initialSpecialCount, int initialNormalCount, int finalSpecialCount, int finalNormalCount) { assertCallCounts(""{}"", test, initialSpecialCount, initialNormalCount, finalSpecialCount, finalNormalCount); } private static void assertCallCounts(String setup, String test, int initialSpecialCount, int initialNormalCount, int finalSpecialCount, int finalNormalCount) {","private static void assertCallCounts(String str, int initialSpecialCount, int initialNormalCount, int finalSpecialCount, int finalNormalCount) {",KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Update ContributorDataProvider to roll up dimension values that are filtered out and add them to the OTHER category.,"public MetricTable(List<MetricDataRow> rows, int metricCount) { this.metricCount = metricCount;","public MetricTable(List<MetricDataRow> rows, List<MetricDataRow> cumulativeRows) {",KEEP KEEP KEEP REP REP KEEP ADD ADD ADD,Rename Parameter
Refactor solution to be better contaoned within the DynamicRespondrSkin portlet itself,"public ModelAndView displaySkinCssHeader(RenderRequest request, RenderResponse response, Model model) throws IOException {","public String displaySkinCssHeader(RenderRequest request, RenderResponse response, Model model) throws IOException {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Uses latest ComponentContext to apply debug overrides,"private static void applyOverridesRecursive(LayoutStateContext c, InternalNode node) {",private static void applyOverridesRecursive(InternalNode node) {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Android: Don't copy global INIs into game INIs,private void loadDolphinSettings(SettingsActivityView view),"private void loadDolphinSettings(SettingsActivityView view, HashSet<String> filesToExclude)",KEEP KEEP KEEP REP DEL DEL,Remove Parameter
Replace ReuseTemporary/NonSharedNode with VectorReuse,@Cached("createNonShared(vector)") VectorReuse reuseNonSharedNode) {,@Specialization,ADD ADD ADD REP,Add Parameter
Reuse the same classloader,"public ClientClassLoader(CommonPluginLoader loader, ClassLoader parent) { super(loader, parent);","public ClientClassLoader(CommonPluginLoader loader, URL[] urls, ClassLoader parent) { super(loader, urls, parent);",KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP DEL KEEP,Remove Parameter
Remove InternalNode dependency from TransitionUtils,@Nullable String transitionGlobalKey) {,static @Nullable TransitionId createTransitionId(InternalNode node) {,DEL KEEP REP REP DEL KEEP,Add Parameter
Interface for listening to changeset events,"final int source, @Nullable final String attribution, @Nullable final Section oldSection) {",private void postNewChangeSets(Throwable tracedThrowable) {,ADD ADD ADD ADD ADD ADD ADD REP REP REP REP KEEP,Add Parameter
Various fixes to multi-dimensional vector support.,"private boolean seenNAMultiDim(boolean isPosNA, RAbstractVector value, boolean isList) { if (isPosNA) {","private boolean seenNAMultiDim(int p, RAbstractVector value, boolean isList) { if (posNACheck.check(p)) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
standard SSL certificates support has been implemented,"public final void downloadToFile(String url, String sslCertificate, final File outFile, final int bufferSize) throws ZLNetworkException { perform(new ZLNetworkRequest(url, sslCertificate, null) {","public final void downloadToFile(String url, final File outFile, final int bufferSize) throws ZLNetworkException { perform(new ZLNetworkRequest(url) {",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Revert "[multistage] Fix leaf stage return (#9892)" (#9916),"private static List<Object[]> toList(Collection<Object[]> collection, DataSchema dataSchema) { if (collection == null || collection.isEmpty()) { return new ArrayList<>();","private static TransferableBlock composeDirectTransferableBlock(InstanceResponseBlock responseBlock, DataSchema desiredDataSchema) { Collection<Object[]> resultRows = responseBlock.getRows(); List<Object[]> extractedRows = new ArrayList<>(resultRows.size()); if (resultRows instanceof List) { for (Object[] orgRow : resultRows) { extractedRows.add(canonicalizeRow(orgRow, desiredDataSchema)); } } else if (resultRows instanceof PriorityQueue) { PriorityQueue<Object[]> priorityQueue = (PriorityQueue<Object[]>) resultRows; while (!priorityQueue.isEmpty()) { extractedRows.add(canonicalizeRow(priorityQueue.poll(), desiredDataSchema)); } } else { throw new UnsupportedOperationException(""Unsupported collection type: "" + resultRows.getClass()); } return new TransferableBlock(extractedRows, desiredDataSchema, DataBlock.Type.ROW); } private static boolean inOrder(int[] columnIndices) { for (int i = 0; i < columnIndices.length; i++) { if (columnIndices[i] != i) { return false; } } return true; }",KEEP KEEP REP REP REP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP REP REP REP REP DEL DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Optimize SVG files size,"private void drawPoly(DrawingContext ctx, double[] x, double[] y, int startIndex, int length, String fillColorOverride) {","private void drawPoly(DrawingContext ctx, double[] x, double[] y, int startIndex, int length, String attributes) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
summaryrow fixes refactor,"boolean isInSameGroup(FacesContext context, DataTable table, int currentRowIndex) {","boolean isInSameGroup(FacesContext context, DataTable table, int rowIndex) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Refactor ItineraryTagger,public List<Itinerary> getTaggedItineraries(List<Itinerary> itineraries) { if(itineraries.size() <= maxLimit) { return List.of(); },public void tagItineraries(List<Itinerary> itineraries) { if(itineraries.size() <= maxLimit) { return; },KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP,Change Return Type
Android: Hook up game settings to the new config system,"public static GamePropertiesDialog newInstance(String path, String gameId, int revision, int platform)","public static GamePropertiesDialog newInstance(String path, String gameId, int platform)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP,Add Parameter
uses latest used style id in new bookmark creation,"public static Bookmark createBookmark(IBookCollection collection, Book book, String modelId, ZLTextWordCursor startCursor, int maxWords, boolean visible) { return new Bookmark(collection, book, modelId, new AutoTextSnippet(startCursor, maxWords), visible);","public static Bookmark createBookmark(Book book, String modelId, ZLTextWordCursor startCursor, int maxWords, boolean isVisible) { return new Bookmark(book, modelId, new AutoTextSnippet(startCursor, maxWords), isVisible);",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP REP,Rename Parameter
rework workflow of addition of subscription; add plan storage,@Named(SUBSCRIPTION_BILLING_PROPERTIES_COLLECTION) String subscriptionBillingPropertiesCollectionName) {,@Named(SUBSCRIPTION_HISTORY_COLLECTION) String subscriptionHistoryCollectionName) {,REP KEEP REP KEEP,Rename Parameter
added new metrics,"ValueFromMapMetric(MetricType metricType, Metric metric, String keyName, ValueType valueType) {","ValueFromMapMetric(MetricType metricType, Metric metric, String keyName, boolean percent) {",KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
git-svn-id: https://only.mawhrin.net/repos/FBReaderJ/trunk@843 6a642e6f-84f6-412e-ac94-c4a38d5a04b0,public static int readShort(InputStream stream) {,public static short readShort(InputStream stream) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Fix creating cellnameType for super columns,"private CompoundSparseCellNameType(CompoundCType clusteringType, AbstractType<?> columnNameType) { this(clusteringType, columnNameType, makeCType(clusteringType, columnNameType, null), new HashMap<ByteBuffer, ColumnIdentifier>()); } private CompoundSparseCellNameType(CompoundCType clusteringType, AbstractType<?> columnNameType, CompoundCType fullType, Map<ByteBuffer, ColumnIdentifier> internedIds)",public CompoundSparseCellNameType(CompoundCType clusteringType),REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
[java] support serialPersistentFields,"private boolean isPersistentField(ASTAnyTypeDeclaration typeDeclaration, ASTVariableDeclaratorId node) { Set<String> persistentFields = determinePersistentFields(typeDeclaration); if (node.isField() && (persistentFields == null || persistentFields.contains(node.getName()))) {",private boolean isNonStaticNonTransientField(ASTVariableDeclaratorId node) { if (node.isField()) {,KEEP KEEP ADD ADD REP KEEP KEEP ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Remember the last time a user added a channel to their layout.,"public void setNewUserLayoutAndUserPreferences (Document newLayout, UserPreferences newPreferences,String sessionId, boolean channelsAdded) throws PortalException {","public void setNewUserLayoutAndUserPreferences (Document newLayout, UserPreferences newPreferences,String sessionId) throws PortalException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
SONARJAVA-2337 Handle new restricted keywords,private File generateDefaultTestFile() throws IOException { return generateTestFile("src/test/files/highlighter/Example.java"); } private File generateTestFile(String filename) throws IOException {,private File generateTestFile() throws IOException {,KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP,Rename Method
PositionCheckSubsetNode uses vector data Truffle lib,"private RAbstractVector doIntegerProfiled(PositionProfile profile, int dimensionLength, VectorDataLibrary intPositionDataLib, RIntVector intPosition, int positionLength, boolean hasSeenPositive, boolean hasSeenNegative,","private RAbstractVector doIntegerProfiled(PositionProfile profile, int dimensionLength, RIntVector intPosition, int positionLength, boolean hasSeenPositive, boolean hasSeenNegative,",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Make sure every sink is modeled.,"private void modelMethodArguments(TypeQualifierValueSet fact, Location location)","private void checkParameterAnnotations(TypeQualifierValueSet fact, Location location)",KEEP KEEP REP KEEP KEEP KEEP,Rename Method
SONARJAVA-1073 LockedVisitor: Migrate to SymbolicExecutionCheck,public CloseableVisitor(MethodTree analyzedMethod) { super(analyzedMethod); ignoreVariables(analyzedMethod.parameters());,public CloseableVisitor(List<VariableTree> methodParameters) { ignoreVariables(methodParameters);,KEEP REP REP KEEP ADD REP,Rename Parameter
OC-7322 Batch Migration UI,"CRFVersionBean targetCrfVersionBean, ReportLog reportLog, StudyBean stBean, CRFBean cBean, HttpServletRequest request, DataSource dataSource, UserAccountBean userAccountBean, ResourceBundle resterms, String urlBase) { this.crfMigrationReportList = crfMigrationReportList; this.sourceCrfVersionBean = sourceCrfVersionBean; this.targetCrfVersionBean = targetCrfVersionBean; this.reportLog = reportLog; this.stBean = stBean; this.cBean = cBean; this.request = request; this.dataSource = dataSource; this.userAccountBean = userAccountBean; this.resterms = resterms; this.urlBase = urlBase; }","public  BatchCRFMigrationController(ArrayList<EventCRFBean> crfMigrationReportList, CRFVersionBean sourceCrfVersionBean, CRFVersionBean targetCrfVersionBean, ReportLog reportLog, StudyBean stBean, CRFBean cBean, HttpServletRequest request) { this.crfMigrationReportList =crfMigrationReportList; this.sourceCrfVersionBean=sourceCrfVersionBean; this.targetCrfVersionBean=targetCrfVersionBean; this.reportLog=reportLog; this.stBean=stBean; this.cBean=cBean; this.request=request; }",DEL DEL DEL DEL KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP KEEP,Add Parameter
2015.03.11 (1.49q5),"public static ImagePlus run(ImagePlus img, int[] newOrder) { int channel = img.getChannel(); int slice = img.getSlice(); int frame = img.getFrame(); ImagePlus[] channels = ChannelSplitter.split(img);","public static ImagePlus run(ImagePlus imp, int[] newOrder) { int channel = imp.getChannel(); int slice = imp.getSlice(); int frame = imp.getFrame(); ImagePlus[] channels = ChannelSplitter.split(imp);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
generics,public IModel<String> getTitle(),public IModel getTitle(),KEEP REP KEEP,Change Return Type
Refine ingest API and work on adapting file ext mismatch ingest module,public IngestModuleOptions getDefaultIngestOptions() { return new NoIngestOptions();,public Serializable getDefaultIngestOptions() { return new EmptyIngestOptions();,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
Ensure context is closed for all kinds of request outcomes,"private void sendResponse(HttpResponseStatus responseStatus, ResponseBodyWriter responseBodyWriter) {","private void sendResponse(HttpResponseStatus responseStatus, ResponseWriter bodyWriter) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
matrix filters added,"default CoercedPhaseBuilder<RAbstractDoubleVector, Byte> asLogicalVector() { return asLogicalVector(false, false, false); }","default CoercedPhaseBuilder<RAbstractLogicalVector, Byte> asLogicalVector() { state().castBuilder().toLogical(state().index());",KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD REP,Change Return Type
Round Robin IP addresses when retry uploading/downloading segments (#7585),List<Header> httpHeaders) {,"private static HttpUriRequest getDownloadFileRequest(URI uri, int socketTimeoutMs, String authToken) {",REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
Follow-up: tiny tweaks to renaming lists with identical name as Default.,"private void renameListsWithIdenticalNameAsDefault(SQLiteDatabase db, List<ReadingList> lists) { for (ReadingList list : lists) { if (list.title().equalsIgnoreCase(WikipediaApp.getInstance().getString(R.string.default_reading_list_name))) { list.title(String.format(WikipediaApp.getInstance().getString(R.string.reading_list_saved_list_rename), list.title())); ReadingListDbHelper.instance().updateList(db, list); } } }","private void checkForUserCreatedSavedList(SQLiteDatabase db, List<ReadingList> lists) { for (ReadingList list : lists) { if (list.title().equalsIgnoreCase(WikipediaApp.getInstance().getString(R.string.default_reading_list_name))) { list.title(String.format(WikipediaApp.getInstance().getString(R.string.reading_list_saved_list_rename), list.title())); ReadingListDbHelper.instance().updateList(db, list); } } }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
"UP-2488, switch to relocated equivalents",private SecurityRoleRef getSecurityRoleRef(String role) { for (final SecurityRoleRef securityRoleRef : this.securityRoleRefs) {,private SecurityRoleRefDD getSecurityRoleRef(String role) { for (final SecurityRoleRefDD securityRoleRef : this.securityRoleRefs) {,KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Fix search view on phone,"public ActionBarAdapter(Context context, Listener listener) {",public ActionBarAdapter(Context context) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
"Track liveRatio per-memtable, not per-CF","public Memtable(ColumnFamilyStore cfs, Memtable previous)",public Memtable(ColumnFamilyStore cfs),KEEP KEEP ADD ADD REP,Add Parameter
Implement a developer friendly key-binding API,"public PlayerClickEvent(Player p, Mouse button, boolean pressed, IntVector2 pos) { super(p);","public PlayerClickEvent(Player p, String rawCmd, Mouse button, boolean pressed, IntVector2 pos) { super(p, rawCmd);",KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL,Remove Parameter
Implementation of billing reports,"BillingService  service,","MeterBasedStorage storage,",ADD REP REP,Rename Parameter
[WICKET-6491] redundant anti-cache parameter is removed,public CharSequence getUrl(),public CharSequence getUrl(PageParameters params),KEEP KEEP REP DEL,Remove Parameter
Android: Re-add motionControlsEnabled to clearWiimoteNewIniLinkedPreferences,private static boolean initializeExternalStorage(Context context),private static void initializeExternalStorage(Context context),KEEP KEEP REP KEEP KEEP,Change Return Type
Support JNIFuse on macOS,private int getMode(Path path) { int mode = 0;,private long getMode(Path path) { long mode = 0;,KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Added method to check if methods are available at runtime,"public void testIsClassAvailable() { assertTrue(CompatUtils.isClassAvailable(BaseClass.class.getName())); } public void testIsMethodAvailable_NullClassName() { assertFalse(CompatUtils.isMethodAvailable(null, ""methodName"")); } public void testIsMethodAvailable_EmptyClassName() { assertFalse(CompatUtils.isMethodAvailable("""", ""methodName"")); } public void testIsMethodAvailable_NullMethodName() { assertFalse(CompatUtils.isMethodAvailable(""className"", null)); } public void testIsMethodAvailable_EmptyMethodName() { assertFalse(CompatUtils.isMethodAvailable(""className"", """")); } public void testIsMethodAvailable_NonexistentClass() { assertFalse(CompatUtils.isMethodAvailable(""com.android.contacts.common.NonexistentClass"", """")); } public void testIsMethodAvailable_NonexistentMethod() { assertFalse(CompatUtils.isMethodAvailable(BaseClass.class.getName(), ""derivedMethod"")); } public void testIsMethodAvailable() { assertTrue(CompatUtils.isMethodAvailable(BaseClass.class.getName(), ""baseMethod"")); } public void testIsMethodAvailable_InheritedMethod() { assertTrue(CompatUtils.isMethodAvailable(DerivedClass.class.getName(), ""baseMethod"")); } public void testIsMethodAvailable_OverloadedMethod() { assertTrue(CompatUtils.isMethodAvailable(DerivedClass.class.getName(), ""overloadedMethod"")); assertTrue(CompatUtils.isMethodAvailable(DerivedClass.class.getName(), ""overloadedMethod"", Integer.TYPE)); } public void testIsMethodAvailable_NonexistentOverload() { assertFalse(CompatUtils.isMethodAvailable(DerivedClass.class.getName(), ""overloadedMethod"", Boolean.TYPE)); } private class BaseClass { public void baseMethod() {} } private class DerivedClass extends BaseClass { public void derivedMethod() {} public void overloadedMethod() {} public void overloadedMethod(int i) {}",public void testClassAvailable() { assertTrue(CompatUtils.isClassAvailable(CompatUtils.class.getName()));,KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Method
add packing fee,public long getPackingFee() { return transactionInfo.getPackingFee();,public long getPunishment() { return transactionInfo.getPunishment();,KEEP KEEP REP KEEP KEEP REP,Rename Method
Fix ingestion transform config bugs. (#8394),Set<String> discoveredNames) {,Set<String> visited) { if (visited.contains(column)) { return; },KEEP REP KEEP DEL DEL DEL DEL DEL,Rename Parameter
Spike on single operation execution (#11562),"private Optional<ConfigurationModel> selectImplicitConfigurationModel(ExtensionModel extensionModel, Set<ConfigurationModel> assignableConfigurationModels) {","private Optional<ConfigurationModel> getConfigurationModelForExtension(ExtensionModel extensionModel, Set<ConfigurationModel> assignableConfigurationModels) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
"make ArgumentStatePush multithreading-safe, cleanup arg state handling","static RNode create(RNode operand, int index) { assert !(operand instanceof WrapArgumentNode); if (operand instanceof ConstantNode) {","static RNode create(RNode operand, boolean modeChange, int index) { if (operand instanceof WrapArgumentNode || operand instanceof ConstantNode) {",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP REP REP KEEP REP REP REP KEEP KEEP KEEP,Remove Parameter
Fix for #2170: switch expression with variable,"protected JCStatement transformElse(Naming.SyntheticName selectorAlias, Tree.SwitchCaseList caseList, String tmpVar, Tree.Term outerExpression, boolean primitiveSelector) {","protected JCStatement transformElse(Naming.SyntheticName selectorAlias, Tree.SwitchCaseList caseList, String tmpVar, Tree.Term outerExpression) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
make page provider more introspectable with regard to the page instance its holding,"private void resolvePageInstance(Integer pageId, Class<? extends IRequestablePage> pageClass, PageParameters pageParameters, Integer renderCount)","private IRequestablePage getPageInstance(Integer pageId, Class<? extends IRequestablePage> pageClass, PageParameters pageParameters, Integer renderCount)",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
full removal of abstract file cache for leaf node generation,"static DisplayableItemNode createInstance(CorrelationAttribute attribute, AbstractFile abstractFile, String currentCaseName) throws TskCoreException {","static DisplayableItemNode createInstance(CorrelationAttribute attribute, AbstractFile equivalentAbstractFile, String currentCaseName) throws TskCoreException {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Bug Http Java Impl does not show Authorization header in SampleResult even if it is sent,"private Map<String, String> setConnectionAuthorization(HttpURLConnection conn, URL u, AuthManager authManager) {","private void setConnectionAuthorization(HttpURLConnection conn, URL u, AuthManager authManager) {",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Additional cleanup as well as fixing shutdown.,"public SpoutRenderer startRenderThread(Vector2 resolution, boolean ccoverride, Canvas parent) {","public SpoutRenderer startRenderThread(SpoutClient client, Vector2 resolution, boolean ccoverride, Canvas parent) {",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
"Fixed the zooz integration on android, it didn't fire the proper events and was missing the notify call",public static Purchase getInAppPurchase(boolean d) { return Display.getInstance().getInAppPurchase(); },public static Purchase getInAppPurchase(boolean physicalGoods) { return Display.getInstance().getInAppPurchase(physicalGoods);,KEEP KEEP KEEP KEEP REP KEEP KEEP ADD REP,Rename Parameter
SONARJAVA-1313 Use live variable analysis to remove dead symbols from ProgramState,"public ObjectConstraint(boolean isNull, boolean disposable, @Nullable Tree syntaxNode, @Nullable Object status) {","private ObjectConstraint(boolean isNull, @Nullable Tree syntaxNode, @Nullable Object status) {",REP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
TInt21 maps and sets now do negatives!,"public K put(int x, int y, int z, K value) { long key = key(x, y, z);","public K put(int key1, int key2, int key3, K value) { long key = key(key1, key2, key3);",KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP,Add Parameter
"I lied, here are the javadocs",public Vector2 cross(){,public Vector2 cross(Vector2 that){,KEEP KEEP REP DEL,Remove Parameter
Handling the case where totalNumEntries is zero for single value case,"private void indexSingleValue(int docId, int dictId) { valueBuffer.put(docId, dictId); int length = postingListLengths.get(dictId); postingListLengths.put(dictId, length + 1);","private void indexSingleValue(int entry, int docId) { valueBuffer.put(docId, entry); int length = postingListLengths.get(entry); postingListLengths.put(entry, length + 1);",KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Remove obsolete code from ReflectionDataBuilder,private void processAnnotationProxyTypes(DuringAnalysisAccessImpl access) {,private void processReachableTypes(DuringAnalysisAccessImpl access) {,KEEP KEEP REP KEEP KEEP,Rename Method
Incorporating review comments,"public RIntVector doSampleInvalidFirstArg(final int x, final int size, final byte isRepeatable, final RDoubleVector prob) {","public RIntVector doSampleInvalidFirstArg(final int x, final int size, final byte isReaptable, final RDoubleVector prob) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
[TE] Add UI and email template for grouped anomaly (#1430),"public void buildReport(Long groupId, List<MergedAnomalyResultDTO> anomalies,","public void buildReport(List<MergedAnomalyResultDTO> anomalies,",KEEP KEEP ADD ADD REP KEEP,Add Parameter
Separate Activity for secondary fragments,"public void showSecondaryFragment(String fragmentTag) { showSecondaryFragment(fragmentTag, null);",public Fragment showSecondaryFragment(String fragmentTag) {,KEEP REP KEEP KEEP KEEP ADD ADD,Change Return Type
Implemented #2124,"public void decode(FacesContext context, UIComponent component) {","public void decode(FacesContext facesContext, UIComponent component) {",KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Create leadControllerResource in helix cluster (#4047),"public static void setupPinotCluster(String helixClusterName, String zkPath, boolean isUpdateStateModel,","public static void createHelixClusterIfNeeded(String helixClusterName, String zkPath, boolean isUpdateStateModel,",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
Revive StartupTiming,"Timestamp(long ts, long usedMem, String name) {","Timestamp(long ts, String name) {",KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
New view contact layout,"private void bindView(View view, ViewEntry entry, int position, boolean isFirstOfItsKind) {","protected void bindView(View view, ViewEntry entry, boolean isFirstOfItsKind, boolean isLast) {",REP KEEP KEEP KEEP KEEP KEEP REP REP KEEP REP KEEP,Add Parameter
Automatically selecting first found contact.,private void restoreListSelection() { if (mListFragment instanceof DefaultContactBrowseListFragment && mContactListFilterController != null && mContactListFilterController.isLoaded()) {,private void restoreListSelection(DefaultContactBrowseListFragment fragment) { fragment.setFilter(mContactListFilterController.getFilter()); fragment.restoreSelectedUri(mPrefs); fragment.requestSelectionOnScreen(false);,KEEP KEEP ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP,Remove Parameter
Add support for Kinesis datasource in Github Events recipe (#8333),"private void execute(String personalAccessToken, StreamSourceType streamSourceType)",private void execute(String personalAccessToken),KEEP KEEP KEEP ADD ADD REP,Add Parameter
"Sort by RenderMaterial, not layer of render material.","public ChunkMeshBatch(World world, int baseX, int baseY, int baseZ, BlockFace face, RenderMaterial material) {","public ChunkMeshBatch(World world, int baseX, int baseY, int baseZ, BlockFace face, int layer) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Entity Refactor,"public Point getPosition() { return transform.getPosition(); } @Override public Quaternion getRotation() { return transform.getRotation(); } @Override public Vector3 getScale() { return this.transform.getScale(); } @Override public void setPosition(Point position) { if(this.owningThread != Thread.currentThread()){ if(Spout.getGame().debugMode()) throw new IllegalAccessError(""Tried to set position from another thread!""); return; } this.transform.setPosition(position); } @Override public void setRotation(Quaternion rotation) { if(this.owningThread != Thread.currentThread()){ if(Spout.getGame().debugMode()) throw new IllegalAccessError(""Tried to set rotation from another thread!""); return; } this.transform.setRotation(rotation); } @Override public void setScale(Vector3 scale) { if(this.owningThread != Thread.currentThread()){ if(Spout.getGame().debugMode()) throw new IllegalAccessError(""Tried to set scale from another thread!""); return; } this.transform.setScale(scale); } @Override public void roll(float ang) { rotate(ang, 1, 0, 0); } @Override public void pitch(float ang) { rotate(ang, 0, 0, 1); } @Override public void yaw(float ang) { rotate(ang, 0, 1, 0); } @Override public float getPitch() { return getRotation().getAxisAngles().getZ(); } @Override public float getYaw() { return getRotation().getAxisAngles().getY(); } @Override public float getRoll() { return getRotation().getAxisAngles().getX(); }","public Position getPosition() { stateLock.readLock().lock(); try { return new Position(new Point(getWorld(), x, y, z), pitch, yaw, roll); } finally { stateLock.readLock().unlock(); } } public void updatePosition() { stateLock.writeLock().lock(); try { Pointm position = transform.getPosition(); if (!posModified) { x = position.getX(); y = position.getY(); z = position.getZ(); } else { posModified = false; position.setX(x); position.setY(y); position.setZ(z); } } finally { stateLock.writeLock().unlock(); } } @Override public float getYaw() { stateLock.readLock().lock(); try { return yaw; } finally { stateLock.readLock().unlock(); } }hange Return Type
Merging rel-2_0 branch to main,"public HashTree add(Object key, Object value)","public void add(Object key, Object value)",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Adding custom RCText AccessibilityDelegate,"public void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) { super.onPopulateAccessibilityEvent(host, event); if (!TextUtils.isEmpty(mText)) { event.getText().add(getTextForAccessibility()); } } @Override public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) { super.onInitializeAccessibilityNodeInfo(host, info); final CharSequence textForAccessibility = ((RCTextView) host).getTextForAccessibility(); if (!TextUtils.isEmpty(textForAccessibility)) { info.setText(textForAccessibility); info.addAction(AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY); info.addAction(AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY); info.setMovementGranularities( AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_WORD | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_LINE | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PARAGRAPH | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PAGE); info.addAction(AccessibilityNodeInfo.ACTION_SET_SELECTION); } if (mWrappedAccessibilityDelegate != null) { mWrappedAccessibilityDelegate.onInitializeAccessibilityNodeInfo(host, info); } } }",@Override public void onPopulateAccessibilityEvent(AccessibilityEvent event) { super.onPopulateAccessibilityEvent(event); if (!TextUtils.isEmpty(mText)) { event.getText().add(getTextForAccessibility()); } } @Override public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) { super.onInitializeAccessibilityNodeInfo(info); final CharSequence textForAccessibility = getTextForAccessibility(); if (!TextUtils.isEmpty(textForAccessibility)) { info.setText(textForAccessibility); info.addAction(AccessibilityNodeInfo.ACTION_NEXT_AT_MOVEMENT_GRANULARITY); info.addAction(AccessibilityNodeInfo.ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY); info.setMovementGranularities( AccessibilityNodeInfo.MOVEMENT_GRANULARITY_CHARACTER | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_WORD | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_LINE | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PARAGRAPH | AccessibilityNodeInfo.MOVEMENT_GRANULARITY_PAGE); info.addAction(AccessibilityNodeInfo.ACTION_SET_SELECTION); } },DEL KEEP KEEP ADD ADD REP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP,Add Parameter
HDFS-7513. HDFS inotify: add defaultBlockSize to CreateEvent (cmccabe),private RenameEvent(Builder builder) {,"public RenameEvent(String srcPath, String dstPath, long timestamp) {",REP REP REP DEL DEL DEL DEL KEEP,Remove Parameter
SONAR-17271 update issue changelog with information about webhook,"private static Optional<FieldDiffs> copyFieldDiffOfIssueFromOtherBranch(String issueKey, FieldDiffs source) {","private static Optional<FieldDiffs> copyFieldDiffOfIssueFromOtherBranch(String issueKey, FieldDiffs c) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
WICKET-6481 code review feedbacks,"private boolean isNotPageInstanceUrl(List<String> segments, String pageIdentifier) { if (segments.size() > 2 ) { return true; }","private boolean hasSegmentsAfterPageIdentifier(Url url, String pageIdentifier) { List<String> segments = url.getSegments();",KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD REP REP REP REP,Rename Parameter
Support new SDK API oauth package (#11659),"private void validateStateField(Class<?> implementingType, List<Class<?>> stateFieldTypes, String grantType) {","private void validateStateField(Class<?> implementingType, Class<?> stateFieldType, String grantType) {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Fix: persist settings screen toolbar on Activity recreation,@Override public void onActivityCreated(Bundle savedInstanceState) { super.onActivityCreated(savedInstanceState);,@Override public void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState);,KEEP KEEP KEEP REP KEEP KEEP REP,Rename Method
return the actual component,"public static DateTextField forDatePattern(String id, IModel model,","public static ITextFormatProvider forDatePattern(String id, IModel model,",KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
consistent method signatures,public void setScreenBrightnessSystem(float level) {,public void setScreenBrightnessSystem(int percent) {,KEEP KEEP REP REP KEEP,Rename Parameter
Try to find appropriate location for temporary source files.,"private Path emitToFile(String qualifiedFunctionName, String deparsePath) throws IOException, NoSuchAlgorithmException { Path tmpDir = Paths.get(deparsePath); assert Files.exists(tmpDir);","private Path emitToFile(String qualifiedFunctionName) throws IOException, NoSuchAlgorithmException { Path tmpDir = Paths.get(Utils.getUserTempDir()).resolve(""deparse""); if (!Files.exists(tmpDir)) { Files.createDirectory(tmpDir); }",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP DEL DEL DEL,Add Parameter
2013.05.30 (1.47r18),void drawPlotLine(boolean normalized) {,void drawPlotLine() {,KEEP ADD REP KEEP,Add Parameter
Improve Apache Httpclient support (#10624),public CloseableHttpClient getHttpClient() {,public Client getHttpClient() {,KEEP REP KEEP KEEP,Change Return Type
2012.01.06 (1.46e6),boolean showDialog() {,boolean setupDialog() {,KEEP REP KEEP,Rename Method
[java] ImmutableField false positive with inner class,"private FieldImmutabilityType initializedInConstructor(VariableNameDeclaration field, List<NameOccurrence> usages, Set<ASTConstructorDeclaration> allConstructors) {","private FieldImmutabilityType initializedInConstructor(List<NameOccurrence> usages, Set<ASTConstructorDeclaration> allConstructors) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
fixed query when new data source is added to get files from only the new data source,public PrePopulateDataSourceFiles(Content dataSource) {,public PrePopulateDataSourceFiles(Long id) {,KEEP REP REP KEEP,Rename Parameter
Fail early when passing null to transition list,"List<Transition> outList, @Nullable String logContext) {",synchronized @Nullable void consumeStateUpdateTransitions(List<Transition> outList) {,ADD REP KEEP REP REP DEL KEEP,Add Parameter
@ToString could support non-field properties (Closes #2),"private static Expression calculateToStringStatements(ClassNode cNode, boolean includeSuper, boolean includeFields, List<String> excludes, List<String> includes, boolean includeNames, boolean ignoreNulls, boolean includePackage, boolean includeSuperProperties, boolean allProperties, BlockStatement body) {","private static Expression calculateToStringStatements(ClassNode cNode, boolean includeSuper, boolean includeFields, List<String> excludes, List<String> includes, boolean includeNames, boolean ignoreNulls, boolean includePackage, boolean includeSuperProperties, BlockStatement body) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Split AABB into mutable and inmutable pairs,public Vector3 getMin() {,public Vector3m getMin() {,KEEP REP KEEP KEEP,Change Return Type
Handle cached and nested separately,static LithoLayoutResult remeasure(,static void remeasure(,KEEP REP KEEP,Change Return Type
NOJIRA fix user import to correctly set nextStructId to null for users initially,"protected Long getNextStructId(final String username, final Tuple<Integer, Long> defaultUserInfo) {","protected long getNextStructId(final String username, final Tuple<Integer, Long> defaultUserInfo) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Use photo id when available.,"private void setPhoto(CallLogListItemViews views, long photoId, Uri contactUri) {","private void setPhoto(CallLogListItemViews views, Uri thumbnailUri, Uri contactUri) {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Re-factored AL and restrictions stuff,"protected boolean checkRestriction(String nodeId, String restrictionName, String restrictionPath, String propertyValue) throws PortalException {","protected boolean checkRestriction(String nodeId, int restrictionType, String restrictionPath, String propertyValue) throws PortalException {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Removed CloseableURLClassLoader since URLClassLoader has close() method in Java 7,"protected URLClassLoader getClassLoader(String main,","protected CloseableURLClassLoader getClassLoader(String main,",KEEP REP KEEP KEEP,Change Return Type
Locate shadows using the ShadowProvider mapping.,"private static ShadowInfo getShadowInfo(Class<?> clazz) { Implements annotation = clazz.getAnnotation(Implements.class); if (annotation == null) { throw new IllegalArgumentException(clazz + "" is not annotated with @Implements""); } String className = annotation.className(); if (className.isEmpty()) { className = annotation.value().getName(); } return new ShadowInfo(className, new ShadowConfig(clazz.getName(), annotation));",private static ShadowInfo getShadowInfo(Class<?> shadowClass) { Implements implementsAnnotation = shadowClass.getAnnotation(Implements.class); if (implementsAnnotation == null) { throw new IllegalArgumentException(shadowClass + " is not annotated with @Implements"); },KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
more codacy fixes,public static void showTopComponent(TopComponent topComponent) {,public static void showTopComponent(TopComponent tc) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Refactor the locks of cuckoo filter,"public void readLock(int bucket1, int bucket2) { int segmentIndex1 = getSegmentIndex(bucket1); int segmentIndex2 = getSegmentIndex(bucket2); mLocks[Math.min(segmentIndex1, segmentIndex2)].readLock(); if (segmentIndex2 != segmentIndex1) { mLocks[Math.max(segmentIndex1, segmentIndex2)].readLock();","public void readLock(int b1, int b2) { int i1 = getSegmentIndex(b1); int i2 = getSegmentIndex(b2); if (i1 > i2) { int tmp = i1; i1 = i2; i2 = tmp; } mLocks[i1].readLock(); if (i2 != i1) { mLocks[i2].readLock();",KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP KEEP REP KEEP REP KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP REP KEEP ADD REP,Rename Parameter
More work on responsive carousel,"protected void encodeDropDown(FacesContext context, Carousel carousel, String name, String styleClass, int pageCount) throws IOException {","protected void encodeDropDown(FacesContext context, Carousel carousel, int pageCount) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
HADOOP-9717. Merge r1504725 from trunk.,"public static void setCallIdAndRetryCount(int cid, int rc) {",public static void setCallId(int cid) {,KEEP KEEP KEEP ADD ADD REP REP KEEP,Add Parameter
working on making states work as anticipated,"public DebuggerState step(int currentStateIndex, int steps) { DebuggerState currentState = stateList.get(currentStateIndex); stateList.remove(currentStateIndex); K currentK = currentState.getCurrentK(); int activeStateCheckpoint = currentState.getStepNum(); int lastCheckpoint = currentState.getlastMapCheckpoint(); DebuggerState nextState;","public DebuggerState step(DebuggerState initialState, int steps) { K currentK = initialState.getCurrentK(); int activeStateCheckpoint = initialState.getStepNum(); int lastCheckpoint = initialState.getlastMapCheckpoint();",KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD REP,Rename Parameter
Merge r1588365 from trunk: YARN-1947. TestRMDelegationTokens#testRMDTMasterKeyStateOnRollingMasterKey is failing intermittently. (Jian He via junping_du),Set<DelegationKey> rmDTMasterKeyState) {,public DelegationKey getCurrentKey() {,REP REP DEL KEEP,Add Parameter
UP-3524 First pass at Integrator config,"public DataXmlHandler(JdbcOperations jdbcOperations, TransactionOperations transactionOperations, Map<String, Map<String, Integer>> tableColumnTypes) { this.jdbcOperations = jdbcOperations; this.transactionOperations = transactionOperations;","public DataXmlHandler(JdbcTemplate jdbcTemplate, TransactionTemplate transactionTemplate, Map<String, Map<String, Integer>> tableColumnTypes) { this.jdbcTemplate = jdbcTemplate; this.transactionTemplate = transactionTemplate;",KEEP REP REP REP REP KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP REP,Add Parameter
For filterModules() we now look both in the sources fodlers as well as the resource folders (#1399),"long newestFile(List<File> dirs, File moduleDir) {","long newestSourceFile(List<File> srcs, File moduleDir) {",KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Constant Throughput Timer bug with localization,public int getCalcMode() { return mode.ordinal();,public String getCalcMode() { return calcMode; } int getCalcModeInt() { return modeInt;,KEEP REP KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL,Change Return Type
1903 minor fixes to naming and property text,"synchronized Map<String, FilesSet> getInterestingFilesSets(String fileName, String legacyFilePath) throws InterestingItemDefsManagerException { return FilesSetXML.readDefinitionsFile(fileName, LEGACY_FILE_SET_DEFS_PATH);","synchronized Map<String, FilesSet> getInterestingFilesSets(String serialFileName, String legacyFilePath) throws InterestingItemDefsManagerException { return FilesSetXML.readDefinitionsFile(serialFileName, LEGACY_FILE_SET_DEFS_PATH);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Improve docs for AutoIngestJob,public boolean equals(Object otherJob) { if (!(otherJob instanceof AutoIngestJob)) {,public boolean equals(Object obj) { if (!(obj instanceof AutoIngestJob)) {,KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
CATROID-291 matches color ,"private Object interpretFunction(Functions function, Sprite sprite, Project currentProject, Scene currentlyPlayingScene) {","private Object interpretFunction(Functions function, Sprite sprite, Project currentProject) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Sulong: adding debug symbol for thread local globals,"public LLVMThreadLocalSymbol(String name, LLVMSourceSymbol sourceSymbol, IDGenerater.BitcodeID bitcodeID, int symbolIndex, boolean exported, boolean externalWeak) {","public LLVMThreadLocalSymbol(String name, IDGenerater.BitcodeID bitcodeID, int symbolIndex, boolean exported, boolean externalWeak) {",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Ceph-RBD EBS delete RBD snapshot on parent image for EBS snapshot deletion,"public void cleanSnapshot(String snapshotId, String snapshotPointId) {",public void cleanSnapshot(String snapshotId) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
SONARJAVA-966 Add functional tests,"public void tests(boolean parameter1, boolean parameter2, boolean condition) { if (parameter1 == parameter2) {  } if (parameter1 == parameter2 && parameter1 == parameter2) {  } if (parameter1 == parameter2 || parameter1 == parameter2) {  } if (parameter1 == parameter2 && parameter1 != parameter2) {  } if (parameter1 == parameter2 && parameter1 > parameter2) {  } if (parameter1 == parameter2 && parameter1 < parameter2) {  } if (parameter1 == parameter2 || parameter1 != parameter2) { ","public void method(Object foo, Object bar, boolean condition) { if (foo == bar) { ",KEEP KEEP REP REP REP REP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Make ComponentGenerateService compatible with MountSpec,public SpecModel getSpecModel(PsiClass specClass) { return specFqnToModelMap.get(specClass.getQualifiedName());,public SpecModel getSpecModel(PsiClass layoutSpecClass) { return specFqnToModelMap.get(layoutSpecClass.getQualifiedName());,KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
SONARJAVA-3482 Support character classes as operand to reluctant quantifier in rule S5857 (#3292),private Optional<RegexTree> getReluctantlyQuantifiedElement(RepetitionTree repetition) { return (repetition.getQuantifier().getModifier() == Quantifier.Modifier.RELUCTANT,private boolean isReluctantlyQuantifiedDot(RepetitionTree repetition) { return repetition.getQuantifier().getModifier() == Quantifier.Modifier.RELUCTANT,KEEP REP REP KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Transform DB2 tools into tasks #9141,public static DB2RunstatsOptions getOption(String description){ if (description != null) {,public static DB2RunstatsOptions getOption(String desc){ if (desc != null) {,KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP,Rename Parameter
"Issue #1360: MethodDefinitionBuilder: Get rid of method2(), so we're more clear about how we arrive at the transformed method name.","public static MethodDefinitionBuilder setter(AbstractTransformer gen, TypedDeclaration attr) { return new MethodDefinitionBuilder(gen, false, Naming.getSetterName(attr));","public static MethodDefinitionBuilder method2(AbstractTransformer gen, String name) { return new MethodDefinitionBuilder(gen, false, name);",KEEP KEEP KEEP REP KEEP REP REP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
HDFS-4679. Merge 1466721 from trunk,"private LocatedBlocks getBlockLocationsInt(String src, long offset, long length, boolean doAccessTime, boolean needBlockToken, boolean checkSafeMode)","private LocatedBlocks getBlockLocationsInt(FSPermissionChecker pc, String src, long offset, long length, boolean doAccessTime, boolean needBlockToken, boolean checkSafeMode)",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Finished overhaul of ArrayPositionCast.,"protected RNull doNull(Object op, RAbstractContainer container, RNull operand) {","protected RComplex doList(Object op, RAbstractContainer container, RComplex operand) {",KEEP REP REP KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Contacts to display: hide accounts without raw contacts,private static List<ContactListFilter> loadAccountFilters(Context context) { final ArrayList<ContactListFilter> result = Lists.newArrayList(); final ArrayList<ContactListFilter> accountFilters = Lists.newArrayList(); final AccountTypeManager accountTypes = AccountTypeManager.getInstance(context);,private void loadAccountFilters() { ArrayList<ContactListFilter> accountFilters = new ArrayList<ContactListFilter>(); final AccountTypeManager accountTypes = AccountTypeManager.getInstance(this);,KEEP ADD ADD REP REP KEEP ADD KEEP ADD ADD ADD ADD ADD KEEP KEEP REP DEL KEEP KEEP KEEP KEEP REP,Change Return Type
Fixed #607 new parameter syntax does not work for methods,"public List<JCStatement> transform(AttributeDeclaration decl) { Parameter parameter = CodegenUtil.findParamForAttr(decl); if (parameter == null) { Name atrrName = names().fromString(decl.getIdentifier().getText()); ProducedType t = actualType(decl); JCExpression initialValue = null; if (decl.getSpecifierOrInitializerExpression() != null) { initialValue = expressionGen().transformExpression(decl.getSpecifierOrInitializerExpression().getExpression(), CodegenUtil.getBoxingStrategy(decl.getDeclarationModel()), decl.getDeclarationModel().getType()); } JCExpression type = makeJavaType(t); List<JCAnnotation> annots = makeJavaTypeAnnotations(decl.getDeclarationModel()); int modifiers = transformLocalFieldDeclFlags(decl); return List.<JCStatement> of(at(decl).VarDef(at(decl).Modifiers(modifiers, annots), atrrName, type, initialValue)); } else { return List.<JCStatement> nil();","public JCStatement transform(AttributeDeclaration decl) { Name atrrName = names().fromString(decl.getIdentifier().getText()); ProducedType t = actualType(decl); JCExpression initialValue = null; if (decl.getSpecifierOrInitializerExpression() != null) { initialValue = expressionGen().transformExpression(decl.getSpecifierOrInitializerExpression().getExpression(), CodegenUtil.getBoxingStrategy(decl.getDeclarationModel()), decl.getDeclarationModel().getType());",KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
Make sure the correct reg ripper copy is run by the recent activity module,"private void executeRegRipper(String regRipperPath, String hiveFilePath, String hiveFileType, String outputFile, String errFile) {","private void executeRegRipper(String hiveFilePath, String hiveFileType, String outputFile, String errFile) {",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
more getResource,int getResourcePackageIndex(int resID),byte getResourcePackageIndex(int resID),REP KEEP KEEP,Change Return Type
SONARJAVA-4350 Improve the suggested quick fix for S1068 when there are some writes to the variable (#4296),"private JavaQuickFix computeQuickFix(VariableTree tree, List<AssignmentExpressionTree> assignments) {",private static JavaQuickFix computeQuickFix(VariableTree tree) {,KEEP DEL KEEP KEEP ADD ADD REP KEEP,Add Parameter
[GR-41634] Added more tests.,"IOAccess(String name, boolean allowHostFileAccess, boolean allowHostSocketAccess, FileSystem fileSystem) {","IOAccess(boolean allowHostFileAccess, boolean allowHostSocketAccess, FileSystem fileSystem) {",ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
[TE] [Notification] Refactor email filters to a generalized alert filter (#4620),"public Map<DetectionAlertFilterNotification, Set<MergedAnomalyResultDTO>> getResult() {","public Map<DetectionAlertFilterRecipients, Set<MergedAnomalyResultDTO>> getResult() {",KEEP REP KEEP KEEP KEEP,Change Return Type
2018.03.31 (1.52a27),public synchronized void deleteRow(int rowIndex) { if (counter==0 || rowIndex<0 || rowIndex>counter-1) return;,public synchronized void deleteRow(int row) { if (counter==0 || row<0 || row>counter-1) return;,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP REP KEEP,Rename Parameter
Remove getTableObjectReq from hms tool,private void getTableSchemaTest(List<String> tableNames) { String testName = "GetTableSchema";,"private void getTableObjectsTest(List<String> tableNames) { String opTarget = ""tables: "" + String.join("","", tableNames); String testName = ""GetTableObjectsByName""; try { List<Table> tables = mClient.getTableObjectsByName(mDatabase, tableNames); StringBuilder tableLocations = new StringBuilder(); for (Table table : tables) { tableLocations.append(String.format(""Table (name: %s, location: %s)%n"", table.getTableName(), table.getSd().getLocation())); } mResults.computeIfAbsent(State.OK, k -> new ArrayList<>()).add( new TaskResult(State.OK, testName, tableLocations.toString(), """")); } catch (Throwable t) { addThrowableWarning(testName, t, opTarget); } testName = ""GetTableSchema"";",KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP,Rename Method
Fix #1740.,public static Scope getNonConditionScope(Scope scope) {,public static Declaration getDeclarationContainer(Scope scope) {,KEEP KEEP REP REP KEEP KEEP,Change Return Type
Added more use a ResourceTracker to return a,"public ResourceValueAnalysis(MethodGen methodGen, CFG cfg, ResourceTracker<Resource> resourceTracker, Resource resource) {","public ResourceValueAnalysis(MethodGen methodGen, CFG cfg) {",KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
IAM federated region instance profile EUCA-10592,public List<EuareRole> getRoles( ) throws AuthException { final List<EuareRole> results = Lists.newArrayList( );,public List<Role> getRoles( ) throws AuthException { final List<Role> results = Lists.newArrayList( );,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Support JPQL EXTRACT function for IN condition #2438,public final void synpred157_JPA2_fragment() throws RecognitionException {,public final void synpred153_JPA2_fragment() throws RecognitionException {,KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Rename code elements that referred to --no-echo by its old name,"private static void setParams(boolean quietA, boolean noEcho, boolean interactiveA, boolean verboseA, boolean loadSiteFileA,","private static void setParams(boolean quietA, boolean slaveA, boolean interactiveA, boolean verboseA, boolean loadSiteFileA,",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Made multiple aliases configurable for editor widgets.,"public void addWidget(String className, List<String> aliases, String defaultConfiguration) {","public void addWidget(String className, String aliasName, String defaultConfiguration) {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
WICKET-3744 Add RestartResponseException constructors to specify a RedirectPolicy,final RedirectPolicy redirectPolicy),private RestartResponseException(final IPageProvider pageProvider),REP REP REP DEL,Add Parameter
Add config command,public boolean checkOnEmptyConfig() { return checkEmptyParam(downloadDir) && checkEmptyParam(proxyUrl) && checkEmptyParam(proxyPort);,public boolean isEmptyConfig() { return isEmptyParam(downloadDir) && isEmptyParam(proxyUrl) && isEmptyParam(proxyPort);,KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP,Rename Method
Minor refactoring: simplify the logic of `filterMethodsByVisibility`,private List<MethodNode> filterMethodsByVisibility(List<MethodNode> methods) {,"private List<MethodNode> filterMethodsByVisibility(ClassNode receiver, List<MethodNode> methods) {",KEEP KEEP REP DEL DEL KEEP KEEP,Remove Parameter
WIP new wicket examples,public static void renderHeadPlain(IHeaderResponse response) { response.render(JavaScriptHeaderItem.forReference(Bootstrap.plain()));,public static void renderHead(IHeaderResponse response) { response.render(JavaScriptHeaderItem.forReference(Bootstrap.get()));,KEEP KEEP KEEP REP KEEP KEEP REP,Rename Method
merge in changes from Xerces 2.7.1,"public EncodingInfo(String ianaName, String javaName, int lastPrintable) { this.ianaName = ianaName; this.javaName = EncodingMap.getIANA2JavaMapping(ianaName);","public EncodingInfo(String mimeName, String javaName, int lastPrintable) { this.name = mimeName; this.javaName = javaName == null ? mimeName : javaName;",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP DEL DEL DEL DEL DEL DEL,Rename Parameter
Rewritten parameter casts for standardGeneric builtin.,"private Object stdGenericInternal(VirtualFrame frame, String fname, RFunction fdef) {","private Object stdGenericInternal(VirtualFrame frame, RAbstractStringVector fVec, RFunction fdef) { String fname = fVec.getDataAt(0);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP DEL DEL DEL DEL,Rename Parameter
WICKET-3934 Provide AttributeModifier#remove(String),"public static AttributeModifier replace(String attributeName, IModel<?> value)","public static AttributeModifier replace(String attribute, IModel<?> value)",KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
Add DialogTest.,"private Constructor<?> findConstructor(Object instance, Class<?> fakeClass) {","private Constructor<?> findConstructor(Object instance, Class<?> proxyClass) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
fixed (?) my books list loading,"private LitResNetworkRequest loadPurchasedBooksRequest(String sid, int page) {",private LitResNetworkRequest loadPurchasedBooksRequest(String sid) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fixed issue: second pair of scrollbars shown on resize/tab selection,"final TabbedPropertySheetPage page1) { super.createControls(parent, page1); page = page1; createRootComposite(parent); initScrolledComposite(parent); createBrowser(rootComposite); } private void createRootComposite(Composite parent) { rootComposite = new Composite(parent, SWT.NONE); GridLayout layout = new GridLayout(1, true); layout.marginLeft = -5; layout.marginTop = -5; layout.marginBottom = -5; layout.marginRight = -5; rootComposite.setLayout(layout); rootComposite.setSize(SWT.DEFAULT, SWT.DEFAULT); tabSelectionListener = new ITabSelectionListener(){ @SuppressWarnings({ ""restriction"" }) public void tabSelected(TabDescriptor tabDescriptor) { if(!rootComposite.isDisposed() && rootComposite.isVisible() && !tabDescriptor.isSelected()) { updateBrowserSize(); }","final TabbedPropertySheetPage tabbedPropertySheetPage) { super.createControls(parent, tabbedPropertySheetPage); rootComposite = getWidgetFactory().createFlatFormComposite(parent); FormData data = new FormData(); data.left = new FormAttachment(0, 0); data.right = new FormAttachment(100, 0); data.top = new FormAttachment(0, 0); data.bottom = new FormAttachment(100, 0); Composite p = parent.getParent(); while(p != null){ if(p instanceof ScrolledComposite){ listener = new ControlAdapter() { @Override public void controlResized(ControlEvent e) { if(!rootComposite.isDisposed() && rootComposite.isVisible()) { updateDisplay(); } } }; scrolledComposite = (ScrolledComposite) p; scrolledComposite.addControlListener(listener); break;",KEEP KEEP REP KEEP KEEP REP REP KEEP REP REP REP REP REP REP REP REP REP REP REP DEL KEEP KEEP ADD REP REP REP KEEP KEEP REP REP REP KEEP REP REP REP REP REP KEEP REP REP REP REP REP REP REP REP KEEP KEEP ADD REP REP REP KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD REP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
"- reviewed ListView, ListItem implementation",public CommentForm(final String id),public CommentForm(final String componentName),KEEP KEEP KEEP REP,Rename Parameter
Fix audio/spu delay cast,public native long getAudioDelay();,public native int getAudioDelay();,KEEP KEEP REP KEEP,Change Return Type
Synced state of column reorder with static columns,"protected void encodeStateHolder(FacesContext context, DataTable table, String id, String value) throws IOException {","protected void encodeSelectionHolder(FacesContext context, DataTable table) throws IOException {",KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP,Add Parameter
Android: Don't hold gameFileCache lock while finding games,public static String[] getAllGamePaths(),public boolean update(),KEEP ADD REP REP,Change Return Type
MapConstructor should have an includeSuperFields annotation attribute plus some refactoring,"public static List<PropertyNode> getAllProperties(Set<String> names, ClassNode cNode, boolean includeProperties, boolean includeFields, boolean allProperties, boolean traverseSuperClasses, boolean skipReadonly) { return getAllProperties(names, cNode, cNode, includeProperties, includeFields, allProperties, traverseSuperClasses, skipReadonly);","public static List<PropertyNode> getAllProperties(Set<String> names, ClassNode cNode, boolean includeProperties, boolean includeFields, boolean allProperties, boolean traverseSuperClasses) { return getAllProperties(names, cNode, cNode, includeProperties, includeFields, allProperties, traverseSuperClasses);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
remove FunctionStatementsNode,"public static FunctionDefinitionNode create(SourceSection src, FrameDescriptor frameDesc, SourceSection[] argSourceSections, SaveArgumentsNode saveArguments, RSyntaxNode body,","public static FunctionDefinitionNode create(SourceSection src, FrameDescriptor frameDesc, SourceSection[] argSourceSections, SaveArgumentsNode saveArguments, RSyntaxNode synBody,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Added ShadowListPreference and cleaned up ShadowPreference a little.,public void setPersistent(boolean persistent) { this.persistent = persistent;,public void setShouldPersist(boolean shouldPersist) { this.shouldPersist = shouldPersist;,KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
get rid of CompiledDefinition in the parse function,"public K parse(String parser, String value, Sort startSymbol, Source source, String mainSyntaxModuleName, FileUtil files) {","public K parse(String parser, String value, Sort startSymbol, Source source, CompiledDefinition compiledDef, FileUtil files) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
compute primitive helper strings in constructor instead of passing them from enum declaration,"JavaKind(char typeChar, int basicType, String javaName, int slotCount, boolean isStackInt, Class<?> primitiveJavaClass, Class<?> boxedJavaClass) {","JavaKind(char typeChar, int basicType, String javaName, int slotCount, boolean isStackInt, Class<?> primitiveJavaClass, Class<?> boxedJavaClass, String unwrapMethodName, String unwrapMethodDesc, String wrapperValueOfDesc) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL KEEP,Remove Parameter
Fix Run Ingest Module wizard bugs,"DirectoryTreeFilterNode(Node nodeToWrap, boolean createChildren) { super(nodeToWrap, DirectoryTreeFilterChildren.createInstance(nodeToWrap, createChildren), new ProxyLookup(Lookups.singleton(new OriginalNode(nodeToWrap)), nodeToWrap.getLookup()));","DirectoryTreeFilterNode(Node arg, boolean createChildren) { super(arg, DirectoryTreeFilterChildren.createInstance(arg, createChildren), new ProxyLookup(Lookups.singleton(new OriginalNode(arg)), arg.getLookup()));",KEEP REP KEEP KEEP KEEP REP REP KEEP KEEP KEEP REP REP,Rename Parameter
GG-35051 Tracing for some sql commands may trigger NPE,private String planOrSql() {,private String plan() {,KEEP KEEP REP KEEP,Rename Method
AttributeResource now takes resource id as its key rather than resource name.,"public AttributeResource(int resId, @NotNull String value, @NotNull String contextPackageName) { this.resId = resId;","public AttributeResource(@NotNull ResName resName, @NotNull String value, @NotNull String contextPackageName) { if (!resName.type.equals(""attr"")) throw new IllegalStateException(""\"""" + resName.getFullyQualifiedName() + ""\"" unexpected""); this.resName = resName;",KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP,Rename Parameter
Tidy up debug,"public static List<String> findClassesThatExtend(String[] searchPathsOrJars,","public static List<String> findClassesThatExtend(String[] strPathsOrJars,",KEEP KEEP KEEP KEEP REP,Rename Parameter
deparsing refactoring,private static String encodeReal(double x) { double d = RRuntime.normalizeZero(x);,private static String encodeReal(double d) {,KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD,Rename Parameter
THIRDEYE-372 : Include wall clock start and end time and schedule in metadata file,"Long startTime, Long endTime, String schedule)",private IndexMetadata mergeIndexMetadata(List<IndexMetadata> indexMetdataList),ADD ADD REP REP REP REP,Add Parameter
THIRDEYE-307 Add startTimeMillis to kafka.yml configuration,public Meter getRecordsSkippedInvalid() { return recordsSkippedInvalid; } public Meter getRecordsSkippedExpired(),public Meter getRecordsSkipped(),KEEP KEEP ADD ADD ADD ADD ADD ADD ADD REP,Rename Method
Add ability to list specific KS/CF combinations in nodetool cfstats,"public void printColumnFamilyStats(PrintStream outs, boolean ignoreMode, String [] filterList)",public void printColumnFamilyStats(PrintStream outs),KEEP KEEP KEEP ADD ADD ADD ADD ADD REP,Add Parameter
Tasks view fixes (expand),public void regroupTasks(boolean expandAll) {,public void regroupTasks() {,KEEP KEEP ADD REP KEEP,Add Parameter
putting in the foundation for more flexible matching in the,public StringMatcher getMethodName() {,public String getMethodName() {,KEEP REP KEEP KEEP,Change Return Type
SONARJAVA-2064 Remove useless charset configuration,"public JavaSquid(JavaVersion javaVersion,","public JavaSquid(JavaConfiguration conf,",KEEP REP REP,Rename Parameter
"Android: Make GameFileCacheManager use LiveData, part 2",public static LiveData<Boolean> isLoading(),public static boolean isLoading(),KEEP KEEP REP KEEP,Change Return Type
6714 fix listeners for date range,"private void dateFilterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) { rangeRadioButton.setEnabled(dateFilterCheckBox.isSelected()); mostRecentRadioButton.setEnabled(dateFilterCheckBox.isSelected()); rangeRadioButton.firePropertyChange(""DateFilterChange"", !rangeRadioButton.isEnabled(), rangeRadioButton.isEnabled()); mostRecentRadioButton.firePropertyChange(""DateFilterChange"", !mostRecentRadioButton.isEnabled(), mostRecentRadioButton.isEnabled()); }","private void dateFilterCheckboxActionPerformed(java.awt.event.ActionEvent evt) { rangeRadioButton.setEnabled(dateFilterCheckbox.isSelected()); mostRecentRadioButton.setEnabled(dateFilterCheckbox.isSelected()); rangeRadioButton.firePropertyChange(""DateFilterChange"", true, false); mostRecentRadioButton.firePropertyChange(""DateFilterChange"", true, false); }",KEEP KEEP REP KEEP KEEP REP REP KEEP REP REP KEEP REP REP KEEP,Rename Method
replacement special calls return the rhs value with the exception if it was already evaluated,private ReplacementNode createReplacementNode(boolean isVoid) {,private ReplacementNode createReplacementNode() {,KEEP KEEP ADD REP KEEP,Add Parameter
Allow createResourceTracker() to throw CFGBuilderException,"MethodGen methodGen, CFG cfg)  throws CFGBuilderException, DataflowAnalysisException;",public abstract ResourceTracker<Resource> createResourceTracker(RepositoryLookupFailureCallback lookupFailureCallback);,ADD ADD ADD REP REP REP REP REP,Add Parameter
Fix InconsistentCapitalization warnings,"private void setAlias(final JMeterContext context, String alias) {","private void setAlias(final JMeterContext context, String fileName) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
"flesh out ListViewPane, keep events sorted by date","public List<Long> getEventIDs(Interval timeRange, Filter filter) {","public Set<Long> getEventIDs(Interval timeRange, Filter filter) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Background tasks can decide which executor to run with.,public static BackgroundTaskService createAsyncTaskBackgroundTaskService() {,public static BackgroundTaskService createBackgroundTaskService() {,KEEP KEEP KEEP REP KEEP,Rename Method
4606 get correct complete SID for local accounts,"private  Map<String, String> readFullUserIds(BufferedReader bufferedReader) throws IOException {",private String readUserIdPrefix(BufferedReader bufferedReader) throws IOException {,KEEP ADD ADD REP REP KEEP KEEP KEEP KEEP,Change Return Type
Moved header-footer and paginator outside of table.,"protected void encodeFacet(FacesContext context, DataTable table, UIComponent facet, String styleClass) throws IOException {","protected void encodeFacet(FacesContext context, DataTable table, UIComponent facet, String styleClass, String tag) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Remove Parameter
Changes in the fragment management functionality,protected void analyzeParameters( XSLT xslt ) throws PortalException {,private void analyzeParameters() throws PortalException {,REP KEEP ADD ADD ADD REP KEEP KEEP KEEP,Add Parameter
PINOT-1434 Consolidate Helix access into one class,public List<String> getBrokerInstancesFor(String resourceName) {,public String getBrokerInstanceFor(String resourceName) {,KEEP REP REP KEEP KEEP,Change Return Type
Create timeline view,"public DBObject[] getDBOperations(Map<String, String> clauses) {","public DBObject getAggregator(Map<String, String> clauses) {",KEEP REP REP KEEP KEEP KEEP,Change Return Type
fixed font family option for preformatted text,"public ZLTextFullStyleDecoration(String name, String fontFamily, int fontSizeDelta, ZLBoolean3 bold, ZLBoolean3 italic, ZLBoolean3 underline, ZLBoolean3 strikeThrough, int spaceBefore, int spaceAfter, int leftIndent,int rightIndent, int firstLineIndentDelta, int verticalShift, byte alignment, int lineSpace, ZLBoolean3 allowHyphenations) { super(name, fontFamily, fontSizeDelta, bold, italic, underline, strikeThrough, verticalShift, allowHyphenations);","public ZLTextFullStyleDecoration(String name, int fontSizeDelta, ZLBoolean3 bold, ZLBoolean3 italic, ZLBoolean3 underline, ZLBoolean3 strikeThrough, int spaceBefore, int spaceAfter, int leftIndent,int rightIndent, int firstLineIndentDelta, int verticalShift, byte alignment, int lineSpace, ZLBoolean3 allowHyphenations) { super(name, fontSizeDelta, bold, italic, underline, strikeThrough, verticalShift, allowHyphenations);",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
"Improved cookie support, updated javadocs, added ""application"" to passThrough.","private void sendAndStoreCookies(HttpURLConnection httpUrlConnect, String domain, String path, String port) throws ParseException",private void sendAndStoreCookies(URLConnection urlConnect) throws ParseException,KEEP KEEP ADD ADD ADD ADD ADD ADD REP REP KEEP KEEP,Add Parameter
'max number of TOC marks' option,"protected synchronized void updateTOCMarks(BookModel model, int maxNumber) {",protected synchronized void updateTOCMarks(BookModel model) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
added database and access mode parameters to BoltSampler,"private String execute(Driver driver, String cypher, Map<String, Object> params, AccessMode accessMode, String database) { SessionConfig sessionConfig = SessionConfig.builder() .withDatabase(database) .withDefaultAccessMode(accessMode) .build(); try (Session session = driver.session(sessionConfig)) {","private String execute(Driver driver, String cypher, Map<String, Object> params) { try (Session session = driver.session()) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP REP KEEP,Add Parameter
Store mirror in guest class objects as final,"HiddenField(Symbol<Name> name, Symbol<Type> type, VersionRange versionRange, int additionalFlags) {","HiddenField(Symbol<Name> name, Symbol<Type> type, VersionRange versionRange) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Copy cloud comments UI from IntelliJ plugin. Seems to work very well! Cleaned up a lot of code in the process.,public void setDesignation(String designationKey) { commentsPane.setDesignation(designationKey);,"void setDesignation(String designationName) { if (frame.getCurrentSelectedBugLeaf() == null) return; String designationKey = convertDesignationNameToDesignationKey(designationName); if (designationKey == null) return; BugCollection bugCollection = MainFrame.getInstance().getBugCollection(); BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug(); String oldValue = bug.getUserDesignationKey(); if (designationKey.equals(oldValue)) return; Cloud plugin = bugCollection != null ? bugCollection.getCloud() : null; if (plugin != null && designationKey.equals(""I_WILL_FIX"") && plugin.supportsClaims()) { String claimedBy = plugin.claimedBy(bug); if (claimedBy != null && !plugin.getUser().equals(claimedBy)) { int result = JOptionPane.showConfirmDialog(null, claimedBy + "" has already said they will fix this issue\n"" + ""Do you want to also be listed as fixing this issue?\n"" + ""If so, please coordinate with "" + claimedBy, ""Issue already claimed"", JOptionPane.YES_NO_CANCEL_OPTION); if (result == JOptionPane.CANCEL_OPTION) return; if (result != JOptionPane.YES_OPTION) designationKey = ""MUST_FIX""; } } if (changeDesignationOfBug(frame.getCurrentSelectedBugLeaf(), designationKey)) { if (plugin != null && plugin.supportsCloudReports()) { String report = plugin.getCloudReport(bug); reportText.setText(report); } changed = true; setCommentsChanged(true); } setDesignationComboBox(designationKey); } protected void setDesignationNonLeaf(String designationName) { if (nonleafUpdateDepth > 0) return; String designationKey = convertDesignationNameToDesignationKey(designationName); if (designationKey == null || frame.getCurrentSelectedBugAspects() == null) return; Cloud cloud = getMainFrame().getBugCollection().getCloud(); if (cloud.getMode() == Cloud.Mode.VOTING) { JOptionPane.showMessageDialog(frame, ""FindBugs is configured in voting mode; no mass updates allowed""); return; } BugSet filteredSet = frame.getCurrentSelectedBugAspects().getMatchingBugs(BugSet.getMainBugSet()); for (BugLeafNode nextNode : filteredSet) if (changeDesignationOfBug(nextNode, designationKey)) { changed = true; setCommentsChanged(true); } setDesignationComboBox(designationKey); } protected boolean changeDesignationOfBug(BugLeafNode theNode, final String selection) { saveComments(); final BugInstance bug = theNode.getBug(); String oldValue = bug.getUserDesignationKey(); if (selection.equals(oldValue)) return false; backgroundExecutor.execute(new Runnable() { public void run() { bug.setUserDesignationKey(selection, MainFrame.getInstance().getBugCollection()); } }); return true; } protected void updateDesignationComboBox() { if (frame.getCurrentSelectedBugLeaf() == null) updateCommentsFromNonLeafInformationFromSwingThread(frame.getCurrentSelectedBugAspects()); else { Cloud cloud = getMainFrame().getBugCollection().getCloud(); BugInstance bug = frame.getCurrentSelectedBugLeaf().getBug(); if (!cloud.canStoreUserAnnotation(bug)) { designationComboBox.setEnabled(false); designationComboBox.setSelectedIndex(0); return; } designationComboBox.setEnabled(true); int selectedIndex = designationComboBox.getSelectedIndex(); if (selectedIndex >= 0) setDesignationComboBox(designationKeys.get(selectedIndex)); else Debug.println(""Couldn't find selected index in designationComboBox: "" + designationComboBox.getSelectedItem()); } } int nonleafUpdateDepthename Parameter
2018.10.17 (1.52i2; 闁炽儲銈籥ndom Data闁?example),double addPlotText(Plot plot) {,double addPlotText() {,KEEP ADD REP KEEP,Add Parameter
"[TE] change data source properties type to Map<String, Object> (#3167)","public Map<String, Object> getProperties() {","public Map<String, String> getProperties() {",KEEP KEEP REP KEEP KEEP,Change Return Type
Rewrite GameMode for LGPL,public static GameMode getByValue(final int id) { switch(id) { case 0: return GameMode.CREATIVE; case 1: return GameMode.CREATIVE; default: return null; } },"public static GameMode getByValue(final int value) { return modes.get(value); } static { for (GameMode mode : GameMode.values()) { modes.put(mode.getValue(), mode); } }",KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP REP REP REP REP REP REP REP REP REP REP REP KEEP KEEP,Rename Parameter
Improvement for getVersionsForView API #8190,"public ContentVersionPublishInfoJson( final ContentVersionPublishInfo versionPublishInfo, final ContentPrincipalsResolver principalsResolver )","public ContentVersionPublishInfoJson( final ContentVersionPublishInfo publishInfo, final ContentPrincipalsResolver principalsResolver )",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
"Implement addValue(T val, int sampleCount) method to simplify processing aggregated samples","private void updateValueCount(T val, int sampleCount) {",private void updateValueCount(T val) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
fixed a latent bug exposed by the cleanup: the value of the counter for rewriting should start with the value after macro expansion instead of zero,"private TermContext(GlobalContext global, FreshCounter counter) {","private TermContext(GlobalContext global, FreshCounter counter, Term topTerm) {",KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
SONARJAVA-1174 Add pipe token to alternative type,"public TypeUnionListTreeImpl(List<TypeTree> types, List<SyntaxToken> separatorsList) { super(JavaLexer.CATCH_TYPE, types, separatorsList);","public TypeUnionListTreeImpl(List<TypeTree> types) { super(JavaLexer.CATCH_TYPE, types);",KEEP KEEP ADD ADD REP KEEP KEEP ADD REP,Add Parameter
TreeActivity is now a parmatrized type,protected T getCurrentTree() {,protected FBTree getCurrentTree() {,KEEP REP KEEP KEEP,Change Return Type
2020.09.26 (1.53f20; ResultsTable regression),private boolean showDialog(ImagePlus imp) {,"private boolean showDialog(ImagePlus imp, String name) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Fix up some raw types,public List<String> getArgumentDesc() { return new LinkedList<String>();,public List getArgumentDesc() { return new LinkedList();,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
Make ResolverSetUtils adopt the ComponentParameterization API (#11571),"private static Map<String, ValueResolver> getParameterGroupValueResolvers(ComponentParameterization componentParameterization, ParameterGroupModel parameterGroupModel,","private static Map<String, ValueResolver> getParameterGroupValueResolvers(ParameterGroupModel parameterGroupModel, Map<String, Object> parameters,",KEEP KEEP KEEP KEEP REP REP REP REP DEL,Add Parameter
Replace Cassandra storage with MongoDB,"private DBObject getMatcher(Metric metric, Map<String, String> clauses) throws ParseException {","private DBObject getMatcher(Map<String, String> clauses) throws ParseException {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Improved the parsing performance of the Rest API by moving the parsing to the network thread,private ConnectionRequest createRequest(boolean parseJson) { ConnectionRequest req = new Connection(parseJson);,private ConnectionRequest createRequest() { ConnectionRequest req; if(!isGzip){ req = new ConnectionRequest(); }else{ req = new GZConnectionRequest();,KEEP KEEP ADD REP KEEP KEEP DEL DEL KEEP KEEP KEEP REP DEL DEL DEL DEL DEL,Add Parameter
add category color icons to the right click menus in IG,static public Menu getCategoriesMenu(ImageGalleryController controller) { return new CategoryMenu(controller);,public Menu getPopupMenu() { return new CategoryMenu(controller); } @Override protected String getActionDisplayName() { return Bundle.CategorizeAction_displayName();,ADD KEEP KEEP ADD REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Ceylondoc #1014 use ProductTypeNamePrinter for links rendering,"private String processModule(Module module) { String moduleUrl = getUrl(module, anchor); return buildLinkElement(moduleUrl, module.getNameAsString());","private void processModule(Module module) { String moduleUrl = getUrl(module); buffer.append(buildLinkElement(moduleUrl, module.getNameAsString()));",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP REP REP,Change Return Type
minor change to IXmlPullParser interface,"public void parse(final InputStream inputStream, final String encoding) throws IOException,","public void parse(final IResourceStream resource, final String encoding) throws IOException,",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
[apex] rework visit,"public Object visit(ASTLiteralExpression node, Object data) { Object o = node.getNode().getLiteral(); if (o instanceof String) { String literal = (String) o; if (PATTERN.matcher(literal).matches()) { addViolation(data, node);","private void findHardcodedId(AbstractApexNode<?> node, Object data) { ASTLiteralExpression literalNode = node.getFirstChildOfType(ASTLiteralExpression.class); if (literalNode != null) { Object o = literalNode.getNode().getLiteral(); if (o instanceof String) { String literal = (String) o; if (PATTERN.matcher(literal).matches()) { addViolation(data, literalNode); }",REP REP REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL,Change Return Type
Updates grouping behavior for the call log.,public CallLogGroupBuilder(CallLogFragment.GroupCreator groupCreator) { mGroupCreator = groupCreator;,public CallLogGroupBuilder(CallLogFragment.GroupCreator adapter) { mAdapter = adapter;,KEEP KEEP REP KEEP REP KEEP REP,Rename Parameter
HDFS-4329. DFSShell issues with directories with spaces in name (Cristina L. Abad via jeagles),private static boolean checkIfSchemeInferredFromPath(String pathString),private void ValidateWindowsPath(String pathString),KEEP ADD REP REP KEEP,Change Return Type
"Allow --toolchain_resolution_debug to match specific targets, as well as specific toolchain types.",public boolean debugToolchainResolution(Label label) { return debugToolchainResolution(ImmutableList.of(label));,public boolean debugToolchainResolution(Label toolchainType) { return debugToolchainResolution(ImmutableList.of(toolchainType));,KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
Add more logs for persistent workers.,"public WorkerLifecycleManager(WorkerPool workerPool, WorkerOptions options) {","public WorkerLifecycleManager(WorkerPool workerPool, WorkerOptions workerOptions) {",KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Convert the grammar rules to camel case,public ModifiersTreeImpl modifiers() {,public ModifiersTreeImpl MODIFIERS() {,KEEP KEEP REP KEEP,Rename Method
handle all 'javax.microedition.khronos.*' packages,@Test  public void shouldAcquireDistinguishedNameParser() throws Exception {,@Test public void shouldAcquireDistinguishedNameParser_Issue1864() throws Exception {,KEEP ADD KEEP KEEP REP KEEP KEEP KEEP,Rename Method
fixed: javascript with a less than character ("<") fails to execute when added through a header contribution in ajax response,protected final boolean renderNext(final MarkupStream markupStream),protected final void renderNext(final MarkupStream markupStream),KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
CATROID-631 Current project after download incorrectly opens previously opened project,private void updateMyProjects() { myProjects = new ArrayList<>();,private ProjectData getCurrentProject() { List<ProjectData> items = new ArrayList<>();,KEEP REP REP KEEP REP DEL KEEP KEEP KEEP,Change Return Type
move findbugs data files into the getStateLocation() directory,private static IPath getBugCollectionFile(IProject project) { IPath path = getDefault().getStateLocation();  return path.append(project.getName()+".fbwarnings");,private static IFile getBugCollectionFile(IProject project) { IFile file = project.getFile(".fbwarnings"); return file;,KEEP KEEP REP KEEP KEEP KEEP REP REP KEEP ADD REP KEEP REP,Change Return Type
SONARJAVA-1123 Add dot token to MemberSelectExpressionTree,"public Tuple<Optional<InternalSyntaxToken>, ExpressionTree> SELECTOR() { return b.<Tuple<Optional<InternalSyntaxToken>, ExpressionTree>>nonterminal(JavaLexer.SELECTOR)",public ExpressionTree SELECTOR() { return b.<ExpressionTree>nonterminal(JavaLexer.SELECTOR),KEEP ADD REP KEEP KEEP KEEP ADD REP,Change Return Type
does not instrument super final methods for equals() hashcode() and toString(),"private void instrumentSpecial(ClassNode classNode, Set<String> foundMethods, final String methodName, String methodDesc) { if (isOverridingFinalMethod(classNode, methodName, methodDesc)) { return; }","private void instrumentSpecial(Set<String> foundMethods, final String methodName, String methodDesc) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD,Add Parameter
refactor to remove duplicate code,"final ClassNode traitHelperClass, ClassNode fieldHelper, Collection<String> knownFields) {","public TraitReceiverTransformer(VariableExpression thisObject, SourceUnit unit, final ClassNode traitClass, ClassNode fieldHelper, Collection<String> knownFields) {",DEL DEL DEL DEL DEL KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Supply ComponentContext to ComponentLayoutAssert,"ComponentContext c, ComponentLayout componentLayout) { return new ComponentLayoutAssert(c, componentLayout);",public static ComponentLayoutAssert assertThat(ComponentLayout componentLayout) { return new ComponentLayoutAssert(componentLayout);,REP REP REP DEL KEEP KEEP KEEP KEEP ADD REP,Add Parameter
refactored classes for camel casing of filenames,public void clearReport() {,public void ClearReport() {,KEEP KEEP REP KEEP,Rename Method
Provide next and nextLoopCondition in VectorDataAccess,"public boolean nextImpl(SeqIterator it, boolean loopCondition,","public boolean next(SeqIterator it, boolean withWrap,",KEEP KEEP REP KEEP KEEP REP,Rename Parameter
UP-1923 : refactored UserInstance system cache blocks and added dynamic channel title content filter,public List<CacheEntry> getCacheBlocks() {,public List<String> getSystemCCacheBlocks() {,KEEP REP REP KEEP,Change Return Type
Rework ParallelResourcesAndIpSource to try all combinations of source and target hosts,"public void test(String httpImplementation, String targetHost, InetAddress sourceIp, WireMockServer server, JMeterVariables vars, TestInfo testInfo) {","@ParameterizedTest @MethodSource(""org.apache.jmeter.protocol.http.sampler.HTTPSamplerFactory#getImplementations"") public void test(String httpImplementation, WireMockServer server, JMeterVariables vars) throws SocketException {",DEL DEL KEEP KEEP KEEP KEEP ADD ADD ADD ADD KEEP KEEP KEEP REP REP REP KEEP,Add Parameter
Implemented "key aliases" for formatters.,"CmsFormatterIndex formatterIndex,","Map<CmsUUID, I_CmsFormatterBean> formatters,",REP REP DEL,Rename Parameter
Populate RequestHeaders,private String setConnectionHeaders(,private void setConnectionHeaders(,KEEP REP KEEP,Change Return Type
Rewritten as.logical builtin to use cast pipelines.,protected RAbstractLogicalVector asLogicaleger(@SuppressWarnings("unused") RNull n) { return RDataFactory.createEmptyLogicalVector();,protected RLogicalVector asLogical(@SuppressWarnings("unused") RNull vector) { return RDataFactory.createLogicalVector(0);,KEEP REP REP KEEP REP KEEP KEEP REP,Change Return Type
Initial updates for palette based saving,"public SpoutChunk(SpoutWorld world, SpoutRegion region, float x, float y, float z, PopulationState popState, ManagedHashMap extraData) {","public SpoutChunk(SpoutWorld world, SpoutRegion region, float x, float y, float z, PopulationState popState, short[] blocks, short[] data, byte[] skyLight, byte[] blockLight, ManagedHashMap extraData) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP,Remove Parameter
SONARJAVA-1645 Infer type of lambdas parameters (#798),"private void inferArgumentTypes(List<JavaType> argTypes, Resolve.Resolution resolution) {","private void inferArgumentTypes(List<JavaType> argTypes, JavaSymbol symbol) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Clean up CallStackFrameMethodInfo.,protected static String formatted(SnippetRuntime.SubstrateForeignCallDescriptor descriptor) {,private static String formatted(SnippetRuntime.SubstrateForeignCallDescriptor enterSlowPathSafepointCheck) {,REP KEEP KEEP KEEP REP KEEP,Rename Parameter
ZLImage simplification + obsolete java fb2/ePub plugins have gone,"public boolean startElementHandler(String tag, ZLStringMap attributes) { if (""body"".equalsIgnoreCase(tag)) { return true; } else if (""annotation"".equalsIgnoreCase(tag)) { myReadState = READ_ANNOTATION; } else if (myReadState == READ_ANNOTATION) { myBuffer.append("" "");","public boolean startElementHandler(String tagName, ZLStringMap attributes) { switch (FB2Tag.getTagByName(tagName)) { case FB2Tag.BODY: return true; case FB2Tag.ANNOTATION: myReadState = READ_ANNOTATION; break; default: if (myReadState == READ_ANNOTATION) { myBuffer.append("" ""); } break;",KEEP KEEP KEEP REP KEEP KEEP KEEP REP REP KEEP ADD REP REP REP REP REP REP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL,Rename Parameter
Use MRLs and libvlc_media_new_location everywhere,"public synchronized Media getMedia(Context context, String location) {","public synchronized Media getMedia(Context context, String path) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
fixed logOut procedure,"public synchronized boolean initUser(String username, String sid, String userId, boolean canRebill) { boolean changed = false;","public synchronized void initUser(String username, String sid, String userId, boolean canRebill) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Change Return Type
Added Netherlands buttons to form input example to demo button factories.  Improved DefaultButtonImageResource so that it auto-resizes buttons with text that won't fit (as it most likely won't in Dutch ;-)).,protected boolean render(final Graphics2D graphics),protected void render(final Graphics2D graphics),KEEP REP KEEP KEEP KEEP,Change Return Type
Refactor matching logic,"public void setVehiclePositions(TripPattern pattern, List<RealtimeVehiclePosition> updates) { positions.put(pattern, List.copyOf(updates));","public void addVehiclePosition(TripPattern pattern, RealtimeVehiclePosition position) { positions.put(pattern, position);",KEEP KEEP REP KEEP REP REP KEEP KEEP REP,Rename Parameter
Use the new media library playlist API,public boolean remove(int position) {,"public boolean move(long mediaId, int position) {",KEEP KEEP REP DEL DEL KEEP KEEP,Remove Parameter
Daily build 13 October 2009,void drawAllROIs(Graphics g) {,void showAllROIs(Graphics g) {,KEEP REP KEEP KEEP,Rename Method
"Bug When there is an error loading Test Plan, SaveService.loadTree returns null leading to NPE in callers",public static HashTree loadTree(File file) throws IOException { log.info("Loading file: " + file); InputStream reader = null;,public static HashTree loadTree(InputStream reader) throws IOException { if (!reader.markSupported()) { reader = new BufferedInputStream(reader); } reader.mark(Integer.MAX_VALUE); ScriptWrapper wrapper = null;,KEEP KEEP KEEP REP REP KEEP KEEP KEEP REP REP REP REP REP REP REP DEL DEL DEL DEL KEEP KEEP,Rename Parameter
"#6069 mysql/mariadb check constraints have no connection with column, so MySQLTableCheckConstraintColumn deleted","protected MySQLTableConstraintColumn[] fetchObjectRow(JDBCSession session, MySQLTable mySQLTable, MySQLTableCheckConstraint forObject, JDBCResultSet resultSet) throws SQLException, DBException { return new MySQLTableConstraintColumn[0];","protected MySQLTableCheckConstraintColumn[] fetchObjectRow(JDBCSession session, MySQLTable parent, MySQLTableCheckConstraint object, JDBCResultSet dbResult) throws SQLException, DBException { String columnName = JDBCUtils.safeGetString(dbResult, MySQLConstants.COL_CONSTRAINT_NAME); MySQLTableColumn column = parent.getAttribute(session.getProgressMonitor(), columnName); if (column == null) { log.warn(""Column '"" + columnName + ""' not found in table '"" + parent.getFullyQualifiedName(DBPEvaluationContext.DDL) + ""'""); return null; } return new MySQLTableCheckConstraintColumn[] { new MySQLTableCheckConstraintColumn( object, column) };",KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL,Change Return Type
Postgre inheritance ddl #9277,"private List<PostgreTableInheritance> initSuperTables(DBRProgressMonitor monitor) throws DBException { List<PostgreTableInheritance> inheritanceList = new ArrayList<>(); try (JDBCSession session = DBUtils.openMetaSession(monitor, this, ""Load table inheritance info"")) { try (JDBCPreparedStatement dbStat = session.prepareStatement( ""SELECT i.*,c.relnamespace "" + ""FROM pg_catalog.pg_inherits i,pg_catalog.pg_class c "" + ""WHERE i.inhrelid=? AND c.oid=i.inhparent "" + ""ORDER BY i.inhseqno"")) { dbStat.setLong(1, getObjectId()); try (JDBCResultSet dbResult = dbStat.executeQuery()) { while (dbResult.next()) { final long parentSchemaId = JDBCUtils.safeGetLong(dbResult, ""relnamespace""); final long parentTableId = JDBCUtils.safeGetLong(dbResult, ""inhparent""); PostgreSchema schema = getDatabase().getSchema(monitor, parentSchemaId); if (schema == null) { log.warn(""Can't find parent table's schema '"" + parentSchemaId + ""'""); continue; } PostgreTableBase parentTable = schema.getTable(monitor, parentTableId); if (parentTable == null) { log.warn(""Can't find parent table '"" + parentTableId + ""' in '"" + schema.getName() + ""'""); continue;","private void initSuperTables(DBRProgressMonitor monitor) throws DBException { isSuperTablesInitialized = true;  if (superTables == null && getDataSource().getServerType().supportsInheritance()) { try (JDBCSession session = DBUtils.openMetaSession(monitor, this, ""Load table inheritance info"")) { try (JDBCPreparedStatement dbStat = session.prepareStatement( ""SELECT i.*,c.relnamespace "" + ""FROM pg_catalog.pg_inherits i,pg_catalog.pg_class c "" + ""WHERE i.inhrelid=? AND c.oid=i.inhparent "" + ""ORDER BY i.inhseqno"")) { dbStat.setLong(1, getObjectId()); try (JDBCResultSet dbResult = dbStat.executeQuery()) { while (dbResult.next()) { final long parentSchemaId = JDBCUtils.safeGetLong(dbResult, ""relnamespace""); final long parentTableId = JDBCUtils.safeGetLong(dbResult, ""inhparent""); PostgreSchema schema = getDatabase().getSchema(monitor, parentSchemaId); if (schema == null) { log.warn(""Can't find parent table's schema '"" + parentSchemaId + ""'""); continue; } PostgreTableBase parentTable = schema.getTable(monitor, parentTableId); if (parentTable == null) { log.warn(""Can't find parent table '"" + parentTableId + ""' in '"" + schema.getName() + ""'""); continue; } if (superTables == null) { superTables = new ArrayList<>(); } superTables.add( new PostgreTableInheritance( this, parentTable, JDBCUtils.safeGetInt(dbResult, ""inhseqno""), truehange Return Type
apply type arguments of super to its constructor parameters,"private static Parameter[] selectAccessibleConstructorFromSuper(final ConstructorNode source) { ClassNode superType = source.getDeclaringClass().getUnresolvedSuperClass(); Map<String, ClassNode> superTypeGenerics = createGenericsSpec(superType);",private static Parameter[] selectAccessibleConstructorFromSuper(ConstructorNode node) { ClassNode type = node.getDeclaringClass(); ClassNode superType = type.getUnresolvedSuperClass();,KEEP KEEP KEEP ADD REP REP KEEP KEEP REP KEEP ADD REP REP REP KEEP REP,Rename Parameter
[TE] Clean up exceptions in Yaml Resource (#4303),@ApiParam("payload") String payload) {,@ApiParam("payload") String yamlAlertConfig) {,KEEP KEEP REP KEEP,Rename Parameter
"use new Autopsy Tag events, don't fire extra events from ig, but listen to events from autopsy","public ContentTag addContentTag(DrawableFile<?> file, TagName tagName, String comment) throws TskCoreException {","public void addContentTag(DrawableFile<?> file, TagName tagName, String comment) throws TskCoreException { ContentTag addContentTag;",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL,Change Return Type
Fixed the behavior of setHidden to be more sensible,"public void setHidden(boolean b, boolean changeMargin) {","public void setHidden(boolean b, boolean changeUiid) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
fixed a warning,protected String encode(String str),protected String encode(String s),KEEP KEEP KEEP REP,Rename Parameter
Add limited correlated subquery support,"private void raiseUnsupportedFeatureIfInAncestorScope(String columnSchema, String columnTableName, String schema) {","private void raiseUnsupportedFeatureIfInParentScope(String columnSchema, String columnTableName, String schema) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Cleanup,"public AllCasesEamDbCommonFilesAlgorithm(boolean filterByMediaMimeType, boolean filterByDocMimeType) throws EamDbException { super(filterByMediaMimeType, filterByDocMimeType);","public AllCasesEamDbCommonFilesAlgorithm(Map<Long, String> dataSourceIdMap, boolean filterByMediaMimeType, boolean filterByDocMimeType) throws EamDbException { super(dataSourceIdMap, filterByMediaMimeType, filterByDocMimeType);",KEEP REP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP DEL KEEP,Remove Parameter
Hunspell: support NOSUGGEST option (#2340),"private CharsRef newStem(CharsRef stem, String exception) {","private CharsRef newStem(CharsRef stem, IntsRef forms, int formID) { final String exception;",KEEP KEEP KEEP KEEP REP REP DEL DEL KEEP DEL DEL DEL,Add Parameter
Make private fields final.,public TreeCloner(boolean honourNoThreadClone) {,public TreeCloner(boolean forThread) {,KEEP KEEP REP KEEP,Rename Parameter
THIRDEYE-592 : thirdeye-reporting should check for missing data segments,"public static List<TimeRange> checkSegments(String serverUri, String collection, String timezone, DateTime currentStartHour, DateTime currentEndHour, DateTime baselineStartHour,","public static List<TimeRange> checkSegments(String serverUri, String collection, DateTime currentStartHour, DateTime currentEndHour, DateTime baselineStartHour,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
HTTPS for internal EUCA-13293,"public void checkServerTrusted( X509Certificate[] chain, String arg1, String arg2, String arg3 ) throws CertificateException { verifyServerCert( chain ); }","public void checkServerTrusted( X509Certificate[] arg0, String arg1, String arg2, String arg3 ) throws CertificateException {}",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP,Rename Parameter
UP-1846 Start on portlet URL generation code,"public PortletURLProviderImpl(IPortletWindow portletWindow, HttpServletRequest httpServletRequest) {",public PortletURLProviderImpl(IPortletWindow portletWindow) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Implement the missing createSocket() method,"public Socket createSocket(String host, int port, InetAddress localAddress, int localPort, HttpConnectionParams params) throws IOException, UnknownHostException, ConnectTimeoutException { int timeout = params.getConnectionTimeout(); if (timeout == 0) { return new SlowSocket(CPS,host,port,localAddress,localPort); } else { return new SlowSocket(CPS,host,port,localAddress,localPort, timeout); }","public Socket createSocket(String arg0, int arg1, InetAddress arg2, int arg3, HttpConnectionParams arg4) throws IOException, UnknownHostException, ConnectTimeoutException { return null;",KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Ensure methods are identified using their originating ResolvedJavaMethod rather than their symbol name.,"private void indexMethodEntry(MethodEntry methodEntry, ResolvedJavaMethod idMethod) { assert methodsIndex.get(idMethod) == null : methodEntry.getSymbolName();",private void indexMethodEntry(MethodEntry methodEntry) { String methodName = methodEntry.getSymbolName(); assert methodsIndex.get(methodName) == null : methodName;,KEEP KEEP KEEP REP REP REP REP DEL DEL KEEP REP KEEP KEEP KEEP REP,Add Parameter
String and color resources properly namespaced with android:X/Y,"protected void processNode(Node node, String name, boolean isSystem) { colorResolver.processResource(name, node.getTextContent(), this, isSystem);","protected void processNode(Node node, String name, boolean ignored) { colorResolver.processResource(name, node.getTextContent(), this);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD REP,Rename Parameter
Replaced title with core header,"public void decode(FacesContext context, UIComponent component) { Map<String, String> params = context.getExternalContext().getRequestParameterMap();","public void decode(FacesContext facesContext, UIComponent component) { Map<String, String> params = facesContext.getExternalContext().getRequestParameterMap();",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Pool views created from different ViewCreator instances in ViewCompatComponent separately,"protected Component(String simpleName, Object type) { super(type);","protected Component(String simpleName, Class classType) { super(classType);",KEEP KEEP KEEP REP REP KEEP REP,Rename Parameter
Fix warnings when creating classpath entries,"Archive(File file, ZipFile zipFile) {",Archive(File file) {,KEEP ADD ADD REP KEEP,Add Parameter
Remove context from MediaDatabase.getInstance() parameters,public synchronized static MediaDatabase getInstance() {,public synchronized static MediaDatabase getInstance(Context context) {,KEEP KEEP KEEP KEEP REP DEL KEEP,Remove Parameter
Avoid creating NodeTraversal instances within traversals within Es6RenameVariablesInParamLists,void visitCandiates(Node n) { if (NodeUtil.isReferenceName(n)) { currFuncReferences.add(n.getString()); } for (Node c = n.getFirstChild(); c != null; c = c.getNext()) { visitCandiates(c); },"public void visit(NodeTraversal t, Node n, Node parent) { if (!NodeUtil.isReferenceName(n)) {",ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP REP REP REP REP KEEP ADD ADD,Remove Parameter
remove unchecked/style warnings,"private void handleMethodAnnotations(MethodNode methodNode, List<AnnotationNode> annotationNodes) {","private void handleMethodNode(MethodNode methodNode, List<AnnotationNode> annotationNodes) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Icon support for timeline,"public DefaultTimelineEvent(String title, String description, Date startDate, Date endDate, String icon) {","public DefaultTimelineEvent(String title, String description, Date startDate, Date endDate, int importance) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Allows the delay value for timers to be set using variables.  This provides a convenient way of altering the value of several timers in one go.,public String getDelay(),public long getDelay(),KEEP REP KEEP,Change Return Type
Split ClassStats' responsibilities,"OperationStats getOperationStats(String operationName, ASTMethodOrConstructorDeclaration node) { Map<String, OperationStats> sigMap = operations.get(OperationSignature.buildFor(node)); if (sigMap == null) { return null; } return sigMap.get(operationName); }"," double compute(MetricKey<ASTMethodOrConstructorDeclaration> key, ASTMethodOrConstructorDeclaration node, String name, boolean force, MetricVersion version) { Map<String, OperationStats> sigMap = operations.get(OperationSignature.buildFor(node)); if (sigMap == null) { return Double.NaN; } OperationStats stats = sigMap.get(name); return stats == null ? Double.NaN : stats.compute(key, node, force, version); }  double computeWithResultOption(MetricKey<ASTMethodOrConstructorDeclaration> key, ASTAnyTypeDeclaration node, boolean force, MetricVersion version, ResultOption option) { List<ASTMethodOrConstructorDeclaration> ops = findOperations(node, false); List<Double> values = new ArrayList<>(); for (ASTMethodOrConstructorDeclaration op : ops) { if (key.supports(op)) { double val = this.compute(key, op, op.getQualifiedName().getOperation(), force, version); if (val != Double.NaN) { values.add(val); } } } switch (option) { case SUM: return sum(values); case HIGHEST: return highest(values); case AVERAGE: return average(values); default: return Double.NaN; } } private static List<ASTMethodOrConstructorDeclaration> findOperations(ASTAnyTypeDeclaration node, boolean includeNested) { if (includeNested) { return node.findDescendantsOfType(ASTMethodOrConstructorDeclaration.class); } List<ASTMethodOrConstructorDeclaration> operations = new ArrayList<>(); for (ASTAnyTypeBodyDeclaration decl : node.getDeclarations()) { if (decl.jjtGetNumChildren() > 0 && decl.jjtGetChild(0) instanceof ASTMethodOrConstructorDeclaration) { operations.add((ASTMethodOrConstructorDeclaration) decl.jjtGetChild(0)); } } return operations; } private static double sum(List<Double> values) { double sum = 0; for (double val : values) { sum += val; } return sum; } private static double highest(List<Double> values) { double highest = Double.NEGATIVE_INFINITY; for (double val : values) { if (val > highest) { highest = val; } } return highest == Double.NEGATIVE_INFINITY ? 0 : highest; } private static double average(List<Double> values) { return sum(values) / values.size(); }hange Return Type
"StandardJMeterEngine is now responsible for starting thread groups, which in turn are responsible for their threads.","private void scheduleThread(JMeterThread thread, long now) { if (getScheduler()) { if (getDelay() > 0) { thread.setStartTime(getDelay() * 1000 + now); } else { long start = getStartTime(); if (start < now) { start = now;  } thread.setStartTime(start); } if (getDuration() > 0) { thread.setEndTime(getDuration() * 1000 + (thread.getStartTime())); } else { thread.setEndTime(getEndTime()); } thread.setScheduled(true); } }",@Override public void scheduleThread(JMeterThread thread) { if (isDelayedStartup()) {  delayedStartup = true; thread.setInitialDelay(0); } else { int rampUp = getRampUp(); float perThreadDelay = ((float) (rampUp * 1000) / (float) getNumThreads()); thread.setInitialDelay((int) (perThreadDelay * thread.getThreadNum())); } if (getScheduler()) { long now = System.currentTimeMillis(); if (getDelay() > 0) { thread.setStartTime(getDelay() * 1000 + now); } else { long start = getStartTime(); if (start < now) { start = now;  } thread.setStartTime(start); } if (getDuration() > 0) { thread.setEndTime(getDuration() * 1000 + (thread.getStartTime())); } else { thread.setEndTime(getEndTime()); } thread.setScheduled(true); } },REP DEL KEEP KEEP REP REP REP DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
changed implementation to use the channel instance Id instead of title or name attribute,public AnchoringChannelIncorporationFilter(ContentHandler parent) {,"public AnchoringChannelIncorporationFilter(Document userLayout, ContentHandler parent) {",KEEP REP DEL DEL KEEP KEEP,Remove Parameter
Use literals for format flags in proto_common call.,"FilesToRunProvider langPlugin, String langPluginFormat) {",public ProtoCompileActionBuilder setLangPlugin(FilesToRunProvider langPlugin) {,REP REP REP REP KEEP,Add Parameter
Sulong's new lookup mechanism adopted,"private static CallTarget parseLLVM(String libName, LLVM_IR ir) {","private static void parseLLVM(String libName, LLVM_IR ir) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Naming conventions.,@Cached("createSlowPath(list)") VectorAccess listAccess) { try (SequentialIterator listIter = listAccess.access(list)) { while (listAccess.next(listIter)) { String key = listAccess.getString(listIter);,@Cached("createSlowPath(list)") VectorAccess access) { try (SequentialIterator access2 = access.access(list)) { while (access.next(access2)) { String key = access.getString(access2);,KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
describe loadbalancer verbose by sysadmin,public Set<LoadBalancer> apply( final Set<String> identifiers ) {,public Set<String> apply( final Set<String> identifiers ) {,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Change how we remove animating content from Hosts.,"final ExtensionState<TransitionsExtensionState> extensionState, Host host) {","final ExtensionState<TransitionsExtensionState> extensionState, ComponentHost componentHost) {",KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Revert flush directory (CASSANDRA-6357),public File getDirectoryForNewSSTables(),public File getDirectoryForCompactedSSTables(),KEEP KEEP REP,Rename Method
Refactored dashboard code,"private void updateData() throws HealthMonitorException { EnterpriseHealthMonitor.getInstance().updateFromGlobalEnabledStatus(); if(EnterpriseHealthMonitor.monitorIsEnabled()) { timingData =  EnterpriseHealthMonitor.getInstance().getTimingMetricsFromDatabase(); } } private JPanel createTimingPanel() throws HealthMonitorException { JPanel timingMetricPanel = new JPanel(); timingMetricPanel.setLayout(new BoxLayout(timingMetricPanel, BoxLayout.PAGE_AXIS)); timingMetricPanel.setAlignmentX(Component.LEFT_ALIGNMENT); timingMetricPanel.setBorder(BorderFactory.createEtchedBorder()); JLabel timingMetricTitle = new JLabel(""Timing Metrics""); timingMetricTitle.setFont(new Font(""Serif"", Font.BOLD, 20)); timingMetricPanel.add(timingMetricTitle); if(! EnterpriseHealthMonitor.monitorIsEnabled()) { timingMetricPanel.setPreferredSize(new Dimension(400,100)); timingMetricPanel.add(new JLabel("" "")); timingMetricPanel.add(new JLabel(""No data to display - monitor is not enabled"")); timingMetricPanel.revalidate(); timingMetricPanel.repaint(); return timingMetricPanel; } timingMetricPanel.add(createTimingControlPanel()); timingMetricPanel.add(new JSeparator()); graphPanel = new JPanel(); graphPanel.setLayout(new BoxLayout(graphPanel, BoxLayout.PAGE_AXIS)); updateTimingMetricGraphs(); timingMetricPanel.add(graphPanel); timingMetricPanel.revalidate(); timingMetricPanel.repaint(); return timingMetricPanel; } private JPanel createTimingControlPanel() { JPanel timingButtonPanel = new JPanel(); timingButtonPanel.setBorder(BorderFactory.createEtchedBorder()); if(! EnterpriseHealthMonitor.monitorIsEnabled()) { return timingButtonPanel; } String[] dateOptionStrings = Arrays.stream(DateRange.values()).map(e -> e.getLabel()).toArray(String[]::new); dateComboBox = new JComboBox(dateOptionStrings); dateComboBox.setSelectedItem(DateRange.TWO_WEEKS.getLabel()); dateComboBox.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent arg0) { try { updateTimingMetricGraphs(); } catch (HealthMonitorException ex) { logger.log(Level.SEVERE, ""Error updating timing metric panel"", ex); } } }); Set<String> hostNameSet = new HashSet<>(); for(String metricType:timingData.keySet()) { for(EnterpriseHealthMonitor.DatabaseTimingResult result: timingData.get(metricType)) { hostNameSet.add(result.getHostName()); } } hostComboBox = new JComboBox(hostNameSet.toArray(new String[hostNameSet.size()])); hostComboBox.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent arg0) { try { if((hostCheckBox != null) && hostCheckBox.isSelected()) { updateTimingMetricGraphs(); } } catch (HealthMonitorException ex) { logger.log(Level.SEVERE, ""Error populating timing metric panel"", ex); } } }); hostCheckBox = new JCheckBox(""Filter by host""); hostCheckBox.setSelected(false); hostComboBox.setEnabled(false); hostCheckBox.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent arg0) { try { hostComboBox.setEnabled(hostCheckBox.isSelected());  updateTimingMetricGraphs(); } catch (HealthMonitorException ex) { logger.log(Level.SEVERE, ""Error populating timing metric panel"", ex); } } }); timingButtonPanel.add(new JLabel(""Max days to display"")); timingButtonPanel.add(dateComboBox); timingButtonPanel.add(Box.createHorizontalStrut(100)); timingButtonPanel.add(hostCheckBox); timingButtonPanel.add(hostComboBox); return timingButtonPanel; } private void updateTimingMetricGraphs() throws HealthMonitorException { graphPanel.removeAll(); for(String name:timingData.keySet()) { List<EnterpriseHealthMonitor.DatabaseTimingResult> intermediateTimingDataForDisplay; if(dateComboBox.getSelectedItem() != null) { DateRange selectedDateRange = DateRange.fromLabel(dateComboBox.getSelectedItem().toString()); System.out.println(""Using date range "" + selectedDateRange.getLabel()); if(selectedDateRange != DateRange.ALL) { long threshold = System.currentTimeMillis() - selectedDateRange.getTimestampRange(); intermediateTimingDataForDisplay = timingData.get(name).stream() .filter(t -> t.getTimestamp() > threshold) .collect(Collectors.toList()); } else { intermediateTimingDataForDisplay = timingData.get(name); } } else { intermediateTimingDataForDisplay = timingData.get(name); } String hostToDisplay = null; if(hostCheckBox.isSelected() && (hostComboBox.getSelectedItem() != null)) { hostToDisplay = hostComboBox.getSelectedItem().toString(); } TimingMetricGraphPanel singleTimingGraphPanel = new TimingMetricGraphPanel(intermediateTimingDataForDisplay, TimingMetricGraphPanel.TimingMetricType.AVERAGE, hostToDisplay, true); JLabel metricNameLabel = new JLabel(name); metricNameLabel.setFont(new Font(""Serif"", Font.BOLD, 12)); graphPanel.add(metricNameLabel); singleTimingGraphPanel.setPreferredSize(new Dimension(900,250)); graphPanel.add(singleTimingGraphPanel); } System.out.println(""Repainting panel""); graphPanel.revalidate(); graphPanel.repaint(); } private JPanel createAdminPanel() { JPanel adminPanel = new JPanel(); adminPanel.setBorder(BorderFactory.createEtchedBorder()); JButton enableButton = new JButton(""Enable monitor""); JButton disableButton = new JButton(""Disable monitor""); boolean isEnabled =  EnterpriseHealthMonitor.monitorIsEnabled(); enableButton.setEnabled(! isEnabled); disableButton.setEnabled(isEnabled); enableButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent arg0) { System.out.println(""\n### In action listener for enable button""); try { dialog.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); EnterpriseHealthMonitor.setEnabled(true); redisplay(); } catch (HealthMonitorException ex) { logger.log(Level.SEVERE, ""Error enabling monitoring"", ex); } finally { dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); } } }); disableButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent arg0) { System.out.println(""\n### In action listener for disable button""); try { dialog.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR)); EnterpriseHealthMonitor.setEnabled(false); redisplay(); } catch (HealthMonitorException ex) { logger.log(Level.SEVERE, ""Error disabling monitoring"", ex); } finally { dialog.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); } } }); adminPanel.add(enableButton); adminPanel.add(Box.createHorizontalStrut(25)); adminPanel.add(disableButton); return adminPanel; }",private void refreshPanels() throws HealthMonitorException {ename Method
TRegex: reduce compiler graph sizes,"public DFAGenerator(TRegexCompilationRequest compilationRequest, NFA nfa, TRegexDFAExecutorProperties executorProps, CompilationBuffer compilationBuffer) { this.compilationRequest = compilationRequest;","public DFAGenerator(TRegexCompilationRequest compilationReqest, NFA nfa, TRegexDFAExecutorProperties executorProps, CompilationBuffer compilationBuffer) { this.compilationReqest = compilationReqest;",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Fix the setDepth method which was erroneously setting the priority instead of the depth.,public void setDepth ( int depth ) { this.depth = depth;,public void setDepth ( int priority ) { this.priority = priority;,KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP,Rename Parameter
Attempt for Hazelcast implementation of CacheProvider plus added an impl for development purposes.,"public Object get(String region, String key) { Map<String,Object> cacheRegion = getRegion(region); return cacheRegion.get(key);",public Object get(String key) { return cache.get(key);,KEEP KEEP KEEP ADD ADD KEEP KEEP ADD ADD ADD ADD KEEP REP,Add Parameter
Moved the saveMarked queue over to the SetQueue system,public boolean processChunkSaveUnload(SpoutChunk c) {,"public boolean processChunkSaveUnload(int x, int y, int z) {",KEEP KEEP REP REP DEL DEL DEL DEL KEEP,Add Parameter
this fixes bug 25741,private File retrieveRuntimeXmlData(),private String retrieveRuntimeXmlData(),KEEP REP KEEP,Change Return Type
added XML namespaces support,"private static void processStartTag(ZLXMLReader xmlReader, String tagName, ZLStringMap attributes, HashMap currentNamespaceMap) {","private static void processStartTag(ZLXMLReader xmlReader, String tagName, ZLStringMap attributes) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Add bug patterns NM_SAME_SIMPLE_NAME_AS_SUPERCLASS and NM_SAME_SIMPLE_NAME_AS_INTERFACE,"public static @CheckForNull XMethod definedIn(JavaClass clazz, XMethod m) {","public static boolean definedIn(JavaClass clazz, XMethod m) {",KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
More performance improvements,"private static void checkAndInvalidate(Frame curFrame, int frameIndex, boolean isNonLocal, BranchProfile invalidateProfile, FrameDescriptor currFrameDescriptor) {","private static void checkAndInvalidate(Frame curFrame, int frameIndex, boolean isNonLocal, BranchProfile invalidateProfile, ValueProfile frameDescriptorProfile) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
java5 wip,public MarkupResourceStreamLookupResult newMarkupResourceStream(Class<? extends MarkupContainer> containerClass),public IResourceStream newMarkupResourceStream(Class<? extends MarkupContainer> containerClass),KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Upgrade to Vaadin 8.14 #3245,protected Lock lockSession(WrappedSession wrappedSession) {,protected void lockSession(WrappedSession wrappedSession) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Fixed #2328,"public Object getConvertedValue(FacesContext context, UIComponent component, Object submittedValue) throws ConverterException { try { PickList pickList = (PickList) component; String[] value = (String[]) submittedValue; JSONArray sourceList = new JSONArray(value[0]); JSONArray targetList = new JSONArray(value[1]); DualListModel model = new DualListModel(); doConvertValue(context, pickList, sourceList, model.getSource()); doConvertValue(context, pickList, targetList, model.getTarget()); return model; } catch(JSONException jSONException) { throw new ConverterException(jSONException); }","public Object getConvertedValue(FacesContext facesContext, UIComponent component, Object submittedValue) throws ConverterException { PickList pickList = (PickList) component; String[] value = (String[]) submittedValue; String[] sourceList = value[0].split("",""); String[] targetList = value[1].split("",""); DualListModel model = new DualListModel(); doConvertValue(facesContext, pickList, sourceList, model.getSource()); doConvertValue(facesContext, pickList, targetList, model.getTarget()); return model;",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD REP REP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Improve class loading:,"private void updatePath(String property, String sep, boolean cp) {","private void updatePath(String property, String sep) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Handle case when segment time threshold is crossed and 0 batch messages are processed (#9093),"private boolean processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeSleepTimeMillis) {","private void processStreamEvents(MessageBatch messagesAndOffsets, long idlePipeSleepTimeMillis) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Fix Activity leak and implement change notification for preferences,protected void loadPreferences() { setContactNameDisplayOrder(mContactsPrefs.getDisplayOrder()); setSortOrder(mContactsPrefs.getSortOrder()); if (mListView instanceof ContactEntryListView) { ContactEntryListView listView = (ContactEntryListView)mListView; listView.setHighlightNamesWhenScrolling(isNameHighlighingEnabled()); },protected void loadPreferences(ContactsPreferences contactsPrefs) { setContactNameDisplayOrder(contactsPrefs.getDisplayOrder()); setSortOrder(contactsPrefs.getSortOrder());,KEEP KEEP ADD ADD ADD ADD ADD ADD REP REP KEEP ADD ADD ADD ADD REP REP,Remove Parameter
several more minor improvements,private static Optional<Module> getMacroModule(Module mod) {,private static Module getMacroModule(Module mod) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
OC-6963,"public List<IdtView> findPaginatedIdtViewDataFiltered(int studyId, int pStudyId, int per_page, int page, String operation, ArrayList<String> studySubjects,ArrayList<String>eventDefs,ArrayList<String> crfs,  String option) {","public List<IdtView> findPaginatedIdtViewDataFiltered(int studyId, int pStudyId, int per_page, int page, String operation, String crf_name, String study_subject_label, String option) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP REP KEEP KEEP KEEP,Add Parameter
#7950 Integrationtests (#7960),public void testSelectionMultiple(String xhtml) {,public void testSelectionMultiple(Page page) {,KEEP KEEP REP REP KEEP,Rename Parameter
Restore the "Contacts to display" custom filter (1/3),protected ContactListFilter createContactsFilter() { final int filterType = ContactListFilterController.getInstance(this).isCustomFilterPersisted() ? ContactListFilter.FILTER_TYPE_CUSTOM : ContactListFilter.FILTER_TYPE_ALL_ACCOUNTS; return ContactListFilter.createFilterWithType(filterType);,protected ContactListFilter createAllAccountsFilter() { return ContactListFilter.createFilterWithType(ContactListFilter.FILTER_TYPE_ALL_ACCOUNTS);,KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP,Rename Method
Implemented recursive version of "unlist" function.,"public RAbstractVector unlistVector(RAbstractVector vector, byte recursive, byte useNames) {","public Object unlistNoop(Object object, byte recursive, byte useNames) {",KEEP REP REP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
fix: Map transfer leg mode correctly,"private List<Leg> mapTransferLeg(TransferPathLeg<TripSchedule> pathLeg, TraverseMode transferMode) {",private List<Leg> mapTransferLeg(TransferPathLeg<TripSchedule> pathLeg) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
cosmetics,public static List<ResourceUtils.ResourceInfo> getInitialResources(FacesContext context) { return (List<ResourceUtils.ResourceInfo>) context.getAttributes().get(INITIAL_RESOURCES);,public static ArrayList<ResourceUtils.ResourceInfo> getInitialResources(FacesContext context) { return (ArrayList<ResourceUtils.ResourceInfo>) context.getAttributes().get(INITIAL_RESOURCES);,KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
docs: Spelling maxNumOfItinerariesPerGroup (pr -> per),"public GroupBySimilarity(double groupByP, int maxNumOfItinerariesPerGroup) {","public GroupBySimilarity(double groupByP, int maxNumOfItinerariesPrGroup) {",KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix IllegalArgumentException when upgrading from 1.2 with SC,protected boolean isIndexEntryAfterSliceFinish(ByteBuffer name),protected boolean isAfterSliceFinish(ByteBuffer name),KEEP KEEP REP KEEP,Rename Method
Improved scheduler reliability for snapshot will always wait until the tick is completed,"private void copySnapshot(List<AsyncExecutor> executors, boolean alreadyShutdown) throws InterruptedException {",private void copySnapshot(List<AsyncExecutor> executors) throws InterruptedException {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
[java] UseTryWithResources false positive with not local vars,private ASTName getCloseTarget(ASTName method) {,private TypeNode getType(ASTName method) {,KEEP REP REP KEEP KEEP,Change Return Type
Added a generator thread,"private void generateColumn(int x, int z) { AtomicBoolean generated = generatedColumns[x][z];",private void generateChunks(LoadOption loadopt) {,KEEP KEEP ADD ADD REP REP KEEP ADD ADD ADD ADD,Add Parameter
ImageGalleryConmtroller listener management changes,void setCaseStale(Boolean isStale) {,void setCaseStale(Boolean b) {,KEEP KEEP REP KEEP,Rename Parameter
Minor tweak: Eliminate redundant extracting in hash-join,"private static <U> Supplier<Map<Integer, List<Candidate<U>>>> createHashTableSupplier(Queryable<? extends U> queryable, Function<? super U, ?> fieldsExtractor2) {","private static <U> Supplier<Map<Integer, List<U>>> createHashTableSupplier(Queryable<? extends U> queryable, Function<? super U, ?> fieldsExtractor2) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Backed out changeset 0f217709eb72 to fix performance regression.,"private static String constructReplacementPrefix(RNode[] seq, RNode rhs, RNode replacementArg, WriteVariableNode.Mode rhsWriteMode, String tmpSymbol) {","private static String constructReplacementPrefix(RNode[] seq, RNode rhs, RNode replacementArg, WriteVariableNode.Mode rhsWriteMode) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Use SHA-512 instead of SHA-1 in MavenArtifactFetcher,"private boolean validateStagedFiles(String filePath, String sha512Path) throws IOException {","private boolean validateStagedFiles(String filePath, String sha1Path) throws IOException {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
"Issue #564: Refactor ClassTransformer a little more, so now we have a transformMethod(Method); note this changes the order of method declarations in the transformed Java","Method model, final String methodName,","Tree.AnyMethod def, final String methodName,",REP REP KEEP KEEP KEEP,Rename Parameter
WICKET-4802 Add functionality to be able to export DataTable content,public IModel<?> getDataModel(IModel<T> rowModel),public IModel<Object> getDataModel(IModel<T> rowModel),KEEP REP KEEP KEEP,Change Return Type
fix categorization ui update errors,private synchronized String getCountsText() { final String counts = Optional.ofNullable(getItem()) .map(TreeNode::getGroup) .map((DrawableGroup t) -> { return " (" + ((t.groupKey.getAttribute() == DrawableAttribute.HASHSET) ? Integer.toString(t.getSize()) : t.getFilesWithHashSetHitsCount() + "/" + t.getSize()) + ")"; }).orElse(""); ,synchronized private Integer getDenominator() { try { return getItem().getGroup().getSize(); } catch (NullPointerException ex) { return 0; },ADD KEEP ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP REP REP,Change Return Type
Implemented support for mutating "value" argument of the replacement form for builtins.,"protected void writeObjectValue(@SuppressWarnings(""unused"") VirtualFrame virtualFrame, Frame frame, FrameSlot frameSlot, Object value, boolean toBeCopied) {","protected void writeObjectValue(@SuppressWarnings(""unused"") VirtualFrame virtualFrame, Frame frame, FrameSlot frameSlot, Object value) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Eliminated class to source map parameter from readXML() and writeXML(),"public void readXML(String fileName, Project project)","public void readXML(String fileName, Project project, Map<String, String> classToSourceFileMap)",KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL,Remove Parameter
Make Compilation time function evaluation after query parser (#5437),private static Expression compileFunctionExpression(SqlBasicCall funcSqlNode) {,private static Expression evaluateFunctionExpression(SqlBasicCall funcSqlNode) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
minor edits,public InvokeDynamicWriter(final WriterController controller) { super(controller);,public InvokeDynamicWriter(WriterController wc) { super(wc); this.controller = wc;,KEEP ADD REP REP KEEP REP DEL DEL DEL,Rename Parameter
Set payment time,public Boolean getIsMailNotSend() { return isMailNotSend;,public Boolean getIsMailSend() { return isMailSend;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Added getFlags() to ShadowPendingIntent,"private static PendingIntent create(Context context, Intent intent, boolean isActivity, boolean isBroadcast, boolean isService, int requestCode, int flags) {","private static PendingIntent create(Context context, Intent intent, boolean isActivity, boolean isBroadcast, boolean isService, int requestCode) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
implement intern arg in system .Internal,"public Object system(RAbstractStringVector command, byte internLogical) { Object result; boolean intern = RRuntime.fromLogical(internLogical);","public Object system(RAbstractStringVector command, byte intern) { if (RRuntime.fromLogical(intern)) { throw RError.nyi(getEncapsulatingSourceSection(), "".Internal(system)""); }",KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP REP REP REP REP DEL,Rename Parameter
Prune char classes to encoding range in AST builder,"private Term translateUnicodeCharClass(CodePointSet codePointSet, Token.CharacterClass token) { if (!options.isUTF16ExplodeAstralSymbols() || Constants.BMP_WITHOUT_SURROGATES.contains(codePointSet)) {",private Term translateUnicodeCharClass(Token.CharacterClass token) { CodePointSet codePointSet = token.getCodePointSet(); if (!options.isUTF16ExplodeAstralSymbols() || Constants.BMP_WITHOUT_SURROGATES.contains(token.getCodePointSet())) {,KEEP KEEP ADD ADD REP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP REP KEEP,Add Parameter
Interim committ of History support for Edge browser 1190-edge-history,"private void getHistory(AbstractFile origFile, File resultDir) { File containerFiles[] = resultDir.listFiles((dir, name) -> name.toLowerCase().contains(""container"")); if(containerFiles == null){ this.addErrorMessage(Bundle.ExtractEdge_getHistory_containerFileNotFound()); return; } for(File file: containerFiles){ Scanner fileScanner; try { fileScanner = new Scanner(new FileInputStream(file.toString())); } catch (FileNotFoundException ex) { logger.log(Level.WARNING, ""Unable to find the ESEDatabaseView file at "" + file.getPath(), ex);  continue;  } Collection<BlackboardArtifact> bbartifacts = new ArrayList<>(); try{ List<String> headers = null; while (fileScanner.hasNext()) { String line = fileScanner.nextLine(); if(headers == null){  headers = Arrays.asList(line.toLowerCase().split("","")); continue; } if(line.contains(""Visited"")){ BlackboardArtifact b = parseHistoryLine(origFile, headers, line); if(b != null){ bbartifacts.add(b); this.indexArtifact(b); } }else{ break; } } } finally{ fileScanner.close(); } if(!bbartifacts.isEmpty()){ services.fireModuleDataEvent(new ModuleDataEvent( RecentActivityExtracterModuleFactory.getModuleName(), BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY, bbartifacts)); } } } @Messages({ ""ExtractEdge_programName=Microsoft Edge"" }) private BlackboardArtifact parseHistoryLine(AbstractFile origFile, List<String> headers, String line){ BlackboardArtifact bbart = null; String[] rowSplit = line.split("",""); int index = headers.indexOf(""url""); String urlUserStr = rowSplit[index]; String[] str = urlUserStr.split(""@""); String user = str[0].replace(""Visited: "", """"); String url = str[1]; index = headers.indexOf(""accessedtime""); String accessTime = rowSplit[index].trim(); Long ftime = null; try{ Long epochtime = dateFormatter.parse(accessTime).getTime(); ftime = epochtime / 1000; }catch(ParseException ex){ logger.log(Level.WARNING, ""The Accessed Time format in history file seems invalid "" + accessTime, ex); } try{ bbart = origFile.newArtifact(BlackboardArtifact.ARTIFACT_TYPE.TSK_WEB_HISTORY); Collection<BlackboardAttribute> bbattributes = new ArrayList<>(); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_URL, RecentActivityExtracterModuleFactory.getModuleName(), url)); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DATETIME_ACCESSED, RecentActivityExtracterModuleFactory.getModuleName(), ftime)); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_REFERRER, RecentActivityExtracterModuleFactory.getModuleName(), """")); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_TITLE, RecentActivityExtracterModuleFactory.getModuleName(), """")); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_PROG_NAME, RecentActivityExtracterModuleFactory.getModuleName(), Bundle.ExtractEdge_programName())); bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_DOMAIN, RecentActivityExtracterModuleFactory.getModuleName(), (NetworkUtils.extractDomain(url))));  bbattributes.add(new BlackboardAttribute(BlackboardAttribute.ATTRIBUTE_TYPE.TSK_USER_NAME, RecentActivityExtracterModuleFactory.getModuleName(), user)); bbart.addAttributes(bbattributes); } catch (TskCoreException ex) { logger.log(Level.SEVERE, ""Error writing Microsoft Edge web history artifact to the blackboard."", ex);  }",private void getHistory() {,KEEP KEEP ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
ShadowPreference now setting key value from attributes,"public void __constructor__(Context context, AttributeSet attributeSet, int defStyle) {","public void __constructor__(Context context, AttributeSet attrs, int defStyle) { this.context = context; this.attrs = attrs; this.defStyle = defStyle;",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Fixed up opacity and occlusion functions,public BlockMaterial setOcclusion(BlockFaces faces) { this.occlusion.set(faces);,public boolean occludes(BlockFace face) { return this.occlusion.get(face); } public boolean occludes() { return this.occlusion.isDirty(); },KEEP REP REP REP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Refactor Column.,public AbstractType<T> getType() {,public AbstractType<?> getType() {,KEEP REP KEEP KEEP,Change Return Type
Fixed collapse parser behavior when dealing with docs boosted by QueryElevationComponent that are in the null group to treat them consistently regardless of collapse field type or group head selector,"IntIntHashMap boostDocsMap,","IntIntHashMap boostDocs,",KEEP REP,Rename Parameter
update a couple tests to be valid with 1.45q,"private void validateUncalibLength(int[] xs, int[] ys)","private void validateUncalibLength(int[] xs, int[] ys, double len)",KEEP KEEP KEEP KEEP KEEP REP DEL DEL,Remove Parameter
Use a MemoizedScopeCreator & save all vars declared in fn in CoalesceVariableNames,private static AllVarsDeclaredInFunction shouldOptimizeScope(NodeTraversal t) {,private static boolean shouldOptimizeScope(NodeTraversal t) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Remove ShadowAssetManager.tryResName() (#2507),"public void setCreatedFromResId(int resId, String description) {","public void setCreatedFromResId(int resId, ResName resName) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Handle null strings in ShadowNotification.Builder.,"public Notification.Builder setContentTitle(CharSequence contentTitle) { this.contentTitle = contentTitle; directlyOn(realBuilder, Notification.Builder.class, ""setContentTitle"", CharSequence.class).invoke(contentTitle);","public Notification.Builder setContentTitle(CharSequence title) { contentTitle = title.toString(); directlyOn(realBuilder, Notification.Builder.class, ""setContentTitle"", CharSequence.class).invoke(title);",KEEP KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
Provide association identifiers definitions,private void reconcileProjectionAttributes(LensProjectionContext projCtx),"Map<QName, DeltaSetTriple<ItemValueWithOrigin<PrismPropertyValue<?>, PrismPropertyDefinition<?>>>> squeezedAttributes)",REP REP REP REP,Remove Parameter
OC-6440,"public ResponseEntity<HashMap> createOrUpdateAccount(HttpServletRequest request, @RequestBody HashMap<String, String> map) throws Exception { logger.info(""I'm in createUserAccount"");","public ResponseEntity<UserAccountBean> createOrUpdateAccount(HttpServletRequest request, @RequestBody HashMap<String, String> map) throws Exception {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD,Change Return Type
add setOnPageChangeListener() to ShadowViewPager,public void setCurrentItem(int position) { if (onPageChangeListener != null) { onPageChangeListener.onPageSelected(position); } currentItem = position;,public void setCurrentItem(int item) { currentItem = item;,KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP KEEP REP,Rename Parameter
Correct type bounds for mapIf() and flatMapIf() to allow variant transforms.,"default <O> Promise<O> mapIf(Predicate<? super T> predicate, Function<? super T, ? extends O> onTrue, Function<? super T, ? extends O> onFalse) {","default Promise<T> mapIf(Predicate<? super T> predicate, Function<? super T, ? extends T> onTrue, Function<? super T, ? extends T> onFalse) {",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
LibVLC: MediaBrowser: change browse() arguments,"public void browse(String path, int flags) {","public void browse(String path, boolean interact) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Organization DAO now works with multy owners,public List<Organization> getByOwner(String owner) throws OrganizationException { final List<Organization> organizations = new ArrayList<>();,public Organization getByOwner(String owner) throws OrganizationException { DBObject res;,KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP REP,Change Return Type
fix:  update PortalRootPersonAttributeDao to calculate a missing username attribute in a way that works for both logins & searches,protected IPersonAttributes selectUsernameIfAbsent(IPersonAttributes person) {,"IPersonAttributes person, String uidInQuery) {",ADD KEEP REP REP DEL KEEP,Remove Parameter
albums/songs: fix context menu in songs tab,"private void setContextMenuItems(Menu menu, View v, int position) { if (mTabHost.getCurrentTabTag() != ""songs"" || mSongsAdapter.getItem(position).mIsSeparator) {","private void setContextMenuItems(Menu menu, View v) { if (v.getId() != R.id.songs) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP REP KEEP ADD ADD REP KEEP,Add Parameter
Move Wheelchair mapping to StopAndStationMapper,WheelChairBoarding wheelChairBoarding,StopPlace stopPlace,REP REP,Rename Parameter
Made varArg argument optional,private static MethodSpec.Builder resTypeVarArgBuilder(,private static MethodSpec.Builder resTypeListBuilder(,KEEP KEEP KEEP REP,Rename Method
Support pre and post processors,"protected void addColumnValue(StringBuilder builder, List<UIComponent> components, String tag, UIColumn column) throws IOException {","protected void addColumnValue(Writer writer, List<UIComponent> components, String tag, UIColumn column) throws IOException {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
fix naming,"public String encode(final String s, final Charset charset)","public String encode(final String s, final Charset charsetName)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
"""unimplemented"" with message in RInternalError",public static RuntimeException shouldNotReachHere(String message) {,public static RuntimeException shouldNotReachHere(String msg) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
[Skymeld] Execution exception with --keep_going: don't forward the error,"@Nullable FailureDetail analysisFailureDetail, @Nullable DetailedExitCode executionDetailedExitCode,","@Nullable FailureDetail failureDetail,",KEEP KEEP ADD ADD ADD REP,Rename Parameter
WICKET-5527 Inefficient DefaultPageStore.SerializedPagesCache,"public Serializable prepareForSerialization(final String sessionId, final Serializable page)","public Serializable prepareForSerialization(final String sessionId, final Object object)",KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Show commands for XMPP video chat for Google Talk,public static ImActions buildImActions(ContentValues values) {,public static Intent buildImIntent(ContentValues values) {,KEEP KEEP REP REP KEEP KEEP,Change Return Type
Add deep argument to AbstractContainerLibrary.copy,"RDoubleVector containerLibDuplicate(boolean deep, @CachedLibrary(limit = DATA_LIB_LIMIT) VectorDataLibrary dataLib) { RDoubleVector result = new RDoubleVector(dataLib.copy(data, deep), dataLib.getLength(data));","@ExportMessage(name = ""copy"", library = AbstractContainerLibrary.class) RDoubleVector containerLibCopy(@CachedLibrary(limit = DATA_LIB_LIMIT) VectorDataLibrary dataLib) { RDoubleVector result = new RDoubleVector(dataLib.copy(data, false), dataLib.getLength(data));",REP REP REP REP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Add Parameter
Moved top level check to 'CallRFunction'.,"public Object execute(VirtualFrame frame, RFunction function, RCaller caller, MaterializedFrame candidate, Object[] evaluatedArgs, ArgumentsSignature suppliedSignature,","public Object execute(VirtualFrame frame, RFunction function, RCaller caller, MaterializedFrame candidate, boolean topLevel, Object[] evaluatedArgs, ArgumentsSignature suppliedSignature,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
Add config command,public boolean isEmptyConfig() { return isEmptyParam(downloadDir) && isEmptyParam(proxyUrl) && isEmptyParam(proxyPort);,public boolean isEmpty() { return isEmpty(downloadDir) && isEmpty(proxyUrl) && isEmpty(proxyPort);,KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP,Rename Method
Clean slate on every quickstart run (#5395),private QuickstartTableRequest prepareOfflineTableRequest(File configDir),private QuickstartTableRequest prepareOfflineTableRequest(),KEEP KEEP ADD REP,Add Parameter
Displays related apps on mktplace entry page,"public MarketplacePortletDefinition(IPortletDefinition portletDefinition, IPortletCategoryRegistry registry){ this.portletCategoryRegistry = registry; this.portletDefinition = portletDefinition; this.initDefinitions(); } private void initDefinitions(){ this.initScreenShots(); this.initPortletReleaseNotes(); this.initCategories(); this.initRelatedPortlets(); } private void initScreenShots(){ List<IPortletPreference> portletPreferences = this.portletDefinition.getPortletPreferences(); List<IPortletPreference> urls =  new ArrayList<IPortletPreference>(portletPreferences.size()); List<IPortletPreference> captions = new ArrayList<IPortletPreference>(portletPreferences.size()); List<ScreenShot> screenShots = new ArrayList<ScreenShot>(); for(int i=0; i<portletPreferences.size(); i++){ urls.add(null); captions.add(null); for(int j=0; j<portletPreferences.size(); j++){ if(portletPreferences.get(j).getName().equalsIgnoreCase(""screen_shot""+Integer.toString(i+1))){ urls.set(i, portletPreferences.get(j)); } if(portletPreferences.get(j).getName().equalsIgnoreCase(""screen_shot""+Integer.toString(i+1)+""_caption"")){ captions.set(i, portletPreferences.get(j)); } } } for(int i=0; i<urls.size(); i++){ if(urls.get(i)!=null){ if(captions.size()>i && captions.get(i)!=null){ screenShots.add(new ScreenShot(urls.get(i).getValues()[0], Arrays.asList(captions.get(i).getValues()))); }else{ screenShots.add(new ScreenShot(urls.get(i).getValues()[0])); } } } this.setScreenShots(screenShots); } private void initPortletReleaseNotes(){ PortletReleaseNotes temp = new PortletReleaseNotes(); for(IPortletPreference portletPreference:this.portletDefinition.getPortletPreferences()){ if(MarketplacePortletDefinition.RELEASE_DATE_PREFERENCE_NAME.equalsIgnoreCase(portletPreference.getName())){ try { DateTime dt = releaseDateFormatter.parseDateTime(portletPreference.getValues()[0]); temp.setReleaseDate(dt); } catch (Exception e){ logger.warn(""Issue with parsing ""+ RELEASE_DATE_PREFERENCE_NAME + "". Should be in format "" + RELEASE_DATE_FORMAT, e); } continue; } if(MarketplacePortletDefinition.RELEASE_NOTE_PREFERENCE_NAME.equalsIgnoreCase(portletPreference.getName())){ temp.setReleaseNotes(Arrays.asList(portletPreference.getValues())); continue; } } this.setPortletReleaseNotes(temp); } private void initCategories(){ Set<PortletCategory> allCategories = new HashSet<PortletCategory>(); for(PortletCategory childCategory:this.portletCategoryRegistry.getParentCategories(this)){ allCategories.add(childCategory); allCategories.addAll(this.portletCategoryRegistry.getAllParentCategories(childCategory)); } this.setCategories(allCategories); } private void initRelatedPortlets(){ Set<IPortletDefinition> allPortlets = new HashSet<IPortletDefinition>(); for(PortletCategory parentCategory: this.portletCategoryRegistry.getParentCategories(this)){ allPortlets.addAll(this.portletCategoryRegistry.getAllChildPortlets(parentCategory)); } allPortlets.remove(this.portletDefinition); this.setRelatedPortlets(new HashSet<IPortletDefinition>(allPortlets)); } private void setScreenShots(List<ScreenShot> screenShots){ this.screenShots = screenShots; } public List<ScreenShot> getScreenShots() { if(screenShots==null){ this.initScreenShots(); } return screenShots; } private void setPortletReleaseNotes(PortletReleaseNotes portletReleaseNotes){ this.releaseNotes = portletReleaseNotes; } public PortletReleaseNotes getPortletReleaseNotes() { if(releaseNotes==null){ this.initPortletReleaseNotes(); } return releaseNotes; } private void setCategories(Set<PortletCategory> categories){ this.categories = categories; } public Set<PortletCategory> getCategories() { if(this.categories == null){ this.initCategories(); } return this.categories; } private void setRelatedPortlets(Set<IPortletDefinition> relatedPortlets){ this.relatedPortlets = relatedPortlets; } public Set<IPortletDefinition> getRelatedPortlets() { if(this.relatedPortlets==null){ this.initRelatedPortlets(); } return this.relatedPortlets; } public Set<IPortletDefinition> getRandomSamplingRelatedPortlets(){ if(this.relatedPortlets==null){ this.initRelatedPortlets(); } if(this.relatedPortlets.isEmpty()){ return this.relatedPortlets; } List<IPortletDefinition> tempList = new ArrayList<IPortletDefinition>(this.relatedPortlets); Collections.shuffle(tempList); return new HashSet<IPortletDefinition>(tempList.subList(0, tempList.size()<QUANTITY_RELATED_PORTLETS_TO_SHOW ? tempList.size(): QUANTITY_RELATED_PORTLETS_TO_SHOW)); } @Override public String getDataId() { return this.portletDefinition.getDataId(); } @Override public String getDataTitle() { return this.portletDefinition.getDataTitle(); }","public MarketplacePortletDefinition(IPortletDefinition portletDefinition){ this.portletDefinition = portletDefinition; this.setUpDefinitions(); } private void setUpDefinitions(){ this.setScreenShots(); this.setPortletReleaseNotes(); } private void setPortletReleaseNotes(){ if(releaseNotes == null) releaseNotes = new PortletReleaseNotes(); for(IPortletPreference portletPreference:this.portletDefinition.getPortletPreferences()){ if(MarketplacePortletDefinition.RELEASE_DATE_PREFERENCE_NAME.equalsIgnoreCase(portletPreference.getName())){ try { DateTime dt = releaseDateFormatter.parseDateTime(portletPreference.getValues()[0]); releaseNotes.setReleaseDate(dt); } catch (Exception e){ logger.warn(""Issue with parsing ""+ RELEASE_DATE_PREFERENCE_NAME + "". Should be in format "" + RELEASE_DATE_FORMAT, e); } continue; } if(MarketplacePortletDefinition.RELEASE_NOTE_PREFERENCE_NAME.equalsIgnoreCase(portletPreference.getName())){ releaseNotes.setReleaseNotes(Arrays.asList(portletPreference.getValues())); continue; } } } private void setScreenShots(){ List<IPortletPreference> portletPreferences = this.portletDefinition.getPortletPreferences(); List<IPortletPreference> urls =  new ArrayList<IPortletPreference>(portletPreferences.size()); List<IPortletPreference> captions = new ArrayList<IPortletPreference>(portletPreferences.size()); List<ScreenShot> screenshots = new ArrayList<ScreenShot>(); for(int i=0; i<portletPreferences.size(); i++){ urls.add(null); captions.add(null); for(int j=0; j<portletPreferences.size(); j++){ if(portletPreferences.get(j).getName().equalsIgnoreCase(""screen_shot""+Integer.toString(i+1))){ urls.set(i, portletPreferences.get(j)); } if(portletPreferences.get(j).getName().equalsIgnoreCase(""screen_shot""+Integer.toString(i+1)+""_caption"")){ captions.set(i, portletPreferences.get(j)); } } } for(int i=0; i<urls.size(); i++){ if(urls.get(i)!=null){ if(captions.size()>i && captions.get(i)!=null){ screenshots.add(new ScreenShot(urls.get(i).getValues()[0], Arrays.asList(captions.get(i).getValues()))); }else{ screenshots.add(new ScreenShot(urls.get(i).getValues()[0])); } } } this.screenShots = screenshots; } public List<ScreenShot> getScreenShots() { if(screenShots==null){ this.setScreenShots(); } return screenShots; } public PortletReleaseNotes getPortletReleaseNotes() { if(releaseNotes==null){ this.setPortletReleaseNotes(); } return releaseNotes; } @Override public String getDataId() { return this.portletDefinition.getDataId(); } @Override public String getDataTitle() { return this.portletDefinition.getDataTitle(); }dd Parameter
#9540 block next button when not enough file were chosen,private void chooseSourceFile(DataTransferPipe pipe) {,private boolean chooseSourceFile(DataTransferPipe pipe) {,KEEP REP KEEP KEEP KEEP,Change Return Type
UP-3434 Add request caching to portlet definition lookup in entity registry,"protected IPortletDefinition getPortletDefinition(HttpServletRequest request, IUserInstance userInstance, String portletDefinitionIdStr) { request = this.portalRequestUtils.getOriginalPortalRequest(request); final ConcurrentMap<String, IPortletDefinition> portletDefinitions = PortalWebUtils.getMapRequestAttribute(request, PORTLET_DEFINITION_LOOKUP_MAP_ATTRIBUTE); IPortletDefinition portletDefinition  = portletDefinitions.get(portletDefinitionIdStr); if (portletDefinition == NO_PERMISSION_PORTLET_DEFINITION) { return null; } if (portletDefinition != null) { return portletDefinition; } portletDefinition = this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionIdStr); portletDefinition = checkPortletDefinitionRenderPermissions(userInstance, portletDefinition); if (portletDefinition == null) { portletDefinitions.put(portletDefinitionIdStr, NO_PERMISSION_PORTLET_DEFINITION); } else { portletDefinitions.put(portletDefinitionIdStr, portletDefinition); } return portletDefinition;","protected IPortletDefinition getPortletDefinition(IUserInstance userInstance, String portletDefinitionIdStr) { final IPortletDefinition portletDefinition = this.portletDefinitionRegistry.getPortletDefinition(portletDefinitionIdStr); return checkPortletDefinitionRenderPermissions(userInstance, portletDefinition);",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD KEEP KEEP ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
cassandra-stress simultaneous inserts over same seed,"public Operation(Timer timer, StressSettings settings, DataSpec spec)","public Operation(Timer timer, PartitionGenerator generator, StressSettings settings, Distribution partitionCount)",KEEP KEEP KEEP DEL DEL KEEP KEEP REP REP,Add Parameter
Fix appear anim when item is first mounted,void setRootHeightAnimation(@Nullable Transition.RootBoundsTransition rootHeightAnimation) { mRootHeightAnimation = rootHeightAnimation;,void setHasLithoViewHeightAnimation(boolean hasLithoViewHeightAnimation) { mHasLithoViewHeightAnimation = hasLithoViewHeightAnimation;,KEEP ADD REP REP KEEP REP KEEP REP,Rename Parameter
revert #5966,"private void readSimpleColumns(FileDataInput file, SortedSet<ByteBuffer> columnNames, List<OnDiskAtom> result) throws IOException","private void readSimpleColumns(CFMetaData metadata, FileDataInput file, SortedSet<ByteBuffer> columnNames, List<OnDiskAtom> result) throws IOException",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
"CollectionDatasource.containsItem(id), getItem(id) with constructed IdProxy objects fail to find items #1847","IdProxy(T value, int hashCode) {",IdProxy(T value) {,KEEP ADD ADD REP KEEP,Add Parameter
do not use ReadVariableNode in CallArgumentsNode,"public static VarArgsSignature createSignature(RArgsValuesAndNames varArgsAndNames, int times, boolean allowConstants) { Object[] content;","public static VarArgsSignature createSignature(Object varArgContent, int times, boolean allowConstants) { Object[] content; if (!(varArgContent instanceof RArgsValuesAndNames)) {",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Parameter
remove custom frames generated during S3 calls,"public static void setS3Generic(Object[] args, String generic) {","public static void setS3Generic(Frame frame, String generic) { Object[] args = getArgumentsWithEvalCheck(frame);",KEEP KEEP KEEP REP REP KEEP KEEP KEEP DEL DEL DEL DEL,Rename Parameter
Fixed a race condition and a deadlock.,public boolean waitForInitialization() {,public void waitForInitialization() {,KEEP REP KEEP KEEP,Change Return Type
Map Xform dataTypes/ResponseTypes to OC data model,"private void createItemGroupMetadata(Html html, Item item, CrfVersion version, ItemGroup itemGroup, boolean isRepeating, Integer itemOrdinal) {","private void createItemGroupMetadata(Html html, Item item, CrfVersion version, ItemGroup itemGroup, boolean isRepeating) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
minor refactor: partially generify ObjectRange,public Comparable get(int index) {,public Object get(int index) {,KEEP REP KEEP KEEP KEEP,Change Return Type
"Refactoring out methods for readability, adding a log statement  and commenting based on review feedback.","public Hashtable<Integer, UserProfile> getUserProfileList (final IPerson person) {",public Hashtable getUserProfileList (final IPerson person) {,KEEP ADD REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
CLDIDE-2388 Replace plain text with JSON in responses,public void setupConfirmation(@PathParam("uuid") String uuid) throws ForbiddenException {,public Response setupConfirmation(@PathParam("uuid") String uuid) {,KEEP REP KEEP KEEP KEEP ADD ADD KEEP,Change Return Type
Re-fetch cached dependencies that don't exist in the local maven repository.,"public CachedDependencyResolver(DependencyResolver dependencyResolver, Cache cache, CacheNamingStrategy cacheNamingStrategy, CacheValidationStrategy cacheValidationStrategy) {","public CachedDependencyResolver(DependencyResolver dependencyResolver, Cache cache, CacheNamingStrategy cacheNamingStrategy) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Revert all SonarSecurity 7.3 related commits:,private String filePath() {,private String ucfgFilePath() {,KEEP KEEP REP KEEP,Rename Method
Guarded autocomplete text field from infinite recursion when using async filtering.,private void addPopup(boolean updateFilter) {,private void addPopup() {,KEEP KEEP ADD REP KEEP,Add Parameter
refactor: Create a separate module for the config load phase.,static RaptorConfig<TripSchedule> providesRaptorConfig(ConfigModel config) { return new RaptorConfig<>(config.routerConfig().raptorTuningParameters());,static ConfigModel provideModel(ConfigLoader loader) { return new ConfigModel(loader); },KEEP REP REP REP KEEP KEEP KEEP REP DEL,Change Return Type
"simplify, no need to lookup the class until the client wants it.","private void pushBySignature(String s) { if (""V"".equals(s)) return; push(new Item(s, null)); }","private void pushBySignature(String signature) { try { if (""V"".equals(signature)) return; if (signature == null) push( new Item(Item.UNKNOWN_TYPE )); else if (signature.startsWith(""L"")) push( new Item(Item.OBJECT_TYPE, Repository.lookupClass(signature.substring(1, signature.length() - 1)))); else if (""B"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Byte""))); else if (""C"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Character""))); else if (""D"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Double""))); else if (""F"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Float""))); else if (""I"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Integer""))); else if (""J"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Long""))); else if (""S"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Short""))); else if (""Z"".equals(signature)) push( new Item(Item.PRIMITIVE_TYPE, Repository.lookupClass(""java.lang.Boolean""))); else  push( new Item(Item.OBJECT_TYPE, Repository.lookupClass(signature)));",KEEP KEEP KEEP REP KEEP DEL DEL KEEP REP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
fixed opensearch description parsing,public void runBackgroundUpdate(final boolean force) {,public void runBackgroundUpdate(final boolean clearCache) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Can now start remote hosts from non-gui jmeter client,"public void startNonGui(CLOption testFile, CLOption logFile,CLOption remoteStart)","public void startNonGui(CLOption testFile, CLOption logFile)",KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
SONARJAVA-1925 Fix StackOverflowError (#1073),"private static List<AssignmentExpressionTree> getReassignments(@Nullable Tree ownerDeclaration, List<IdentifierTree> usages) {","private static List<Tree> getReassignments(@Nullable Tree ownerDeclaration, List<IdentifierTree> usages) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Interleaves extension calls during update,protected Void createState() {,protected Object createState() {,KEEP REP KEEP KEEP,Change Return Type
Fix inline allOf in request body (#12348),public List<ArrayOfInlineAllOfArrayAllofDogPropertyInner> getArrayAllofDogProperty() {,public List<DogAllOf> getArrayAllofDogProperty() {,KEEP REP KEEP KEEP,Change Return Type
[multistage] [testing] Add transform operator unit test (#9791),"public TransformOperator(Operator<TransferableBlock> upstreamOperator, DataSchema resultSchema,","public TransformOperator(Operator<TransferableBlock> upstreamOperator, DataSchema dataSchema,",KEEP KEEP KEEP KEEP REP,Rename Parameter
Avoid name collisions on content restore #9095,private NodePath buildArchivedPath( final Node node ),private NodePath buildArchivedPath( final NodeName name ),KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Testing Analytics on codenvy-next,"private Event(String date, String time, Map<String, String> params) {","private Event(String date, String time, EventContext context, Map<String, String> params) {",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
Initial support for Android O runtime.,"public List<ApplicationInfo> getInstalledApplicationsAsUser(int flags, int userId) { return null; } @Override public List<InstantAppInfo> getInstantApps() { return null; } @Override public Drawable getInstantAppIcon(String packageName) { return null; } @Override public boolean isInstantApp() { return false; } @Override public int getInstantAppCookieMaxSize() { return 0; } @Override public byte[] getInstantAppCookie() { return new byte[0]; } @Override public boolean setInstantAppCookie(byte[] cookie) { return false; }",public List<EphemeralApplicationInfo> getEphemeralApplications() { return null; } public Drawable getEphemeralApplicationIcon(String packageName) { return null; } public boolean isEphemeralApplication() { return false;} public int getEphemeralCookieMaxSizeBytes() {return 0;} public byte[] getEphemeralCookie() { return null; } public boolean setEphemeralCookie(byte[] cookie) { return false; },KEEP ADD ADD ADD REP REP KEEP KEEP KEEP KEEP ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP REP KEEP KEEP ADD ADD REP KEEP KEEP ADD ADD ADD REP REP REP KEEP KEEP REP KEEP KEEP ADD REP KEEP ADD KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
allow for FindBugsMain methods to be defined in findbugs.xml,"<T> void addComponentPlugin(Class<T> componentClass, ComponentPlugin<T> plugin) { if (!componentClass.isAssignableFrom(plugin.getComponentClass()))","<T> void addComponentPlugin(Class<T> componentClass, ComponentPlugin<T> filter) { if (!componentClass.isAssignableFrom(filter.getComponentClass()))",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
Fixed #2750 and #2865,"protected void encodeButton(FacesContext context, PickList pickList, String title, String styleClass, String icon) throws IOException {","protected void encodeButton(FacesContext context, PickList pickList, String label, String styleClass) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Fix #4395: Renamed escapeResults to escape.,"public boolean isEscape() { return (Boolean) getStateHelper().eval(PropertyKeys.escape, true);","public boolean isEscapeResults() { return (Boolean) getStateHelper().eval(PropertyKeys.escapeResults, true);",KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Method
EC2 ImportInstance action updates for EUCA-9934,"final Set<String> groupNames, final String userData, final String instanceType, final String availabilityZone, final String subnetId, final String privateIp, boolean monitoring, final String keyName ){ if(userId == null || userId.length()<=0) throw new IllegalArgumentException(""User ID is required""); if(imageId == null || imageId.length()<=0) throw new IllegalArgumentException(""Image ID is required""); final EucalyptusRunInstancesTask task = new EucalyptusRunInstancesTask(imageId); task.setGroupNames( groupNames ); task.setUserData( userData ); task.setInstanceType( instanceType ); task.setAvailabilityZone( availabilityZone ); task.setSubnetId( subnetId ); task.setPrivateIp( privateIp ); task.setMonitoring( monitoring ); task.setKeyName( keyName ); final CheckedListenableFuture<Boolean> result = task.dispatch(new EucalyptusUserActivity(userId)); try{ if(result.get()) return task.getInstanceId(); else throw new EucalyptusActivityException(""failed to run instances""); }catch(final Exception ex){ throw Exceptions.toUndeclared(ex); } }","public String runInstancesAsUser(final String userId, final String imageId, final String groupName, final String userData, final String instanceType, final String availabilityZone, boolean monitoring, final String keyName){ if(userId == null || userId.length()<=0) throw new IllegalArgumentException(""User ID is required""); if(imageId == null || imageId.length()<=0) throw new IllegalArgumentException(""Image ID is required""); final EucalyptusRunInstancesTask task = new EucalyptusRunInstancesTask(imageId); task.setGroupName(groupName); task.setUserData(userData); task.setInstanceType(instanceType); task.setAvailabilityZone(availabilityZone); task.setMonitoring(monitoring); task.setKeyName(keyName); final CheckedListenableFuture<Boolean> result = task.dispatch(new EucalyptusUserActivity(userId)); try{ if(result.get()) return task.getInstanceId(); else throw new EucalyptusActivityException(""failed to run instances""); }catch(final Exception ex){ throw Exceptions.toUndeclared(ex); } }",REP REP REP DEL DEL KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Support a fluent API in StorageVolumeBuilder,public StorageVolumeBuilder setStorageId(int storageId) {,public void setStorageId(int storageId) {,KEEP REP KEEP KEEP KEEP,Change Return Type
fix a character encoding bug with multipart/form-data encoded forms: ,public void setResponseRequestEncoding(final String encoding),public void setResponseRequestEncoding(final String responseRequestEncoding),KEEP KEEP KEEP KEEP REP,Rename Parameter
OC-7154,"public ResponseEntity<ArrayList<HashMap<String, Object>>> getWebServicesModule(HttpServletRequest request) throws Exception {",public ResponseEntity<HashMap> getWebServicesModule(HttpServletRequest request) throws Exception {,KEEP ADD REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
more ng cleanup,public IClassResolver getClassResolver(),public ClassResolver getClassResolver(),KEEP REP KEEP,Change Return Type
File.write() now returns number of bytes written.,public final int write(final InputStream input) throws IOException,public final void write(final InputStream input) throws IOException,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Make IGenericComponent's setter methods returning 'this' for method chaining,Component setModel(IModel<T> model);,void setModel(IModel<T> model);,REP KEEP KEEP,Change Return Type
"An experiment. If allocate/deallocate is the only place an entity can be added, can we get rid of the expensive",public List<Entity> getAll(Class<? extends Controller> type);,public Set<Entity> getAll(Class<? extends Controller> type);,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Fix parsing of Windows paths.,public static URL url(String osPath) throws MalformedURLException {,public static URL url(String path) throws MalformedURLException {,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Javadoc; no need for lookupTopic() to be synch.,"public static synchronized Context lookupContext(String initialContextFactory, String providerUrl, boolean useAuth, String securityPrincipal, String securityCredentials) { Context ctx = MAP.get(initialContextFactory + providerUrl);","public static synchronized Context lookupContext(String jndi, String url, boolean useAuth, String user, String pwd) { Context ctx = MAP.get(jndi + url);",KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP REP KEEP REP,Add Parameter
feat(freezeV2): optimize freezeV2 withdrawExpireUnfreeze,"public long execute(UnfreezeBalanceV2Param param, Repository repo) {","public void execute(UnfreezeBalanceV2Param param, Repository repo) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add opt-in lazy loading of application+instrumentation in Robolectric,"private Instrumentation installAndCreateApplication( AndroidManifest appManifest, Config config, android.content.res.Configuration androidConfiguration, DisplayMetrics displayMetrics) {","private void installAndCreateApplication(AndroidManifest appManifest, Config config, android.content.res.Configuration androidConfiguration, DisplayMetrics displayMetrics) {",KEEP ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
allow inlining builtins in CallMatcherNode,"protected final void evaluatePromises(VirtualFrame frame, RFunction function, Object[] args, int varArgIndex) {","protected final void evaluatePromises(VirtualFrame frame, RFunction function, Object[] args) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix for potential exceptions thrown by a race condition in a suspended version of Codename One. ,private byte[] readFileNoNormal(File f) throws IOException {,private byte[] readFile(File f) throws IOException {,KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
ensure non-null callSrc for all members of DispatchedVarArgsCallNode  cache,"public UninitializedVarArgsCacheCallNode(CallArgumentsNode args, SourceSection callSrc) {",public UninitializedVarArgsCacheCallNode(CallArgumentsNode args) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
2 pages view,"private void prepareTextLine(ZLTextPage page, ZLTextLineInfo info, int x, int y) {","private void prepareTextLine(ZLTextPage page, ZLTextLineInfo info, int y) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
#4330,public static boolean isValueBlank(String str) { int strLen; if (str == null || (strLen = str.length()) == 0) { return true; } for (int i = 0; i < strLen; i++) { if (!Character.isWhitespace(str.charAt(i))) { return false; } } return true;,public static boolean isValueBlank(String value) { return value == null || value.trim().isEmpty();,KEEP KEEP KEEP KEEP REP KEEP ADD ADD REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Implement Truffle hosted inlining phase for HotSpot and SVM.,public HighTier createHighTier(OptionValues options) {,public PhaseSuite<HighTierContext> createHighTier(OptionValues options) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Fix lookup of common class loader when creating proxies at image build time,"private static ClassLoader getCommonClassLoaderOrFail(ClassLoader loader, Class<?>... intfs) { ClassLoader commonLoader = null;",private static ClassLoader getCommonClassLoader(Class<?>... intfs) { ClassLoader classLoader = null;,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP REP KEEP KEEP,Add Parameter
2011.06.10 (1.45j6),"ImageStatistics setHistogram(ImagePlus imp, boolean entireStack) {","ImageStatistics setHistogram(ImagePlus imp, boolean useStackMinAndMax) {",KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
SONARJAVA-3493 Fix missing declared exceptions when deserializing,public void setFileContext(@Nullable SymbolicExecutionVisitor sev) {,"public void setFileContext(@Nullable SymbolicExecutionVisitor sev,@Nullable Sema semanticModel) {",KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
refactor: Rename accessibilityRequirements to wheelchairAccessibility in GeneralizedCostParameters.,public WheelchairAccessibilityFeature wheelchairAccessibility() { return wheelchairAccessibility;,public WheelchairAccessibilityPreferences accessibilityRequirements() { return accessibilityRequest;,KEEP REP REP KEEP KEEP REP,Change Return Type
Fix DataResultViewerTable lazy node creation bugs,"private static Object[][] getRowValues(Node node, int maxRows) { Object[][] rowValues = new Object[Math.min(maxRows, node.getChildren().getNodesCount())][]; int rowCount = 0; for (Node child : node.getChildren().getNodes()) { if (rowCount >= maxRows) { break; } PropertySet[] propertySets = child.getPropertySets(); if (propertySets.length > 0)","private static Object[][] getRowValues(Node node, int rows) { int maxRows = Math.min(rows, node.getChildren().getNodesCount()); Object[][] objs = new Object[maxRows][]; for (int i = 0; i < maxRows; i++) { PropertySet[] props = node.getChildren().getNodeAt(i).getPropertySets(); if (props.length == 0) ",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP ADD REP REP REP REP KEEP REP REP REP REP REP REP REP REP REP REP REP KEEP ADD ADD KEEP REP KEEP REP KEEP REP REP KEEP,Rename Parameter
Adding IndexLoadingConfigMetadata and use it to switch on loading inverted index.,"public static IndexSegment loadSegment(File indexDir, ReadMode readMode, IndexLoadingConfigMetadata indexLoadingConfigMetadata) throws Exception { return Loaders.IndexSegment.load(indexDir, readMode, indexLoadingConfigMetadata);","public static IndexSegment loadHeap(File indexDir) throws Exception { return Loaders.IndexSegment.load(indexDir, ReadMode.heap);",KEEP KEEP KEEP ADD ADD ADD ADD REP REP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Deprecate non-Handle trigger methods,private static MethodSpec generateDeprecatedStateSelfTriggerMethod(,private static MethodSpec generateStateSelfTriggerMethod(,KEEP KEEP KEEP REP,Rename Method
Pre-calculate transfers using `transferRequests`,"public DirectTransferGenerator (double radiusByDurationInSeconds, List<RoutingRequest> transferRequests) {",public DirectTransferGenerator (double radiusByDurationInSeconds) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
added cumulative metric preconditions check for initial values,"protected void readInitialValues() throws ParserConfigurationException, SAXException, IOException {","protected void readDefaultsValues() throws ParserConfigurationException, SAXException, IOException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
grr... cleaning up...,"private Stream<? extends K> parseBubble(Module module, Bubble b) { ParseCache cache = loadCache(gen.getConfigGrammar(module));","private Stream<? extends K> parseBubble(Module configParserModule, Bubble b) { ParseCache cache = loadCache(configParserModule);",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
GenericMath and vector changes,public static int length(int... vec) { return (int) Math.sqrt(lengthSquared(vec));,public static int lengthI(int... values) { return (int) Math.sqrt(lengthSquaredI(values));,KEEP KEEP KEEP REP REP KEEP KEEP KEEP REP,Rename Parameter
Make json tags for BikeRentalServiceDirectoryUrl configureable,BikeRentalServiceDirectoryFetcherParameters parameters ) {,public static List<GraphUpdater> createUpdatersFromEndpoint(URI url) {,REP REP REP DEL DEL KEEP,Rename Parameter
Support coerce for @NamedVariant,"private boolean processImplicitNamedParam(final MethodNode mNode, final Parameter mapParam, final ArgumentListExpression args, final List<String> propNames, final Parameter fromParam, boolean coerce) {","private boolean processImplicitNamedParam(final MethodNode mNode, final Parameter mapParam, final ArgumentListExpression args, final List<String> propNames, final Parameter fromParam) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
don't request codenvy user credentials in time of downloading or installing artifacts,"protected Request createRequest(String artifactName, String version) {","protected Request initRequest(String artifactName, String version) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
generics,"protected Link<Object> newPagingNavigationLink(String id, IPageable pageable, int pageIndex)","protected Link< ? > newPagingNavigationLink(String id, IPageable pageable, int pageIndex)",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
[TE] anomaly detector interface change and implementation for rule-based detection (#4176),"public DetectionResult runDetection(Interval window, String metricUrn) {","public List<MergedAnomalyResultDTO> runDetection(Interval window, String metricUrn) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
UP-2372 Add data submission support,"public Map<String, Map<String, String>> getCollectedData();","public Map<String, Properties> getCollectedData();",KEEP KEEP ADD REP KEEP,Change Return Type
change parameter name,"public void saveTotalVotePowerWeight(long totalEnergyWeight) { this.put(DynamicResourceProperties.TOTAL_VOTE_POWER_WEIGHT,","public void saveTotalNewVotePowerWeight(long totalEnergyWeight) { this.put(DynamicResourceProperties.TOTAL_NEW_VOTE_POWER_WEIGHT,",KEEP KEEP REP KEEP KEEP REP,Rename Method
TruffleString: expose error details in TruffleString.NumberFormatException,"private static void checkEmptyStr(AbstractTruffleString a, BranchProfile errorProfile) throws TruffleString.NumberFormatException { if (a.isEmpty()) {","private static void checkEmptyStr(AbstractTruffleString string, BranchProfile errorProfile) throws TruffleString.NumberFormatException { if (string.isEmpty()) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
[TE] add a thread pool to run preview tasks (#4405),public YamlResource(DetectionPreviewConfiguration previewConfig) {,public YamlResource() {,KEEP ADD REP KEEP,Add Parameter
model loader #1383: any java field that conflicts with a method or equals/string/hash is loaded with a \f prefix,"private void addValue(ClassOrInterface klass, String ceylonName, FieldMirror fieldMirror, boolean isCeylon) {","private void addValue(ClassOrInterface klass, FieldMirror fieldMirror, boolean isCeylon) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
3599: Enable number 7 test case.,"public void testEmbeddedModule() { Path casePath = Paths.get(System.getProperty(""java.io.tmpdir""), ""testEmbeddedModule""); createCase(casePath);",public void disabled_TestEmbeddedModule() {,KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD,Rename Method
smooth scrolling,"protected void scrollTo(int viewPage, int shift) {",protected void scrollTo(int shift) {,KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
Allow a BugInstance to be added to a collection WITHOUT updating,"public boolean add(BugInstance bugInstance, boolean updateActiveTime) {",public boolean add(BugInstance bugInstance) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Create StreetSpatialIndex class,"Scope scope,","boolean destructive,",REP REP,Rename Parameter
Bug fixes for user-defined file types,"public static <T> boolean extractResourceToUserConfigDir(final Class<T> resourceClass, final String resourceFileName, boolean overWrite) throws IOException { Path resourceFilePath = Paths.get(getUserConfigDirectory(), resourceFileName); final File resourceFile = resourceFilePath.toFile(); if (resourceFile.exists() && !overWrite) {","public static <T> boolean extractResourceToUserConfigDir(final Class<T> resourceClass, final String resourceFile, boolean overWrite) throws IOException { final File userDir = new File(getUserConfigDirectory()); final File resourceFileF = new File(userDir + File.separator + resourceFile); if (resourceFileF.exists() && !overWrite) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP REP DEL KEEP REP REP KEEP KEEP REP KEEP REP DEL DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP,Rename Parameter
"WriteTable: use RConnection instead of InputStream, fix double formatting + tests","private static void executeDataFrame(RConnection con, RVector x, int nr, int nc, Object rnames, String csep, String ceol, String cna, char cdec, boolean qmethod, boolean[] quoteCol,","private static void executeDataFrame(OutputStream os, RVector x, int nr, int nc, Object rnames, String csep, String ceol, String cna, char cdec, boolean qmethod, boolean[] quoteCol,",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Allow setting the VehicleParking entrance name using the access nodes,"private List<VertexAndName> processVehicleParkingArea(Area area, Envelope envelope) {","private List<OsmVertex> processVehicleParkingArea(Area area, Envelope envelope) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"Some changes to verbose handling because the compile, import and new tools now uses the standard ceylon tool base class, so it inherits the default ""verbose"" option implementation (ceylon/ceylon-runtime#26)",public void setVerbose(String verbose) { super.setVerbose(verbose);,public void setVerbose(String verboseFlags) { this.verbose = true; this.verboseFlags = verboseFlags;,KEEP KEEP KEEP REP KEEP REP DEL DEL DEL DEL DEL,Rename Parameter
fix names attribute printing for language objects,protected Object attributes(RAbstractContainer container) {,protected RList attributes(RAbstractContainer container) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Launcher: close the context on the same thread as where it was (mostly) executed,"public static int readEvalPrint(Context context, ConsoleHandler consoleHandler, REngineExecutor rExecutor) { return readEvalPrint(context, consoleHandler, null, rExecutor);","public static int readEvalPrint(Context context, ConsoleHandler consoleHandler, boolean useExecutor) { return readEvalPrint(context, consoleHandler, null, useExecutor);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
"Improve find-issues performance by adding boolean field ""hasEvaluations"" to DbIssue. Seems that JDO doesn't store ANYTHING in DbIssue referring to its DbEvaluations, so even issue.getEvaluations().isEmpty() results in a query which takes at best 15ms. As there is no eager loading (JOIN) functionality in App Engine, this may be the best we can optimize for the case of an issue with zero evaluations.",public Set<DbEvaluation> getEvaluations() {,public SortedSet<DbEvaluation> getEvaluations() {,KEEP REP KEEP KEEP,Change Return Type
"Added interesting items in refresh, fixed tags refreshing, sort some of the keys",List<String> getSetNames() { List<String> names = new ArrayList<>(hashSetHitsMap.keySet()); Collections.sort(names); return names;,Set<String> getSetNames() { return hashSetHitsMap.keySet();,REP KEEP KEEP ADD ADD ADD ADD ADD ADD KEEP REP,Change Return Type
Push up-to-date generated samples,public Client call123testSpecialTags(@Valid @NotNull Client client) { Client result = null;  return result;,public Response call123testSpecialTags(@Valid @NotNull Client client) { return Response.ok().entity("magic!").build();,KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD KEEP REP,Change Return Type
Actively check cluster changes if there is no callback for a long time (#3885),"LiveInstanceChangeHandler liveInstanceChangeHandler, TableQueryQuotaManager tableQueryQuotaManager) {","LiveInstancesChangeListenerImpl liveInstanceChangeListener, TableQueryQuotaManager tableQueryQuotaManager) {",REP REP KEEP KEEP KEEP,Rename Parameter
Codacy updates and make copy of list before using it to make JIRA 1027,"public EventRootNode(Collection<Long> eventIds, FilteredEventsModel filteredEvents) { super(Children.create(new EventNodeChildFactory(eventIds, filteredEvents), true), Lookups.singleton(eventIds));","public EventRootNode(Collection<Long> fileIds, FilteredEventsModel filteredEvents) { super(Children.create(new EventNodeChildFactory(fileIds, filteredEvents), true), Lookups.singleton(fileIds));",KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
Use DSL for generic inline cache.,private static InlineCacheNode createRepCache(int level) {,"private static InlineCacheNode<Frame, String> createRepCache(int level) {",KEEP KEEP REP DEL KEEP KEEP KEEP,Change Return Type
more minor fixes to ocaml backend,OcamlOptions options) {,"public DefinitionToOcaml(KExceptionManager kem, FileUtil files, GlobalOptions globalOptions, KompileOptions kompileOptions) {",REP REP DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
2014.07.04 (1.49d9),private String d2s(double n) {,private int d(double n) {,KEEP REP REP KEEP KEEP,Change Return Type
Fixed #298,"protected boolean visitFacets(VisitContext context, VisitCallback callback, boolean visitNodes) { if(visitNodes) { setRowKey(null); }","protected boolean visitFacets(VisitContext context, VisitCallback callback) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD ADD ADD,Add Parameter
applying patch to StringFromFile and documentation for it from Sebastian Bazley,private void openFile(){ fileName = ((CompoundVariable)values[0]).execute();,private void openFile( String fileName ){,KEEP KEEP REP REP REP REP,Remove Parameter
Generates reports for all orgId,"private Map<String, String> putSpecificParameters(Map<String, String> context, AbstractFrequencyConfiguration frequency) throws ClassNotFoundException, InstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException {","String recipient, AbstractFrequencyConfiguration frequency) throws ClassNotFoundException, InstantiationException, IllegalAccessException, InvocationTargetException, NoSuchMethodException {",ADD ADD ADD ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Changed the way of custom layout feature of selectOneRadio.,"protected void encodeOptionOutput(FacesContext context, boolean selected, boolean disabled) throws IOException {","protected void encodeOptionOutput(FacesContext context, String clientId, boolean selected, boolean disabled) throws IOException {",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Remove context reference from audio adapter,"public AudioBrowserAdapter(int type, IEventsHandler eventsHandler, boolean sections) {","public AudioBrowserAdapter(Activity context, int type, IEventsHandler eventsHandler, boolean sections) { mContext = context;",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL,Remove Parameter
added NA checks to vector data libraries,"public static void commitWriteIterator(RAbstractContainer receiver, SeqWriteIterator iterator, @Shared(""inputNACheck"") @Cached() InputNACheck na) {","public static void commitWriteIterator(RAbstractContainer receiver, SeqWriteIterator iterator, @Shared(""inputNACheck"") @Cached InputNACheck naCheck) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP,Rename Parameter
VfsAccessBean should always return wrapped resources.,public List<CmsJspResourceWrapper> readFilesInFolder(String resourcePath) throws CmsException {,public List<CmsResource> readFilesInFolder(String resourcePath) throws CmsException {,KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add support for @<prop-values-file> use in macro-options,"private MacroOptionOrigin(OptionUtils.MacroOptionKind kind, String name, URI optionDirectory) {","private MacroOptionOrigin(OptionUtils.MacroOptionKind kind, String name) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fixed Event return type parsing,static TypeName getReturnType(PsiClass eventClass) {,static TypeName getReturnType(PsiClass psiClass) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Make UnionResults take any number of xml files and sent the unioned result to standard output,"static public SortedBugCollection union (SortedBugCollection origCollection, SortedBugCollection newCollection) {",public SortedBugCollection execute() {,ADD KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
address reviewrs comments and add more tests,"private static Stream<Symbol.MethodSymbol> getAllMembers(Symbol.TypeSymbol symbol, boolean isEnclosed) {",private static Stream<Symbol.MethodSymbol> getAllMembers(Symbol.TypeSymbol symbol) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
ReplaceMessages: check for "example" and "original_code" goog.getMsg() options,"private static MsgOptions getOptions(JsMessage message, @Nullable Node optionsNode) throws MalformedException {",private static MsgOptions getOptions(@Nullable Node optionsNode) throws MalformedException {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
HADOOP-10842. CryptoExtension generateEncryptedKey method should receive the key name. (asuresh via tucu),public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName),public EncryptedKeyVersion generateEncryptedKey(KeyVersion encryptionKey),KEEP KEEP REP REP,Rename Parameter
simulate rsvps after meetup.com retired the feed (#8180),protected Consumer<RSVP> createConsumer() {,protected MessageHandler.Whole<String> getMessageHandler() {,KEEP REP REP KEEP,Change Return Type
"Rework filtering for Top 100 sessions, factories and referrers",private static MetricFilter getFilter(ScriptType scriptType) {,private static MetricParameter.ENTITY_TYPES getEntity(ScriptType scriptType) {,KEEP KEEP REP REP KEEP KEEP,Change Return Type
Refactored the properties to support a more generic approach for lists and maps in the future added some more use cases and deprecated the whole thing so people know this is an experimental API...,public K set(T value) {,public void set(T value) {,KEEP REP KEEP KEEP KEEP,Change Return Type
cosmetics,private static FacesContext unwrapFacesContext(FacesContext facesContext) {,private static FacesContext getWrappedFacesContextImpl(FacesContext facesContext) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
support property notation for static interface accessors,"private void fillStaticPropertyIndex() { BiConsumer<String, MetaProperty> indexStaticProperty = (name, prop) -> { if (prop instanceof CachedField) { CachedField field = (CachedField) prop; if (!field.isStatic()) { prop = null; } } else if (prop instanceof MetaBeanProperty) { prop = establishStaticMetaProperty(prop); } else if (prop instanceof MultipleSetterProperty) { prop = ((MultipleSetterProperty) prop).createStaticVersion();","private void makeStaticPropertyIndex() { LinkedHashMap<String, MetaProperty> propertyMap = classPropertyIndex.computeIfAbsent(theCachedClass, k -> new LinkedHashMap<>()); for (Map.Entry<String, MetaProperty> entry : propertyMap.entrySet()) { MetaProperty mp = entry.getValue(); if (mp instanceof CachedField) { CachedField mfp = (CachedField) mp; if (!mfp.isStatic()) continue; } else if (mp instanceof MetaBeanProperty) { MetaProperty result = establishStaticMetaProperty(mp); if (result == null) continue; else { mp = result; } } else if (mp instanceof MultipleSetterProperty) { MultipleSetterProperty msp = (MultipleSetterProperty) mp; mp = msp.createStaticVersion();",KEEP KEEP REP KEEP REP KEEP REP KEEP REP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP ADD ADD ADD REP REP KEEP ADD KEEP KEEP REP KEEP KEEP KEEP REP DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL KEEP KEEP REP KEEP KEEP KEEP REP DEL KEEP REP REP DEL DEL DEL,Rename Method
Fix syntax error in test file,"private static String getValueToEval( Measure.Level alertLevel, Color foo ) { ",private static String getValueToEval( List<String> strings ) { ,KEEP KEEP KEEP KEEP ADD ADD REP REP KEEP KEEP,Add Parameter
HDFS-7575. Upgrade should generate a unique storage ID for each volume. (Contributed by Arpit Agarwal),"public synchronized boolean createStorageID( StorageDirectory sd, boolean regenerateStorageIds) { final String oldStorageID = sd.getStorageUuid(); if (oldStorageID == null || regenerateStorageIds) {",public synchronized void createStorageID(StorageDirectory sd) { if (sd.getStorageUuid() == null) {,KEEP KEEP ADD ADD ADD REP REP REP KEEP ADD ADD ADD ADD ADD KEEP REP KEEP ADD ADD REP KEEP,Change Return Type
Fixed #5023,"protected void encodeTab(FacesContext context, Tab tab, boolean active, boolean dynamic, boolean rtl) throws IOException {","protected void encodeTab(FacesContext context, Tab tab, boolean active, boolean dynamic) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
more optimizations to make binary parsing faster,public static K parse(byte[] in) { return parse(ByteBuffer.wrap(in)); } public static K parse(ByteBuffer data) {,public static K parse(byte[] s) { ByteArrayInputStream in = new ByteArrayInputStream(s); return parse(in); },KEEP KEEP KEEP KEEP REP KEEP ADD REP REP REP REP REP REP REP REP,Rename Parameter
"EUCA-12287 -- Fixed a couple of issues.  The number of failure signals being waited for was wrong, and sometimes signals were in an inconsistant state on update.  Changed both terminate and signal update db fields in rolling_update_state to remove redundancies.  Changed the  signal handling for updates to be similar to that of create, only looking for explicit signals from the instances already being waited for.  In addition, UPDATE_IN_PROGRESS was not being set on resources during update rollback.",public String getObsoleteInstancesJson() { return obsoleteInstancesJson; } public void setObsoleteInstancesJson(String obsoleteInstancesJson) { this.obsoleteInstancesJson = obsoleteInstancesJson; },public String getObsoleteInstanceIds() { return obsoleteInstanceIds; },KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Rename Method
minor refactor: remove style warnings,"public void visitVarInsn(int opcode, int varIndex) { super.visitVarInsn(opcode, varIndex);","public void visitVarInsn(int opcode, int var) { super.visitVarInsn(opcode, var);",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
bp: Remove Redundant Loading of RepositoryData during Restore,public IndexId index() {,public String index() {,KEEP REP KEEP KEEP,Change Return Type
"Android/{InternalGPS,NonGPSSensors}: move callbacks to class SensorListener","InternalGPS(Context context, SensorListener listener) { this.listener = listener;","InternalGPS(Context context, int _index) { index = _index;",KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
refs #100859 Fix synchronization between slice comparators during node requests,private void doPreload(SyncTreeEntry srt) throws SyncException {,private boolean doPreload(SyncTreeEntry srt) throws SyncException { Boolean ret = false;,KEEP REP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL,Change Return Type
refactor: Use delegation not inheritance for AccessStopArrivalState,"AccessStopArrivalState(int time, RaptorTransfer accessPath, DefaultStopArrivalState<T> other) { this.delegate = other;","AccessStopArrivalState(int time, RaptorTransfer accessPath) { setAccessTime(time, accessPath); }",KEEP KEEP KEEP ADD ADD REP KEEP REP REP REP,Add Parameter
Pass hypervisor from NC to CLC.,"private ClusterAllocator( final Allocation allocInfo, final ServiceConfiguration clusterConfig ) {",private ClusterAllocator( final Allocation allocInfo ) {,KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP KEEP,Add Parameter
Fix encrypted file path in Segment Fetcher (#5854),"public void encrypt(File origFile, File encFile) {","public void encrypt(File decryptedFile, File encryptedFile) {",KEEP KEEP KEEP REP KEEP REP KEEP,Rename Parameter
Renaming boarding to accessibility,"WheelchairAccessibility wheelchair,","WheelchairBoarding wheelchairBoarding,",REP REP,Rename Parameter
SONARJAVA-2356 Handle Java9 new annotations arguments (#1531),private static AnnotationTree deprecatedAnnotation(ClassTree classTree) { return deprecatedAnnotation(classTree.modifiers().annotations());,private static boolean hasDeprecatedAnnotation(ClassTree classTree) { return hasDeprecatedAnnotation(classTree.modifiers().annotations());,KEEP KEEP REP REP KEEP KEEP KEEP REP,Change Return Type
Make alias names public,public static HTTPSamplerBase newInstance(String alias) { if (alias.equals(HTTP_SAMPLER_JAVA)) {,public static HTTPSamplerBase newInstance(String classname) { if (classname.equals(HTTP_SAMPLER)) {,KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP,Rename Parameter
Fixes EUCA-11034 in 4.2 code. Cherry-picked fix from maint-4.1 branch.,private List<String> prepareInstanceEvacuations( final String sourceHost ) {,private void prepareInstanceEvacuations( final String sourceHost ) {,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Removes usage of SemanticModel in MethodInvocationMatcher,public boolean matches(NewClassTree newClassTree) {,"public boolean matches(NewClassTree newClassTree, SemanticModel semanticModel) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
change some parameter in rpc api,public String ethGetBlockTransactionCountByNumber(String blockNumOrTag) throws Exception { List<Transaction> list = wallet.getTransactionsByJsonBlockId(blockNumOrTag);,public String ethGetBlockTransactionCountByNumber(String bnOrId) throws Exception { List<Transaction> list = wallet.getTransactionsByJsonBlockId(bnOrId);,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
SuggestionField.showSuggestions method invocation is ignored #2485,"protected void showSuggestions(JsonArray suggestions, boolean ignoreFocus) {",protected void showSuggestions(JsonArray suggestions) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
rework AST transformation implementation to put relevant info into a struct and pass this around instead,"private static void addSetterIfNeeded(DelegateDescription delegate, PropertyNode prop, String name, boolean allNames) {","private static void addSetterIfNeeded(FieldNode fieldNode, ClassNode owner, PropertyNode prop, String name, List<String> includes, List<String> excludes, boolean allNames) {",KEEP KEEP KEEP REP REP DEL DEL KEEP KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP,Add Parameter
PlaybackService: add resume to video from notification,public boolean handleVout() { if (!canSwitchToVideo()) return false;,public void handleVout() { if (mMediaPlayer.getVideoTracksCount() <= 0 || !hasCurrentMedia() || !mVideoEnabled) return;,KEEP REP KEEP KEEP KEEP REP REP REP DEL DEL DEL DEL DEL,Change Return Type
Use PlaybackService to access MediaPlayer and MediaList,public long getTime() { return mMediaPlayer.getTime();,public int getTime() { return (int) MediaPlayer().getTime();,KEEP REP KEEP KEEP KEEP REP DEL,Change Return Type
Add RPromise field to RCaller,"private static VirtualEvalFrame wrapPromiseFrame(VirtualFrame frame, MaterializedFrame promiseFrame, RPromise promise, Object callerFrameObject) { assert promise != null;","private static VirtualEvalFrame wrapPromiseFrame(VirtualFrame frame, MaterializedFrame promiseFrame, Object callerFrameObject) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP ADD ADD ADD ADD,Add Parameter
Updated logic in default action for data result nodes.,private AbstractAction openChild(final AbstractNode dataModelNode) { final Node currentSelectionInDirectoryTree = sourceEm.getSelectedNodes()[0];,private AbstractAction openChild(AbstractNode node) { final Node[] parentFilterNodes = sourceEm.getSelectedNodes(); final Node parentFilterNode = parentFilterNodes[0]; final Node originalNode = node;,KEEP KEEP ADD REP REP KEEP KEEP DEL DEL DEL DEL DEL KEEP REP KEEP REP DEL DEL DEL DEL DEL,Rename Parameter
UP-2950 Adding support and configuration for Spring Security annotation-based permission expressions under a pre-authentication setup.  This commit also includes adding support for SpringMVC's ContentNegotiatingViewResolver.,"public JsonEntityBean findEntity(HttpServletRequest request,","public ModelAndView findEntity(HttpServletRequest request,",KEEP REP KEEP KEEP,Change Return Type
datasource popup and WIP wiring of selected values,"public GroupKey(DrawableAttribute<T> attr, T val, DataSource dataSource) {","public GroupKey(DrawableAttribute<T> attr, T val) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
HashMap Duplicate key error might occur during db autoupdate if several scripts have the same name #1122 (#1917),"protected Map<String, ScriptResource> findResourcesByUrlPattern(ResourcePatternResolver resourceResolver, String urlPattern, String rootPath) throws IOException {","protected Map<String, ScriptResource> findResourcesByUrlPattern(ResourcePatternResolver resourceResolver, String urlPattern) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
UnclosedResourcesCheck FP on try-with-resources (#1172),"public Map<SymbolicValue, ObjectConstraint<ObjectConstraint.Status>> getValuesWithConstraints(final Object state) { final Map<SymbolicValue, ObjectConstraint<ObjectConstraint.Status>> result = new HashMap<>();","public Map<SymbolicValue, ObjectConstraint> getValuesWithConstraints(final Object state) { final Map<SymbolicValue, ObjectConstraint> result = new HashMap<>();",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Fix serialization of command ratios in cassandra-stress/stressd,"Map<String, Double> ratios()","List<Pair<String, Double>> ratios()",REP REP KEEP,Change Return Type
Improve error handling in IngestJobLauncher,"private void saveJobSettings(IngestModuleFactory factory, IngestModuleIngestJobSettings settings) {","private void saveJobSettings(IngestModuleFactory moduleFactory, IngestModuleIngestJobSettings settings) { File settingsFile = new File(getModuleSettingsFilePath(moduleFactory));",KEEP KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Parameter
[UP-4149] Update the create tenant workflow to send a custom email instead of using the reset-password email.,public void setLoginPortletFolderName(String loginPortletFolderName) { this.loginPortletFolderName = loginPortletFolderName; },public void setPortalEmailAddress(String portalEmailAddress) { this.portalEmailAddress = portalEmailAddress; },KEEP KEEP REP REP KEEP REP KEEP REP KEEP,Rename Parameter
Updates from troubleshooting the new Layout Import/Export on 2009/04/09 and 2009/04/10,public void importLayout(org.dom4j.Element layout) {,public void importLayout(org.dom4j.Element e) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
"Do the comparison in the test case, so failures are identified better",static String getPropertyVersion(){ return SaveService.propertiesVersion;,static boolean checkPropertyVersion(){ return SaveService.PROPVERSION.equals(SaveService.propertiesVersion);,KEEP REP REP KEEP REP,Change Return Type
Enhance confirmation message on favorite add.,"protected String getMessage(String key, String defaultMessage, Locale locale) { try { return messageSource.getMessage(key, new Object[] {}, defaultMessage, locale); } catch (Exception e) { log.error(""Error resolving message with key {}."", key, e); return defaultMessage; } } protected String getMessage(String key, String argument, String defaultMessage, Locale locale) { try { return messageSource.getMessage(key, new String[] {argument}, defaultMessage, locale); } catch (Exception e) { log.error(""Error resolving message with key {}."", key, e); return defaultMessage; } }","protected String getMessage(String key, String defaultName, Locale locale) { return messageSource.getMessage(key, new Object[] {}, defaultName, locale); }",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP,Rename Parameter
added new field to IterationEvents and fixING how controllers work,protected void fireIterEvents(TestElement current),protected void fireIterEvents(),KEEP KEEP ADD REP,Add Parameter
Add zookeeper reconnect metric to the Pinot controller,protected ControllerMeter[] getMeters() { return ControllerMeter.values();,protected Meter[] getMeters() { return new Meter[0];,KEEP REP KEEP KEEP KEEP REP DEL,Change Return Type
Add additional metrics throughout Alluxio system,private static String getQualifiedMetricNameInternal(String ... components) {,private static String getQualifiedMetricNameInternal(String name) {,KEEP KEEP KEEP KEEP ADD REP KEEP,Rename Parameter
Added implementation to ScalpelCarverIngestModule.process(),public static ScalpelCarverIngestModule getDefault() {,public static IngestModuleAbstractFile getDefault() {,KEEP KEEP REP KEEP KEEP,Change Return Type
IAM expiration property for server EUCA-13285,"public static VerifiedCertInfo verifyCertificate(final String certBody, final String pk, final String certChain) throws AuthException{ final VerifiedCertInfo certInfo = verifyCertificate( certBody, certChain );","public static void verifyCertificate(final String certBody, final String pk, final String certChain)",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
WICKET-5124 Improve ResourceReference#getDependencies() API,public List<HeaderItem> getDependencies(),public Iterable<? extends HeaderItem> getDependencies(),KEEP REP DEL DEL KEEP,Change Return Type
#4401 Reuse a ThreadLocal byte[] when reading String elements from the variable length value reader. (#4432),"public static String decodeUtf8(byte[] bytes, int startIndex, int length) {","public static String decodeUtf8(byte[] bytes, int startIndex, int endIndex) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
2647 results table converted from html to ETable now resizes correctly,private void setArtifactContents(List<ResultsTableArtifact> artifactList) {,private void setArtifactContentStrings(List<ArtifactStringContent> artifactStrings) {,KEEP KEEP REP REP KEEP,Rename Parameter
#6916,"public static String build(FacesContext context, UIComponent component, ValueExpression ve, Lazy<Object> value, boolean cache, boolean stream) {","public static String build(FacesContext context, UIComponent component, ValueExpression ve, boolean cache, boolean stream) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
ShadowWrangler honors @Implementation(minSdk/maxSdk).,"private Method findShadowMethodInternal(Class<?> shadowClass, String methodName, Class<?>[] paramClasses) throws ClassNotFoundException {","private Method getMethod(Class<?> shadowClass, String methodName, Class<?>[] paramClasses) throws ClassNotFoundException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
use typesafe collections,public Class<?> getColumnClass( int column ) {,public Class getColumnClass( int column ) {,KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
ZLTextParagraphCursorCache is not static,"ZLTextParagraphCursor(ZLTextView view, ZLTextModel model, int index) { View = view;","private ZLTextParagraphCursor(ZLTextModel model, int index) {",ADD REP REP KEEP KEEP KEEP KEEP ADD ADD ADD,Add Parameter
SONARJAVA-1272 Restore complexity api breaking change and deprecate some methods,"public int getComplexity(Tree tree) { return getComplexityNodes(tree).size(); } @Override public int getMethodComplexity(ClassTree enclosingClass, MethodTree methodTree) { return getMethodComplexityNodes(enclosingClass, methodTree).size(); } @Override public List<Tree> getComplexityNodes(Tree tree) {",public List<Tree> getComplexity(Tree tree) {,KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP KEEP KEEP,Change Return Type
Transitively mark all streams that might have been created from a,"public void analyzeMethod(ClassContext classContext, Method method, ResourceTracker<Stream> resourceTracker_)","public void analyzeMethod(ClassContext classContext, Method method)",KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Mark when MountState needs remount,private boolean mountComponentIfNeeded() { if (mLithoView.isMountStateDirty() || mLithoView.mountStateNeedsRemount()) {,private boolean mountComponentIfDirty() { if (mLithoView.isMountStateDirty()) {,KEEP KEEP REP KEEP KEEP ADD ADD REP KEEP,Rename Method
"Refactor (MetricTableRow + FunnelHeatMapRow)->MetricDataRow.java, extract common js function renderTimeCell to thirdeye.js",public List<MetricDataRow> getRows() {,public List<MetricTableRow> getRows() {,KEEP REP KEEP KEEP,Change Return Type
perf(db): optimize the getDeletedAssets function,"public void deleteAccount(byte[] key) { Map<byte[], byte[]> assets = getDeletedAssets(key);","public void deleteAccount(SnapshotRoot accountSnapshotRoot, byte[] key) { Map<byte[], byte[]> assets = getDeletedAssets(accountSnapshotRoot, key);",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP DEL,Remove Parameter
Improved EL access to image bean from resource wrapper.,public CmsJspResourceWrapper getResource() { return m_resource; },protected CmsResource getResource() {,REP REP KEEP KEEP ADD ADD ADD,Change Return Type
Cassandra keyspace and table EUCA-13279,"final SessionUsage usage, final String sessionKey,  final ThrowingFunction<? super Session,? extends R, E> callbackFunction ) throws E { return callbackFunction.apply( getSession( usage ) ); }; private static Session getSession( final SessionUsage usage ) {","public static <R,E extends Throwable> R doWithSession(",ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP ADD ADD REP REP REP REP REP,Add Parameter
simplification in UpdateField,private Object coerceList(Object vector) { if (vector instanceof RAbstractVector) {,"private Object coerceList(Object object, Object vector) { if (object instanceof RAbstractVector) {",KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP REP KEEP KEEP KEEP,Remove Parameter
MediaWrapper: don't override good Meta with null,"private static String getMetaId(Media media, String defaultMeta, int id, boolean trim) {","private static String getMetaId(Media media, int id, boolean trim) {",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
WICKET-5041 DefaultCssAutoCompleteTextField should have Constructor (String id),"public DefaultCssAutoCompleteTextField(final String id, final IModel<T> model)","public DefaultCssAutoCompleteTextField(final String string, final IModel<T> model)",KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Abstract graph consumer improvements,protected final void setRevertKeysAndValues(boolean invertKeysAndValues) { this.invertKeysAndValues = invertKeysAndValues;,protected final void setRevertKeysAndValues(boolean revertsKeysAndValues) { this.revertsKeysAndValues = revertsKeysAndValues;,KEEP KEEP KEEP KEEP REP KEEP REP KEEP REP,Rename Parameter
Add "Arab" script to support correct layout direction with RTL pseudo locale,public static String addLikelySubtags(String languageTag) {,public static String addLikelySubtags(String locale) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Real specification of IUserLayoutDB and a real reference implementation.,"public Document getUserLayout(String userName,String media); public void setUserLayout(String userName,String media,Document layoutXML);","public String getUserLayout(String userName,String media); public void setUserLayout(String userName,String media,String layoutXML);",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
language filter (in progress),"public List<String> languageCodes() { final TreeSet<String> languageSet = new TreeSet<String>(); for (INetworkLink link : myLinks) { languageSet.add(link.getLanguage()); } return new ArrayList<String>(languageSet); } private ZLStringOption myActiveLanguageCodesOption; private ZLStringOption activeLanguageCodesOption() { if (myActiveLanguageCodesOption == null) { myActiveLanguageCodesOption = new ZLStringOption( ""Options"", ""ActiveLanguages"", commaSeparatedString(ZLibrary.Instance().defaultLanguageCodes()) ); } return myActiveLanguageCodesOption; } public Collection<String> activeLanguageCodes() { return Arrays.asList(activeLanguageCodesOption().getValue().split("","")); } public void setActiveLanguageCodes(Collection<String> codes) { activeLanguageCodesOption().setValue(commaSeparatedString(codes)); } private String commaSeparatedString(Collection<String> codes) { final StringBuilder builder = new StringBuilder(); for (String code : codes) { builder.append(code); builder.append("",""); } if (builder.length() > 0) { builder.delete(builder.length() - 1, builder.length()); } return builder.toString(); } private List<INetworkLink> activeLinks() { final LinkedList<INetworkLink> filteredList = new LinkedList<INetworkLink>(); final Collection<String> codes = activeLanguageCodes(); synchronized (myLinks) { for (INetworkLink link : myLinks) { if (link instanceof ICustomNetworkLink || codes.contains(link.getLanguage())) { filteredList.add(link); } } } return filteredList; }",public List<String> languages() { final TreeSet<String> languageSet = new TreeSet<String>(); for (INetworkLink link : myLinks) { languageSet.add(link.getLanguage()); } return new ArrayList<String>(languageSet); }ename Method
HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (Lei (Eddy) Xu via Colin P.  McCabe),"public ReplicaHandler createTemporary(StorageType storageType,","public ReplicaInPipelineInterface createTemporary(StorageType storageType,",KEEP REP KEEP KEEP,Change Return Type
Clean up controller-table related metrics in ControllerPeriodicTask (#7557),"private void makeGauge(final String resource, final ValidationMetricName validationMetricName, final GaugeFactory<?> gaugeFactory, final long value) { final String fullGaugeName = makeGaugeName(resource, validationMetricName.getMetricName()); PinotMetricName metricName = makeMetricName(fullGaugeName); if (!_gaugeValues.containsKey(fullGaugeName)) { _gaugeValues.put(fullGaugeName, value); PinotMetricUtils.makeGauge(_metricsRegistry, metricName, gaugeFactory.buildGauge(fullGaugeName));","private void makeGauge(final String gaugeName, final PinotMetricName metricName, final GaugeFactory<?> gaugeFactory, final long value) { if (!_gaugeValues.containsKey(gaugeName)) { _gaugeValues.put(gaugeName, value); PinotMetricUtils.makeGauge(_metricsRegistry, metricName, gaugeFactory.buildGauge(gaugeName));",KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
Refactor Playlist ViewModel,public void update(PlayerState state) { if (state == null) return; mBinding.buttonPlay.setImageResource(state.getPlaying() ? R.drawable.ic_pause_w : R.drawable.ic_play_w);,@Override public void update() { if (mService == null || !mService.hasMedia()) return; mBinding.buttonPlay.setImageResource(mService.isPlaying() ? R.drawable.ic_pause_w : R.drawable.ic_play_w); final SharedPreferences mSettings= Settings.INSTANCE.getInstance(this);,DEL KEEP KEEP ADD REP KEEP KEEP REP KEEP REP DEL DEL KEEP REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL,Add Parameter
better text selection,"protected void moveSelectionCursorTo(ZLTextSelectionCursor cursor, int x, int y, boolean inMovement) { if (inMovement) { y -= ZLTextSelectionCursor.getHeight() / 2 + ZLTextSelectionCursor.getAccent() / 2; } else { y -= getTextStyleCollection().getBaseStyle().getFontSize() / 2; }","protected void moveSelectionCursorTo(ZLTextSelectionCursor cursor, int x, int y) { y -= ZLTextSelectionCursor.getHeight() / 2 + ZLTextSelectionCursor.getAccent() / 2;",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
#7999 update IT (#8045),public void testFilterSortEdit(String xhtml) {,public void testFilterSortEdit(Page page) {,KEEP KEEP REP REP KEEP,Rename Parameter
added nokia asha theme to the designer,"private void jRadioButtonMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) { setNativeTheme(""/android_holo_light.res"", true); }","private void icsNativeThemeActionPerformed(java.awt.event.ActionEvent evt) { setNativeTheme(""/android_holo_light.res"", true); }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
3597: 5th test for file type filter test.,"private void runIngestJob(List<Content> datasources, ArrayList<IngestModuleTemplate> templates, FilesSet filter) {","private void runIngestJob(List<Content> datasources, FilesSet filter) { FileTypeIdModuleFactory factory = new FileTypeIdModuleFactory(); IngestModuleIngestJobSettings settings = factory.getDefaultIngestJobSettings(); IngestModuleTemplate template = new IngestModuleTemplate(factory, settings); template.setEnabled(true); ArrayList<IngestModuleTemplate> templates = new ArrayList<>(); templates.add(template);",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Apply template generator to all email templates (#2033),"DefaultEmailResourceResolver resourceResolver,","@Named(""codenvy.email.logos"") Map<String, String> logos,",REP REP DEL DEL,Rename Parameter
Initial work on compound animations,"private ComponentAnimation replaceComponents(final Component current, final Component next, final Transition t, boolean wait, boolean dropEvents, Runnable onFinish, int growSpeed, int layoutAnimationSpeed, boolean addAnimtion) {","private void replaceComponents(final Component current, final Component next, final Transition t, boolean wait, boolean dropEvents, Runnable onFinish, int growSpeed, int layoutAnimationSpeed) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Change Return Type
Made TabbedPanel generic,public final List<T> getTabs(),public final List<? extends ITab> getTabs(),KEEP KEEP REP DEL DEL KEEP,Change Return Type
Added batching for multiple chunk meshes at once.,private ChunkMesh(Chunk chunk) { this.chunk = chunk;,private ChunkMesh(ChunkSnapshotModel chunkModel) { this.chunkModel = chunkModel; center = chunkModel.getCenter();,KEEP REP REP KEEP REP KEEP REP DEL DEL DEL,Rename Parameter
Android: Refactor MainPresenter.installWad,"public void installWAD(String path) { runOnThreadAndShowResult(R.string.import_in_progress, () -> { boolean success = WiiUtils.installWAD(path); int message = success ? R.string.wad_install_success : R.string.wad_install_failure; return mContext.getResources().getString(message); }); } private void runOnThreadAndShowResult(int progressMessage, Supplier<String> f)",public void installWAD(String file),KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
SONARJAVA-1202 SuppressWarning rule's behavior has to be changed from blacklist to whitelist,private List<String> getAllowedWarnings() { if (allowedWarnings != null) { return allowedWarnings;,private List<String> getForbiddenWarnings() { if (forbiddenWarnings != null) { return forbiddenWarnings;,KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Method
"SONARJAVA-1914 Fix order of evaluation for method invocations, constructors arguments and new array dim/initializers (#1052)","protected void openResource(SymbolicValue sv, Tree syntaxNode) {",protected void openResource(Tree syntaxNode) { SymbolicValue sv = programState.peekValue();,KEEP KEEP ADD ADD REP KEEP KEEP DEL DEL DEL DEL,Add Parameter
Fix layer parameters for test,public VectorTilesResource.LayerType type() { return VectorTilesResource.LayerType.VehicleParkingGroup;,public String type() { return "VehicleParking";,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Moved header footer inside table,"protected void encodeFacet(FacesContext context, DataTable table, UIComponent facet, String styleClass, String tag) throws IOException {","protected void encodeFacet(FacesContext context, DataTable table, UIComponent facet, String styleClass) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
"Added setRenderingHint() method to Graphics class to pass rendering hints to the native graphics.  Currently only one value is supported: Graphics.RENDERING_HINT_FAST.  And only iOS uses this when rendering images.  Since copying images to textures is expensive, we keep the last generated texture cached.  This works well if we are always rendering the image at the same size.  If we are constantly rendering the same image at different sizes, then we'll constantly be invalidating the which affects UX.","private void nativeDrawImageMutable(long peer, int alpha, int x, int y, int width, int height, int renderingHints) { nativeInstance.nativeDrawImageMutable(peer, alpha, x, y, width, height, renderingHints);","private void nativeDrawImageMutable(long peer, int alpha, int x, int y, int width, int height) { nativeInstance.nativeDrawImageMutable(peer, alpha, x, y, width, height);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Change the player UpdateAction.ADD to be part of WorldChangeMessage,"public WorldChangeMessage(World world, Transform playerTransform, SerializableMap data) { this(world.getName(), world.getUID(), playerTransform, data.serialize()); } public WorldChangeMessage(String worldName, UUID worldUUID, Transform playerTransform, byte[] compressedData) { super(compressedData); this.worldName = worldName; this.worldUUID = worldUUID; this.position = new Vector3(playerTransform.getPosition()); this.rotation = playerTransform.getRotation(); this.scale = playerTransform.getScale();","public WorldChangeMessage(World world, SerializableMap data) { this(world.getName(), world.getUID(), data.serialize());",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
let RError instances determine their textual shape and include source information if given,public RErrorInExpr(SourceSection source) { this.source = source;,public RErrorInExpr(SourceSection node) { errorNode = node;,KEEP KEEP REP KEEP REP KEEP REP,Rename Parameter
Improvements of link validation apps and refactoring,public abstract String failMessage(CmsResource resource); public abstract ItemClickListener getClickListener();,public abstract Object failMessage(CmsResource resource);,KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD,Change Return Type
"timeline: correct / cleanup javafx vs swing initialization code, previously causing threading issues",private void runJavaFxThread(final JPanel chartJPanel) {,"private void runJavaFxThread(final JPanel chartJPanel, final JPanel viewerJPanel, final JSplitPane splitYPane) {",KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL KEEP,Remove Parameter
more consistent formatting in REngine.toString,public void printResult(Object originalResult) { Object result = evaluatePromise(originalResult); result = RRuntime.asAbstractVector(result); if (result instanceof RTypedValue) {,public void printResult(Object result) { if (result == null || result instanceof TruffleObject && !(result instanceof RTypedValue)) { RContext.getInstance().getConsoleHandler().println(toString(result)); } else if (result instanceof CharSequence && !(result instanceof String)) { RContext.getInstance().getConsoleHandler().println(toString(result)); } else {,KEEP KEEP KEEP REP KEEP REP REP REP REP DEL KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Rename Parameter
Adding algorithm to speed up intersection among sorted ranges,public void setLeft(int a) {,public void setA(int a) {,KEEP KEEP REP KEEP KEEP,Rename Method
"When outputting a thread dump for a slow interruption, group threads with the same stack trace together, sort the dump by stack length (longer stacks are more likely to be interesting), and insert the longest stack in the remote bug report, for easier triage. Also log stack traces and thread names in one single logline: makes it much easier to read these lines and to search over them. The length should still be manageable, and if there are thousands of threads for a single stack trace, it's unlikely they're doing anything very interesting.","public SlowInterruptException(Exception inner) { super(""Slow interruption..."", inner); } } private static final class StackTraceAndState implements Comparable<StackTraceAndState> { private final StackTraceElement[] trace; private final Thread.State state; StackTraceAndState(Map.Entry<Thread, StackTraceElement[]> threadEntry) { this.trace = threadEntry.getValue(); this.state = threadEntry.getKey().getState(); } @Override public int hashCode() { return 31 * state.hashCode() + Arrays.hashCode(trace); } @Override public boolean equals(Object obj) { if (obj == this) { return true; } if (!(obj instanceof StackTraceAndState)) { return false;",public SlowInterruptException() { super("Slow interruption...");,KEEP ADD REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
Updated to the new NBT version,public CompoundMap getAuxData() {,public List<Tag> getAuxData() {,KEEP REP KEEP KEEP,Change Return Type
Updated Events for chat changes and moved PlayerHeldItemChangeEvent to Vanilla,public ChatArguments getMessage() { return message; } public void setMessage(String message) { this.message = new ChatArguments(message); } @Override public void setCancelled(boolean cancelled) { super.setCancelled(cancelled); } @Override public HandlerList getHandlers() { return handlers; } public static HandlerList getHandlerList() { return handlers; } },public String getMessage() { return message; } public void setMessage(String message) { this.message = message; } @Override public void setCancelled(boolean cancelled) { super.setCancelled(cancelled); } @Override public HandlerList getHandlers() { return handlers; } public static HandlerList getHandlerList() { return handlers; } },KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Merge P+R and B+R OSM processing,"private void processParkAndRideNodes(Collection<OSMNode> nodes, boolean isCarParkAndRide) {",private void processBikeParkAndRideNodes() {,KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
TruffleString: constant-fold also in TruffleTier providers,"public HotSpotPartialEvaluator(TruffleCompilerConfiguration config, GraphBuilderConfiguration configForRoot, KnownTruffleTypes knownTruffleTypes) { super(config, configForRoot, knownTruffleTypes);","public HotSpotPartialEvaluator(TruffleCompilerConfiguration config, GraphBuilderConfiguration configForRoot) { super(config, configForRoot, new HotSpotKnownTruffleTypes(config.lastTier().providers().getMetaAccess()));",KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP REP DEL,Add Parameter
check for empty spec before recursive application (closes #1426),"static ClassNode[] applyGenericsContext(final Map<GenericsTypeName, GenericsType> spec, final ClassNode[] types) { if (types == null) return null; final int nTypes = types.length; ClassNode[] newTypes = new ClassNode[nTypes]; for (int i = 0; i < nTypes; i += 1) { newTypes[i] = applyGenericsContext(spec, types[i]); } return newTypes; } static ClassNode applyGenericsContext(final Map<GenericsTypeName, GenericsType> spec, final ClassNode type) { if (type == null || !isUsingGenericsOrIsArrayUsingGenerics(type)) { return type; } if (type.isArray()) { return applyGenericsContext(spec, type.getComponentType()).makeArray(); } ClassNode newType = type.getPlainNodeReference(); GenericsType[] gt = type.getGenericsTypes(); if (asBoolean(spec)) { gt = applyGenericsContext(spec, gt); } newType.setGenericsTypes(gt); if (type.isGenericsPlaceHolder()) { boolean nonTrivial = hasNonTrivialBounds(gt[0]); if (nonTrivial || !gt[0].isPlaceholder()) { return getCombinedBoundType(gt[0]); } String placeholderName = gt[0].getName(); if (!placeholderName.equals(newType.getUnresolvedName())) { ClassNode clean = make(placeholderName); clean.setGenericsTypes(gt); clean.setRedirect(newType); newType = clean; } newType.setGenericsPlaceHolder(true); } return newType;","static ClassNode[] applyGenericsContext(final Map<GenericsTypeName, GenericsType> spec, final ClassNode[] bounds) { if (bounds == null) return null; ClassNode[] newBounds = new ClassNode[bounds.length]; for (int i = 0, n = bounds.length; i < n; i += 1) { newBounds[i] = applyGenericsContext(spec, bounds[i]); } return newBounds; } static ClassNode applyGenericsContext(final Map<GenericsTypeName, GenericsType> spec, final ClassNode bound) { if (bound == null) return null; if (bound.isArray()) { return applyGenericsContext(spec, bound.getComponentType()).makeArray(); } if (!bound.isUsingGenerics()) return bound; ClassNode newBound = bound.getPlainNodeReference(); newBound.setGenericsTypes(applyGenericsContext(spec, bound.getGenericsTypes())); if (bound.isGenericsPlaceHolder()) { GenericsType[] gt = newBound.getGenericsTypes(); boolean hasBounds = hasNonTrivialBounds(gt[0]); if (hasBounds || !gt[0].isPlaceholder()) return getCombinedBoundType(gt[0]); String placeHolderName = newBound.getGenericsTypes()[0].getName(); if (!placeHolderName.equals(newBound.getUnresolvedName())) { ClassNode clean = make(placeHolderName); clean.setGenericsTypes(newBound.getGenericsTypes()); clean.setRedirect(newBound); newBound = clean; } newBound.setGenericsPlaceHolder(true); } return newBound;",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP DEL DEL DEL KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP ADD ADD ADD REP KEEP ADD REP KEEP REP KEEP KEEP KEEP REP KEEP REP REP REP REP REP REP KEEP REP DEL DEL KEEP REP KEEP DEL KEEP KEEP ADD ADD ADD ADD ADD ADD REP KEEP REP KEEP KEEP KEEP REP KEEP KEEP ADD KEEP KEEP ADD KEEP REP KEEP REP KEEP REP KEEP KEEP KEEP KEEP REP REP REP REP KEEP KEEP KEEP REP KEEP KEEP REP,Rename Parameter
"MID-7976 role catalog tiles/table differences fixes, wip","public TileTablePanel(String id, ISortableDataProvider provider, List<IColumn<O, String>> columns, IModel<ViewToggle> viewToggle, UserProfileStorage.TableId tableId) {","public TileTablePanel(String id, ISortableDataProvider provider, List<IColumn<O, String>> columns, IModel<ViewToggle> viewToggle) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix handling of resources with trailing slashes,"private static void addURLEntries(List<URL> resourcesURLs, ResourceStorageEntry entry, String moduleName, String resourceName) {","private static void addURLEntries(List<URL> resourcesURLs, ResourceStorageEntry entry, String moduleName, String canonicalResourceName) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Working version of MenuInflater code,"public void inflateMenu(Context context, String key, Menu root) { inflateMenu(context, key, null, root);","public Menu inflateMenu(Context context, String key) { return inflateMenu(context, key, null);",KEEP REP KEEP KEEP KEEP ADD ADD REP KEEP DEL KEEP KEEP ADD REP,Change Return Type
Removed old AIM data source identification logic,"void logDataSourceTypeIdError(String errorMessage) throws InterruptedException { log(MessageCategory.ERROR, String.format(""Error identifying data source type: %s"", errorMessage));","void logDataSourceTypeIdError(Exception ex) throws InterruptedException { log(MessageCategory.ERROR, String.format(""Error identifying data source type: %s"", ex.getLocalizedMessage()));",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
#6897,"default <C extends UIComponent & UIColumn> String getConvertedFieldValue(FacesContext context, C column) { Object value = createValueExprFromVarField(context, getVar(), column.getField()).getValue(context.getELContext());","static <C extends UIComponent & UIColumn> String getConvertedFieldValue(FacesContext context, String var, C column) { Object value = createValueExprFromVarField(context, var, column.getField()).getValue(context.getELContext());",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Remove Parameter
Cosmetics on #4322,"protected AjaxRequestBuilder preConfiguredAjaxRequestBuilder(FacesContext context, UIComponent component, AjaxSource source, UIForm form) {","protected AjaxRequestBuilder preconfiguredAjaxRequestBuilder(FacesContext context, UIComponent component, AjaxSource source, UIForm form) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Fix ClassCastException in e2e tests with MountDelegate enabled,private @Nullable ComponentHost getHost(TestOutput testOutput) {,private @Nullable Host getHost(TestOutput testOutput) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Furthher cleanup / removal of internal usages of ShadowAdapter + deprecate,"public static <T extends Activity> ActivityController<T> of(ShadowsAdapter unused, T activity, Intent intent) { return of(activity, intent); } @Deprecated public static <T extends Activity> ActivityController<T> of(ShadowsAdapter unused, T activity) { return of(activity); } public static <T extends Activity> ActivityController<T> of(T activity, Intent intent) { return new ActivityController<>(activity, intent).attach();","public static <T extends Activity> ActivityController<T> of(ShadowsAdapter shadowsAdapter, T activity, Intent intent) { return new ActivityController<>(shadowsAdapter, activity, intent).attach();",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP KEEP ADD ADD ADD ADD ADD ADD KEEP,Rename Parameter
This IDE likes messing with me.,public Controller getController();,public BasicController getController();,KEEP REP KEEP,Change Return Type
"more generics warning cleanups, only 5200+ to go",public final Page< ? > getPage(),public final Page getPage(),KEEP KEEP ADD ADD REP KEEP,Change Return Type
"Revert to previous behaviour, i.e. key on thread Group, but allow this to be changed by defining key_on_threadname=true","public StatisticalSampleResult(SampleResult res, boolean keyOnThreadName) {",public StatisticalSampleResult(SampleResult res) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Added lighting failsafe,"public boolean load(int x, int y, int z) {","public SpoutWorldLightingModel load(int x, int y, int z) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Create a copy of the shared JDBC context (#13049),"SqlQueryPlus sqlQueryPlus,","SqlQueryPlus sqlRequest,",KEEP REP,Rename Parameter
[multistage] support SEMI/ANTI join (#10294),"public JoinNode(int stageId, DataSchema dataSchema, DataSchema leftSchema, DataSchema rightSchema, JoinRelType joinRelType, JoinKeys joinKeys, List<RexExpression> joinClause) {","public JoinNode(int stageId, DataSchema dataSchema, JoinRelType joinRelType, JoinKeys joinKeys, List<RexExpression> joinClause) {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Introduced RestrictionType class,"public IUserLayoutRestriction getRestriction(RestrictionType restrictionType,RestrictionPath restrictionPath) { return this.alproperties.getRestriction(restrictionType,restrictionPath);","public IUserLayoutRestriction getRestriction(String restrictionName,RestrictionPath restrictionPath) { return this.alproperties.getRestriction(restrictionName,restrictionPath);",KEEP KEEP REP REP KEEP KEEP KEEP REP,Rename Parameter
Started refactoring FindNullDeref to take advantage of @NonNull parameter,"NonNullParamPropertyDatabase unconditionalDerefDatabase, NonNullParamPropertyDatabase nonNullParamDatabase)",private void examineCalledMethods(NonNullParamPropertyDatabase database),REP REP REP REP,Add Parameter
Only generate socketKey once per sample,private Socket getSocket(String socketKey) {,private Socket getSocket() {,KEEP KEEP ADD REP KEEP,Add Parameter
Added static and int slot to RootNode of InstrumentationTestLanguage to test clearing the frame on unwind.,"protected InstrumentationTestRootNode(InstrumentationTestLanguage lang, FrameDescriptor descriptor, String name, SourceSection sourceSection, BaseNode... expressions) { this(lang, descriptor, name, sourceSection, null, expressions);","protected InstrumentationTestRootNode(InstrumentationTestLanguage lang, String name, SourceSection sourceSection, BaseNode... expressions) { this(lang, name, sourceSection, null, expressions);",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP KEEP KEEP,Add Parameter
Child contents pop up to the root after syncAll process #9447,private Node doStore( final Node movedNode ),"private Node doStore( final Node movedNode, final boolean metadataOnly )",KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL KEEP,Remove Parameter
Basic support for Fragments,private Class loadClass(String className) {,private Class<? extends View> loadClass(String className) {,KEEP REP DEL DEL KEEP KEEP KEEP,Change Return Type
bookmarks refactoring,"public Bookmark(Book book, String modelId, ZLTextWordCursor cursor) {","public Bookmark(Book book, String text, String modelId, ZLTextWordCursor cursor) {",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
Remove old transition code,private void afterMountMaybeUpdateAnimations() {,private void afterMountMaybeUpdateAnimations(boolean shouldAnimateTransitions) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Add symbol binding,"private static Map<PsiClass, List<PsiElement>> collectAndAddToCache(",private static Collection<String> collectAndAddToCache(,KEEP KEEP ADD REP KEEP,Change Return Type
Fix NPE when streaming connection is not yet ready,protected MessageHandler(StreamSession session),"protected MessageHandler(StreamSession session, Socket socket, int protocolVersion)",KEEP KEEP REP DEL DEL DEL DEL,Remove Parameter
Fix personal data statistics: for temporary and anonymous entities it is imposible to read data from precomputed metrics,"public void test(Object wsFilter, Object userFilter, long result) throws Exception {",@Test public void testAnyUsersWorkspacesEvents() throws Exception {,DEL KEEP KEEP ADD ADD ADD ADD ADD REP KEEP KEEP KEEP,Add Parameter
Remove netty buffer ref-counting,"private Collection<? extends IMutation> getMutations(BatchQueryOptions options, boolean local, long now)","private Collection<? extends IMutation> getMutations(BatchQueryOptions options, boolean local, long now, Frame sourceFrame)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL,Remove Parameter
4163 comments and refactoring for clarity with new caches,"private static String getDataSourceByDeviceIdCacheKey(int caseId, String dataSourceDeviceId) { return ""Case"" + caseId + ""DeviceId"" + dataSourceDeviceId; ","private static String getDataSourceCacheKey(int caseId, String dataSourceDeviceId) { return ""Case"" + caseId + ""DeviceId"" + dataSourceDeviceId;",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
generics cleanup,public final Class<? extends Page<?>> getPageClass(),public final Class< ? extends Page> getPageClass(),KEEP KEEP REP DEL KEEP REP KEEP,Change Return Type
Fix #3558: Spelled contentLength variable correctly.,"public DefaultStreamedContent(InputStream stream, String contentType, String name, Integer contentLength) {","public DefaultStreamedContent(InputStream stream, String contentType, String name, Integer contentLenght) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Reloading contact list after settings change,protected boolean loadPreferences() { boolean changed = false; if (getContactNameDisplayOrder() != mContactsPrefs.getDisplayOrder()) { setContactNameDisplayOrder(mContactsPrefs.getDisplayOrder()); changed = true; } if (getSortOrder() != mContactsPrefs.getSortOrder()) { setSortOrder(mContactsPrefs.getSortOrder()); changed = true; },protected void loadPreferences() { setContactNameDisplayOrder(mContactsPrefs.getDisplayOrder()); setSortOrder(mContactsPrefs.getSortOrder());,KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD,Change Return Type
Fixed #5029,"protected void encodeInput(FacesContext context, SelectManyMenu menu, String clientId, List<SelectItem> selectItems) throws IOException {","protected void encodeInput(FacesContext context, SelectManyMenu menu, String clientId) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
cleanup current thread get and set. Add some documentation,public void registerCurrentThread(StaticObject guestThread) { getLanguage().getThreadLocalState().setCurrentThread(guestThread);,public void registerCurrentThread() { Thread t = Thread.currentThread(); getLanguage().getThreadLocalStateFor(t).setCurrentThread(getGuestThreadFromHost(t));,KEEP KEEP ADD REP KEEP REP DEL DEL DEL DEL,Add Parameter
do not save payment token with subscription attributes,"public NewSubscriptionAttributes addSubscription(Subscription subscription, NewSubscriptionAttributes subscriptionAttributes)","public SubscriptionAttributes addSubscription(Subscription subscription, SubscriptionAttributes subscriptionAttributes)",KEEP REP KEEP KEEP REP KEEP,Change Return Type
"#10105 tabs ""Editors"", ""Text Editors"", ""Autosave"", ""File Associations"" moved from General settings","protected void patchPreferencePages(PreferenceManager pm, String[] preferencePages, String preferencePageId) { for (String pageId : preferencePages)  {","protected void patchPreferencePages(PreferenceManager pm) { String[] UI_PREF_PAGES = { WORKBENCH_PREF_PAGE_ID + ""/org.eclipse.ui.preferencePages.Views"", WORKBENCH_PREF_PAGE_ID + ""/org.eclipse.ui.preferencePages.Keys"", WORKBENCH_PREF_PAGE_ID + ""/org.eclipse.ui.browser.preferencePage"", WORKBENCH_PREF_PAGE_ID + ""/org.eclipse.search.preferences.SearchPreferencePage"", WORKBENCH_PREF_PAGE_ID + ""/org.eclipse.text.quicksearch.PreferencesPage"" }; for (String pageId : UI_PREF_PAGES)  {",KEEP KEEP KEEP REP REP REP REP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP REP KEEP KEEP,Add Parameter
"fix bugs, add UNIONPAY scheme, make number length optional, parse ranges correctly, use 8 digit iin",Optional<Integer> getNumber_length() { return Optional.ofNullable(numberLength);,int getNumber_length() { return numberLength;,REP KEEP KEEP KEEP REP,Change Return Type
CLDIDE-2236; added CC removing templates;,public void unlockResources(String accountId) {,public void unlockAccountResources(String accountId) {,KEEP KEEP REP KEEP KEEP,Rename Method
various improvements in extract/replace,"public RAbstractIntVector apply(RAbstractStringVector target, RAbstractStringVector elements, int notFoundStartIndex, RStringVector names) {","public RAbstractIntVector apply(RAbstractStringVector target, RAbstractStringVector elements, int notFoundStartIndex) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix parameter matching for parameterized types,"private static Parameter[] makeRawTypes(Parameter[] params, Map<GenericsType, GenericsType> genericsPlaceholderAndTypeMap) {","private static Parameter[] makeRawTypes(Parameter[] params, ClassNode declaringClassForDistance, ClassNode actualReceiverForDistance) { Map<String, GenericsType> placeholderInfo = GenericsUtils.extractPlaceholders(GenericsUtils.findParameterizedTypeFromCache(declaringClassForDistance, actualReceiverForDistance));",KEEP KEEP KEEP KEEP KEEP REP REP REP DEL KEEP DEL DEL DEL DEL DEL DEL,Add Parameter
add test cases and roll back initial changes,"private boolean storeProperty(PropertyNode property, PropertyExpression expressionToStoreOn, ClassNode receiver, ClassCodeVisitorSupport visitor, String delegationData) { if (property == null) return false; if (visitor != null) visitor.visitProperty(property); storeWithResolve(property.getOriginType(), receiver, property.getDeclaringClass(), property.isStatic(), expressionToStoreOn);","private boolean storeProperty(PropertyNode propertyNode, PropertyExpression expressionToStoreOn, ClassNode receiver, ClassCodeVisitorSupport visitor, String delegationData) { if (propertyNode == null) return false; if (visitor != null) visitor.visitProperty(propertyNode); storeWithResolve(propertyNode.getOriginType(), receiver, propertyNode.getDeclaringClass(), propertyNode.isStatic(), expressionToStoreOn);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP REP REP KEEP,Rename Parameter
Include a separate message for call details page in voicemail StatusMessage.,"public StatusMessage(String sourcePackage, int callLogMessageId, int callDetailsMessageId, int actionMessageId, Uri actionUri) {","public StatusMessage(String sourcePackage, int statusMessageId, int actionMessageId, Uri actionUri) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
UP-2656 Merging IChannelDefinitionImpl into PortletDefinitionImpl,"public boolean canRender(final String userName, final String fname) { if (userName == null || fname == null) {","public boolean canRender(final String userName, final String channelFName) { if (userName == null || channelFName == null) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
fix bug,private boolean isAccessable(Class<? extends Job> clazz) {,private boolean checkAvailability(Class<? extends Job> clazz) {,KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Fix rules regarding AutoFactory and scopes.,"@Nonnull private <T> T inject(@Nonnull Class<? extends T> implementingClass) { if (isSystem(implementingClass)) {  throw new InjectionException(implementingClass, ""nothing bound""); }",private <T> T inject(@Nonnull Class<? extends T> clazz) {,ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
refactor,public List<LatLng> getLatlng() {,public LatLng getLatlng() {,KEEP REP KEEP KEEP,Change Return Type
moved cached-droid-sugar-classes.jar to local tmp directory.,public void saveAllClassesToCache(File file) {,public void saveAllClassesToCache(String filename) {,KEEP KEEP REP REP KEEP,Rename Parameter
Open Telemetry Span status must be set to ERROR if the runtime internal Span has errors. (#11839),"private synchronized Span resolveOpenTelemetrySpan(InternalSpan internalSpan, Set<String> parentNoExportUntil, Set<String> noExportUntil) {","private synchronized io.opentelemetry.api.trace.Span resolveOpenTelemetrySpan(InternalSpan internalSpan, Set<String> parentNoExportUntil, Set<String> noExportUntil) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
fix for logical,"protected RLogicalVector repInt(byte value, int times) {","protected RIntVector repInt(byte value, int times) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
refactor: Cleanup doc generation,"private ParameterDetailsList(SkipFunction skipNodeOp, int headerLevel) {","private ParameterDetailsList(MarkDownDocWriter writer, SkipFunction skipNodeOp, int headerLevel) { this.writer = writer;",KEEP REP DEL DEL KEEP KEEP KEEP KEEP DEL DEL DEL,Remove Parameter
Fix TokenMetadataTest,"private void testRingIterator(ArrayList<Token> ring, String start, boolean includeMin, String... expected)","private void testRingIterator(String start, boolean includeMin, String... expected)",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Minor Aspect readability fixes.,"private static Map<AspectDescriptor, AspectKey> getAspectKeys(Dependency dep) { HashMap<AspectDescriptor, AspectKey> result = new HashMap<>();","private static Map<AspectDescriptor, SkyKey> getAspectKeys(Dependency dep) { HashMap<AspectDescriptor, SkyKey> result = new HashMap<>();",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
WIP,"public KRun(KExceptionManager kem, FileUtil files) {","public KRun(KExceptionManager kem, FileUtil files, ExecutionMode executionMode) {",KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Move type annotations to preferred position,"private <S extends StaticSlot, R extends StaticRef> @Nullable StaticRef findBestDeclToAdd(","private <S extends StaticSlot, R extends StaticRef> StaticRef findBestDeclToAdd(",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP,Change Return Type
Rename method for better readability,private void configureSocket(Socket socket){,private void setSocket(Socket socket){,KEEP KEEP REP KEEP,Rename Method
Use try-resource lock for block,"public BlockLock acquireBlockLock(long sessionId, long blockId, BlockLockType blockLockType) {","public long lockBlock(long sessionId, long blockId, BlockLockType blockLockType) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
[TE] merger handles anomaly properties (#3358),"public AnomalyKey(String metric, String collection, DimensionMap dimensions, String mergeKey) {","public AnomalyKey(String metric, String collection, DimensionMap dimensions) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
WICKET-4863 Customize ValidationError creation by FormComponent,protected ValidationError newValidationError(ConversionException cause),"private void reportValidationError(ConversionException e, ValidationError error)",REP REP REP REP DEL DEL,Change Return Type
Backported Johan's DiffUtil change,"boolean failWithAssert) throws IOException { String filename = clazz.getPackage().getName(); filename = filename.replace('.', '/'); filename += ""/"" + file; InputStream in = clazz.getClassLoader().getResourceAsStream(filename); if (in == null) { throw new IOException(""File not found: "" + filename); } String reference = Streams.readString(in); reference = reference.replaceAll(""\n\r"", ""\n""); reference = reference.replaceAll(""\r\n"", ""\n""); document = document.replaceAll(""\n\r"", ""\n""); document = document.replaceAll(""\r\n"", ""\n""); boolean equals = document.equals(reference); if (equals == false) { final String prop = System.getProperty(""wicket.replace.expected.results""); if (prop != null) { in.close(); in = null; replaceExpectedResultFile(document, clazz, file); return true; } if (failWithAssert) { Assert.assertEquals(filename, reference, document); } else { log.error(""File name: "" + file); log.error(""===================""); log.error(reference); log.error(""===================""); log.error(document); log.error(""===================""); String[] test1 = StringList.tokenize(reference, ""\n"").toArray(); String[] test2 = StringList.tokenize(document, ""\n"").toArray(); Diff df = new Diff(test1); Revision r; try { r = df.diff(test2); } catch (DifferentiationFailedException e) { throw new RuntimeException(e); } System.out.println(r.toString()); } } return equals; } public final static void replaceExpectedResultFile(final String document, final Class clazz, final String file) throws IOException { String filename = clazz.getPackage().getName(); filename = filename.replace('.', '/'); filename += ""/"" + file; final URL url = clazz.getClassLoader().getResource(filename); filename = url.getFile(); filename = filename.replaceAll(""/target/test-classes/"", ""/src/test/java/""); PrintWriter out = new PrintWriter(new FileOutputStream(filename)); out.print(document); out.close(); }","public static final boolean validatePage(String document, final Class clazz, final String file) throws IOException { String filename = clazz.getPackage().getName(); filename = filename.replace('.', '/'); filename += ""/"" + file; InputStream in = clazz.getClassLoader().getResourceAsStream(filename); if (in == null) { throw new IOException(""File not found: "" + filename); } String reference = Streams.readString(in); reference = reference.replaceAll(""\n\r"", ""\n""); reference = reference.replaceAll(""\r\n"", ""\n""); document = document.replaceAll(""\n\r"", ""\n""); document = document.replaceAll(""\r\n"", ""\n""); boolean equals = document.equals(reference); if (equals == false) { final String prop = System.getProperty(""wicket.replace.expected.results""); if (prop != null) { in.close(); in = null; replaceExpectedResultFile(document, clazz, file); return true; } Assert.assertEquals(filename, reference, document); log.error(""File name: "" + file); log.error(""===================""); log.error(reference); log.error(""===================""); log.error(document); log.error(""===================""); String[] test1 = StringList.tokenize(reference, ""\n"").toArray(); String[] test2 = StringList.tokenize(document, ""\n"").toArray(); Diff df = new Diff(test1); Revision r; try { r = df.diff(test2); } catch (DifferentiationFailedException e) { throw new RuntimeException(e); } System.out.println(r.toString()); } return equals; } public final static void replaceExpectedResultFile(final String document, final Class clazz, final String file) throws IOException { String filename = clazz.getPackage().getName(); filename = filename.replace('.', '/'); filename += ""/"" + file; final URL url = clazz.getClassLoader().getResource(filename); filename = url.getFile(); filename = filename.replaceAll(""/target/test-classes/"", ""/src/test/java/""); PrintWriter out = new PrintWriter(new FileOutputStream(filename)); out.print(document); out.close(); }dd Parameter
Fix the ordering of local artifact URLs on JDK8.,"public URL[] getLocalArtifactUrls(RobolectricTestRunner robolectricTestRunner, Dependency... dependencies) {","public Map<String, URL> getLocalArtifactUrls(RobolectricTestRunner robolectricTestRunner, Dependency... dependencies) {",KEEP REP DEL KEEP KEEP KEEP KEEP KEEP,Change Return Type
Null handling for time column (#7269),"public NullValueTransformer(TableConfig tableConfig, Schema schema) { String timeColumnName = tableConfig.getValidationConfig().getTimeColumnName();",public NullValueTransformer(Schema schema) {,KEEP ADD ADD REP KEEP KEEP ADD ADD ADD ADD,Add Parameter
2018.04.01 (1.52a28),double resetTable() { ResultsTable rt = getResultsTable(); rt.reset();,double getTableSize() { String title = "Results"; if (interp.nextToken() == '(') { interp.getLeftParen(); if (interp.nextToken() != ')') title = getString(); interp.getRightParen(); } ResultsTable rt = getResultsTable(title); return rt.size(); },KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP REP REP DEL DEL,Rename Method
SONAR-17115 Migrate Multiple ALM feature,public MultipleAlmFeature getMultipleAlmFeatureProvider() { return multipleAlmFeature;,public MultipleAlmFeatureProvider getMultipleAlmFeatureProvider() { return multipleAlmFeatureProvider;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Related portlets are MarketplacePortletDefinitions.,public Set<MarketplacePortletDefinition> getRelatedPortlets() {,public Set<IPortletDefinition> getRelatedPortlets() {,KEEP REP KEEP KEEP,Change Return Type
additional fixes towards enabling eager evaluation of arguments,public void materialize(RPromise promise) { if (isOptEagerProfile.profile(promise.getOptType() == OptType.EAGER) || isOptPromisedProfile.profile(promise.getOptType() == OptType.PROMISED)) {,public boolean materialize(RPromise promise) { OptType profiledOptType = optTypeProfile.profile(promise.getOptType()); if (profiledOptType == OptType.EAGER || profiledOptType == OptType.PROMISED) {,KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL KEEP REP KEEP REP KEEP REP KEEP REP KEEP,Change Return Type
various small FFI changes,"private static <T> T guaranteeInstanceOf(Object x, Class<T> clazz) {","private static void guaranteeInstanceOf(Object x, Class<?> clazz) {",KEEP KEEP ADD REP KEEP KEEP REP KEEP KEEP,Change Return Type
[TE] detection generate task status in monitoring task (#5065),"public DetectionTaskStatus(double taskSuccessRate, HealthStatus healthStatus, Map<TaskConstants.TaskStatus, Long> counts, List<TaskDTO> tasks, long lastTaskExecutionTime) {","public DetectionTaskStatus(double taskSuccessRate, HealthStatus healthStatus, Map<TaskConstants.TaskStatus, Long> counts, List<TaskDTO> tasks) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Changed PatternElement.match() to return MatchResult instead of just,"protected MatchResult checkConsistent(Variable field, Variable value, BindingSet bindingSet) {","protected BindingSet checkConsistent(Variable field, Variable value, BindingSet bindingSet) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
description -- ArrayList and get prefix and private final,public String getDisplayName() {,public String displayName() {,KEEP KEEP REP KEEP,Rename Method
reimplemented algorithm so that parents and children are selected separately,"public Map<String, Md5MetaData> getMataData(){ return Collections.unmodifiableMap(this.metadata);",public List<Long> getChildren() { return Collections.unmodifiableList(this.children);,KEEP REP REP REP KEEP REP,Change Return Type
"Restore filetyping to embedded file extraction, avoid NPEs",boolean isSevenZipExtractionSupported(AbstractFile file) { String fileMimeType = fileTypeDetector.getMIMEType(file); for (SupportedArchiveExtractionFormats mimeType : SupportedArchiveExtractionFormats.values()) { if (mimeType.toString().equals(fileMimeType)) {,boolean isSevenZipExtractionSupported(String abstractFileMimeType) { for (SupportedArchiveExtractionFormats s : SupportedArchiveExtractionFormats.values()) { if (s.toString().equals(abstractFileMimeType)) {,KEEP REP REP KEEP ADD ADD ADD ADD KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix QueryRunner for multiple runs (#6582),"private static List<String> makeQueries(List<String> queries, QueryMode queryMode, int queryCount) { int numQueries = queries.size();","private static Stream<String> makeQueries(List<String> inputs, QueryMode queryMode, int queryCount) { queryCount = queryCount > 0 ? queryCount : inputs.size();",KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP REP DEL DEL DEL DEL DEL DEL,Change Return Type
Bump the runtime SDK of shadows:httpclient tests to S,public List<RoboWebMessagePort[]> getCreatedPorts() { return ImmutableList.copyOf(allCreatedPorts);,public List< Object[]> getCreatedPorts() { return allCreatedPorts;,KEEP REP DEL KEEP KEEP KEEP REP,Change Return Type
line up with platform api 0.22.0,"protected List<AccountMembership> getAccountMemberships() throws IOException { return httpMetricTransport.getResources(AccountMembership.class, ""GET"", PATH_ACCOUNT);","protected List<MemberDescriptor> getAccountMemberships() throws IOException { return httpMetricTransport.getResources(MemberDescriptor.class, ""GET"", PATH_ACCOUNT);",KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Avoid showing error if contact removed on save.,"public void onSaveCompleted(boolean hadChanges, int saveMode, boolean saveSucceeded, Uri contactLookupUri) {","public void onSaveCompleted(boolean hadChanges, int saveMode, Uri contactLookupUri) { boolean success = contactLookupUri != null;",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL,Add Parameter
create pre-initialized FrameSlotNodes,"private static Assumption getAssumption(FrameDescriptor frameDescriptor, Object identifier) { return frameDescriptor.getNotInFrameAssumption(identifier);","private static Assumption getAssumption(Frame frame, Object identifier) { return frame.getFrameDescriptor().getNotInFrameAssumption(identifier);",KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Adress reviewer comments.,"boolean allowNativeAccess, boolean allowCreateThread, boolean allowHostIO, boolean allowHostClassLoading, boolean allowInnerContextOptions, boolean allowExperimentalOptions,","public Context createContext(Object receiver, OutputStream out, OutputStream err, InputStream in, boolean allowAllAccess, boolean allowHostAccess, HostAccess hostAccess, PolyglotAccess polyglotAccess, boolean allowNativeAccess, boolean allowCreateThread, boolean allowHostIO, boolean allowHostClassLoading, boolean allowExperimentalOptions,",DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Rename Parameter
Ceylondoc: change style of declaration links and use Tree.DocLink #1301,private void buildNodesMaps() {,private void buildDeclarationMaps() {,KEEP KEEP REP KEEP,Rename Method
Reimplemented fileupload buttons with pf buttons instead of jquery ui buttons,"protected void encodeButton(FacesContext context, String label, String styleClass, String icon) throws IOException { ResponseWriter writer = context.getResponseWriter();","protected void encodeButton(FacesContext facesContext, FileUpload fileUpload, String label, String type, String styleClass) throws IOException { ResponseWriter writer = facesContext.getResponseWriter();",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Create classloader inside doPrivileged block,public GroovyClassLoader run() { return new GroovyClassLoader(SecurityTestSupport.class.getClassLoader()); } } );,public Object run() { return new GroovyClassLoader(SecurityTestSupport.class.getClassLoader()); } });,KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Change Return Type
Fix #7079/#7082: CascadeSelect NPE or incorrect label displayed (#7085),"protected void encodeInput(FacesContext context, CascadeSelect cascadeSelect, String valueToRender) throws IOException {","protected void encodeInput(FacesContext context, CascadeSelect cascadeSelect) throws IOException {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Bug Add more options to control what the HTTP Proxy generates,private void populateSampler() {,private HTTPSamplerBase createSampler() {,KEEP REP REP KEEP,Change Return Type
Issue #2108: Make more obvious we're using codepoints,private boolean isIdentifierPart(int codepoint) { return Character.isLowerCase(codepoint) || Character.isUpperCase(codepoint) || Character.isDigit(codepoint) || codepoint == '_';,private boolean isIdentifierPart(int c) { return Character.isLowerCase(c) || Character.isUpperCase(c) || Character.isDigit(c) || c == '_';,KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP KEEP REP KEEP KEEP,Rename Parameter
THIRDEYE-619 : Join phase should emit list of records from perform join,"public List<GenericRecord> performJoin(Object joinKeyVal,","public GenericRecord performJoin(Object joinKeyVal,",KEEP REP KEEP KEEP,Change Return Type
Oops forgot to update test code,private HTTPSampleResult getSampleResultWithSpecifiedResponseCode(String code) { HTTPSampleResult sampleResult = new HTTPSampleResult();,private SampleResult getSampleResultWithSpecifiedResponseCode(String code) { SampleResult sampleResult = new SampleResult();,KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Change Return Type
6315: Call log viewer,private void updateParticipantsPanel(CallLogViewData callLogViewData) {,private void updateOtherRecipientsPanel(Collection<String> otherRecipients) { if (otherRecipients == null || otherRecipients.isEmpty()) { otherRecipientsPanel.setVisible(false); return; },KEEP KEEP REP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Book title has been added when downloading book,"private Notification createDownloadFinishNotification(File file, String title, boolean success) {","private Notification createDownloadFinishNotification(File file, boolean success) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Notify content resolver of settings changes.,"protected static boolean putInt(ContentResolver cr, String name, int value) {","protected static boolean putInt(ContentResolver resolver, String name, int value) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Error while clicking RowCount #2192,"protected Query createQuery(EntityManager em, LoadContext<?> context, boolean singleResult, boolean countQuery) {","protected Query createQuery(EntityManager em, LoadContext<?> context, boolean singleResult) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Set 'shutdownInProgress' in server config when server starts before the startup check (#8525),private void updateInstanceConfigIfNeeded(ServerConf serverConf) {,private void updateInstanceConfigIfNeeded() {,KEEP KEEP ADD REP KEEP,Add Parameter
fixed npe and formatting problem in new instance reports,public void addNetTotalInMegs(Long netTotalInMegs),public void addNetTotalInMegs(Long netExternalInMegs),KEEP KEEP KEEP REP,Rename Parameter
Improve nodetool cleanup/scrub/upgradesstables failure handling.,"public CompactionManager.AllSSTableOpStatus forceCleanup() throws ExecutionException, InterruptedException","public void forceCleanup() throws ExecutionException, InterruptedException",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Methodnames should not start with upper case letter.,public void incTotal() {,public void IncTotal() {,KEEP KEEP REP KEEP,Rename Method
[Java] Pass the appendPosition when creating the log publication for the leader in the election.,int addLogPublication(final long appendPosition),int addLogPublication(),KEEP ADD ADD REP,Add Parameter
Rework workspace dao to return all workspace which user can read,public List<WorkspaceImpl> getWorkspaces(String userId) throws ServerException {,public List<WorkspaceImpl> getWorkspaces(String username) throws ServerException {,KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
HDFS-4124. Merge r1403304 from trunk,"INodesInPath getExistingPathINodes(byte[][] components, int numOfINodes, boolean resolveLink) throws UnresolvedLinkException {","int getExistingPathINodes(byte[][] components, INode[] existing, boolean resolveLink) throws UnresolvedLinkException {",REP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"Code clean-up: generic type arguments, elimination of FastVector, clean-up of option handling.",public Enumeration<Option> listOptions() {,public Enumeration listOptions() {,KEEP REP KEEP KEEP,Change Return Type
CODENVY-387 Remove deprecated code from plugin-pullrequest,@NotNull final NotificationManager notificationManager) {,@NotNull final NotificationHelper notificationHelper) {,KEEP KEEP REP REP KEEP,Rename Parameter
Add options to save/remove all reading list articles from offline.,private void removeSelectedPagesFromOffline(List<ReadingListPage> selectedPages) {,private void removeSelectedPagesFromOffline() { List<ReadingListPage> selectedPages = getSelectedPages();,KEEP KEEP ADD REP KEEP DEL DEL DEL DEL,Add Parameter
Do some cosmetic code improvements,private @NotNull RefreshShadowOperation processPendingOperations(,private @NotNull RefreshShadowOperation refreshShadowPendingOperations(,KEEP KEEP KEEP REP,Rename Method
Made the model laoder test more verbose in it's messages so it's easier to find what was wrong.,"public void compareDeclarations(String name, Declaration validDeclaration, Declaration modelDeclaration) {","public void compareDeclarations(Declaration validDeclaration, Declaration modelDeclaration) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
938: Accounts sub-trees should have capitalization changed,"private DefaultAccountTypeNode(String accountTypeName, String accountTypeDisplayName) {",private DefaultAccountTypeNode(String accountTypeName) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix NPE on BulkLoader caused by losing StreamEvent,"public StreamResultFuture stream(Set<InetAddress> toIgnore, StreamEventHandler... listeners)",public StreamResultFuture stream(Set<InetAddress> toIgnore),KEEP KEEP KEEP ADD ADD REP,Add Parameter
Added -Dctq.findeffective system property to make the type qualifier,"private static void getDirectlyRelevantTypeQualifiers(XMethod xmethod, HashSet<TypeQualifierValue> result) {","private static void getDirectlyRelevantTypeQualifiers(XMethod xmethod, IAnalysisCache analysisCache, HashSet<TypeQualifierValue> result)  {",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP DEL KEEP,Remove Parameter
MAPREDUCE-5156. Change hadoop examples ProgramDriver to be able to run 1.x examples jar on top of YARN. This change breaks 0.23.x direct usages of ProgramDriver. Contributed by Zhijie Shen.,public void driver(String[] argv) throws Throwable { if (run(argv) == -1) { System.exit(-1); } },public int driver(String[] args),KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
Refactoring and validation improvements,public Schema getSchema() {,public Schema getCellsMapper() {,KEEP KEEP REP KEEP,Rename Method
Adds support for content providers to ShadowApplicationPackageManager.,"Function<ResolveInfo, ComponentInfo> componentInfoFn) {","private List<ResolveInfo> filterResolvedServices(List<ResolveInfo> resolveInfoList, int flags) {",REP REP REP DEL DEL DEL KEEP,Add Parameter
Improved MenuModel support for Dock,"protected void encodeScript(FacesContext context, AbstractMenu menu) throws IOException { Dock dock = (Dock) menu;","protected void encodeScript(FacesContext context, Dock dock) throws IOException {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Rename Parameter
name fix,public boolean supportBlackHoleOptimization() { return getAllowBlackHoleOptimization() == 1L;,public boolean supportOptimizeBlackHole() { return getAllowOptimizeBlackHole() == 1L;,KEEP KEEP REP KEEP KEEP REP KEEP KEEP,Rename Method
updated 05.03.2009 23:08,"void getValue (String title, String prompt, double defaultValue, int digits) { int places = Analyzer.getPrecision(); if (digits>0 || (int)defaultValue!=defaultValue) digits = Math.max(places, 1); gd = new GenericDialog(title); gd.addNumericField(prompt, defaultValue, digits, 8, null); gd.addPreviewCheckbox(pfr); gd.addDialogListener(this); gd.showDialog();","double getValue (String title, String prompt, double defaultValue, int digits) { int places = Analyzer.getPrecision(); if (digits>0 || (int)defaultValue!=defaultValue) digits = Math.max(places, 1); GenericDialog gd = new GenericDialog(title); gd.addNumericField(prompt, defaultValue, digits, 8, null); gd.showDialog(); if (image==1) imp.startTiming(); canceled = gd.wasCanceled(); if (canceled) return defaultValue; return gd.getNextNumber();",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Refactor on datatable tbody rendering.,"public boolean encodeRow(FacesContext context, DataTable table, String clientId, int rowIndex) throws IOException {","public boolean encodeRow(FacesContext context, DataTable table, String clientId, int rowIndex, String rowIndexVar) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Remove Parameter
Add option to exclude Version field from logging entries.,public AnsiColorFormatter(String excludeFields) { super(excludeFields);,public AnsiColorFormatter() {,KEEP ADD REP KEEP ADD,Add Parameter
"[Minion] In ConvertToRawIndexTaskExecutor, change the uploaded file name to segment name (#1758)",public boolean convert() throws Exception {,public void convert() throws Exception {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
EC2 add max ENIs to instance EUCA-11909,"private PredefinedTypes( String name, Integer cpu, Integer disk, Integer memory, Integer ethernetInterfaceLimit, EphemeralDisk... disks ) {","private PredefinedTypes( String name, Integer cpu, Integer disk, Integer memory, EphemeralDisk... disks ) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
Dataframe extensions (#1217),"public byte apply(boolean... values) { for(int i=0; i<input.length; i++) { input[i] = values[i]; } return function.apply(input) ? TRUE_VALUE : FALSE_VALUE; } }, series);","public BooleanSeries map(BooleanFunction function) { byte[] newValues = new byte[this.values.length]; for(int i=0; i<this.values.length; i++) { newValues[i] = function.apply(this.values[i]); } return buildFrom(newValues); } @Override public BooleanSeries aggregate(BooleanFunction function) { return buildFrom(function.apply(this.values)); } @Override public BooleanSeries append(Series series) { byte[] values = new byte[this.size() + series.size()]; System.arraycopy(this.values, 0, values, 0, this.size()); System.arraycopy(series.getBooleans().values, 0, values, this.size(), series.size()); return buildFrom(values); }",KEEP REP REP REP KEEP DEL DEL DEL DEL DEL KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP KEEP REP REP REP REP REP DEL DEL DEL DEL DEL KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Output json,"public void reportIssues(SourceFile squidFile, Resource sonarFile, @Nullable Bridges.ProjectIssue project) {","public void reportIssues(SourceFile squidFile, Resource sonarFile) {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
Back out "Moves DiffNode to LayoutResult","final InternalNode layoutNode,","final LithoLayoutResult result,",KEEP REP REP,Rename Parameter
ContactTiles include display_name_alt col,protected String getNameForView(ContactEntry contactEntry) { return contactEntry.namePrimary;,protected String getNameForView(String name) { return name;,KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
HDFS-4667. Merge r1604488 from trunk.,"public DiffReportEntry(DiffType type, byte[] sourcePath) { this(type, sourcePath, null); } public DiffReportEntry(DiffType type, byte[][] sourcePathComponents) { this(type, sourcePathComponents, null); }","public DiffReportEntry(DiffType type, byte[] path) {",KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Use 'temporal distance' to guess service day,"ZoneId zoneId,","ZoneId timeZoneId,",KEEP REP,Rename Parameter
SONARJAVA-167 Expose method to compute erasure,private boolean isExcluded(Type cast) {,"private boolean isExcluded(Type cast, Type expressionType) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
synchronization with dm branch,private static boolean accessDenied(IFile f) { if (!(f instanceof File)) { return false; } final File file = (File)f; if (android.os.Build.VERSION.SDK_INT >= 9) { return !file.canExecute() || !file.canRead(); } else { return !file.canRead(); } },private static boolean accessDenied(IFile file) { if (android.os.Build.VERSION.SDK_INT >= 9) { return file instanceof File && !((File)file).canExecute(); } else { return false; } },KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP REP REP REP DEL DEL KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
add validation for realtimeToOffline task (#7523),"static void validateTaskConfigs(TableConfig tableConfig, Schema schema) {",private static void validateTaskConfigs(TableConfig tableConfig) {,DEL KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
STC: allow spread expression(s) for variadic parameter,"protected void checkForbiddenSpreadArgument(final ArgumentListExpression arguments) { for (Expression argument : arguments) { if (argument instanceof SpreadExpression) { addStaticTypeError(""The spread operator cannot be used as argument of method or closure calls with static type checking because the number of arguments cannot be determined at compile time"", argument);","protected void checkForbiddenSpreadArgument(final ArgumentListExpression argumentList) { for (Expression arg : argumentList.getExpressions()) { if (arg instanceof SpreadExpression) { addStaticTypeError(""The spread operator cannot be used as argument of method or closure calls with static type checking because the number of arguments cannot be determined at compile time"", arg);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
bp: Remove sporadic min/max usage estimates from stats,"public MonitorService(Settings settings, NodeEnvironment nodeEnvironment, ThreadPool threadPool) throws IOException {",ClusterInfoService clusterInfoService) {,ADD ADD ADD ADD ADD ADD ADD REP REP KEEP,Remove Parameter
SONARJAVA-1893 Xproc: implement method behavior,"private ExplodedGraphWalker(ConditionAlwaysTrueOrFalseCheck alwaysTrueOrFalseChecker, List<SECheck> seChecks, SymbolicExecutionVisitor symbolicExecutionVisitor) {","private ExplodedGraphWalker(ConditionAlwaysTrueOrFalseCheck alwaysTrueOrFalseChecker, List<SECheck> seChecks) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"Added in the (logLevel, message, exception) method.","public static void log (Priority logLevel, String sMessage) { LogService.instance().log(logLevel, sMessage);","public static void log (int iLogLevel, String sMessage) { LogService.instance().log(iLogLevel, sMessage);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
Implement editor springboard activity,"public static Intent createEditContactIntent(Context context, Uri uri,","public static Intent createEditContactIntent(Context context, Uri contactLookupUri,",KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Decouple HostedMethod name collision handling from orderedMethods collection,"public static String uniqueShortName(String loaderNameAndId, ResolvedJavaType declaringClass, String methodName, Signature methodSignature, boolean isConstructor) { StringBuilder sb = new StringBuilder(loaderNameAndId); sb.append(declaringClass.toClassName()).append(""."").append(methodName).append(""(""); for (int i = 0; i < methodSignature.getParameterCount(false); i++) { sb.append(methodSignature.getParameterType(i, null).toClassName()).append("","");","public static String uniqueShortName(StringBuilder sb, ResolvedJavaMethod m) { sb.append(m.getDeclaringClass().toClassName()).append(""."").append(m.getName()).append(""(""); for (int i = 0; i < m.getSignature().getParameterCount(false); i++) { sb.append(m.getSignature().getParameterType(i, null).toClassName()).append("","");",KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD REP REP REP REP KEEP ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP,Add Parameter
Remove changes to VariableNameDeclaration,private static String getKind(ASTVariableDeclaratorId id) {,private static String getKind(VariableNameDeclaration var) { ASTVariableDeclaratorId id = (ASTVariableDeclaratorId) var.getNode();,KEEP KEEP KEEP REP REP KEEP DEL DEL DEL DEL DEL,Rename Parameter
"on reusable operations, support parameters that are configuration names (#11590)",ExtensionModelHelper extensionModelHelper) {,"public MuleSdkExtensionModelParser(String extensionName, ArtifactAst ast, TypeLoader typeLoader) {",REP REP DEL DEL DEL DEL DEL KEEP,Add Parameter
Fix/add reporting binaries to integration tests docker (#12040),"public static ContainerizedGraylogBackend createStarted(SearchVersion esVersion, MongodbServer mongodbVersion, int[] extraPorts, List<URL> mongoDBFixtures, PluginJarsProvider pluginJarsProvider, MavenProjectDirProvider mavenProjectDirProvider) { final ContainerizedGraylogBackend backend = new ContainerizedGraylogBackend(); backend.create(esVersion, mongodbVersion, extraPorts, mongoDBFixtures, pluginJarsProvider, mavenProjectDirProvider); return backend; } private void create(SearchVersion esVersion, MongodbServer mongodbVersion, int[] extraPorts, List<URL> mongoDBFixtures, PluginJarsProvider pluginJarsProvider, MavenProjectDirProvider mavenProjectDirProvider) { final SearchServerInstanceFactory searchServerInstanceFactory = new SearchServerInstanceFactoryByVersion(esVersion);","public static ContainerizedGraylogBackend createStarted(int[] extraPorts, MongodbServer mongoVersion, SearchServerInstanceFactory searchServerInstanceFactory, List<Path> pluginJars, Path mavenProjectDir, List<URL> mongoDBFixtures) {",KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP REP REP REP REP REP REP REP REP KEEP ADD ADD ADD ADD ADD ADD,Rename Parameter
OX-6548,"public RuleActionBean execute(ExecutionMode executionMode, RuleActionBean ruleActionBean, ParticipantDTO pDTO , String email  ) {","public RuleActionBean execute(ExecutionMode executionMode, RuleActionBean ruleActionBean, ParticipantDTO pDTO) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Fix bug where FindBugs would hang if -Dfindbugs.cloud.token was passed and find-issues encountered network error. Test cases added.,private void fireNewIssuesUploadedEvent() {,private void markNewIssuesUploaded() {,KEEP KEEP REP KEEP,Rename Method
WICKET-5168 Depend on Java 1.7,public Enumeration<String> getHeaderNames(),public Enumeration<?> getHeaderNames(),KEEP REP KEEP,Change Return Type
"cleanup: removed redundand casts, added some checks and 1 SuppressWarning ;)",protected final Class<ZLApplication> getApplicationClass() {,protected final Class getApplicationClass() {,KEEP KEEP REP KEEP KEEP,Change Return Type
Upgrade logic to support existing boot from ebs images and instances.,"public void setRootDeviceName(String rootDeviceName) { this.rootDeviceName = rootDeviceName; } @EntityUpgrade( entities = { BlockStorageImageInfo.class }, since = Version.v3_3_0, value = com.eucalyptus.component.id.Eucalyptus.class ) public enum BlockStorageImageInfoUpgrade_3_3_0 implements Predicate<Class> { INSTANCE; private static Logger LOG = Logger.getLogger( BlockStorageImageInfo.BlockStorageImageInfoUpgrade_3_3_0.class ); @Override public boolean apply( Class arg0 ) { EntityTransaction db = Entities.get( BlockStorageImageInfo.class ); try { List<BlockStorageImageInfo> entities = Entities.query( new BlockStorageImageInfo( ) ); for ( BlockStorageImageInfo entry : entities ) { LOG.info( ""Upgrading BlockStorageImageInfo: "" + entry.toString() ); if (StringUtils.isBlank(entry.getRootDeviceName())) { entry.setRootDeviceName(""/dev/sda""); } for (DeviceMapping deviceMap : entry.getDeviceMappings()) { if (deviceMap instanceof BlockStorageDeviceMapping && deviceMap.getDeviceName().equalsIgnoreCase(""/dev/sda1"")) { deviceMap.setDeviceName(""/dev/sda""); } } Entities.persist(entry); } db.commit( ); return true; } catch ( Exception ex ) { LOG.error(""Error upgrading BlockStorageImageInfo: "", ex); db.rollback(); throw Exceptions.toUndeclared( ex ); } }",public void setRootDevice(String rootDevice) { this.rootDeviceName = rootDevice;,KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Fix cluster gating concurrency issue EUCA-7103,public ReadWriteLock getGateLock( ) {,public Lock getGateLock( ) {,KEEP REP KEEP KEEP KEEP,Change Return Type
added some checkpointing logic,public KDebugState() {,public KDebugState(int stateId) { StateId = stateId;,KEEP REP DEL KEEP DEL DEL DEL,Remove Parameter
5367 update comments for file discovery paging changes,"Map<String, Integer> getGroupMap() { return Collections.unmodifiableMap(groupMap);","LinkedHashMap<String, Integer> getGroupMap() { return groupMap;",REP KEEP KEEP KEEP KEEP REP,Change Return Type
"IAM length limit checks and error code update for names, EUCA-8971",public static ValueChecker createUserNameChecker( ) {,"public static ValueChecker createNonEmptyValueChecker( ) { return new ValueChecker( ) { @Override public String check( String value ) throws InvalidValueException { if ( Strings.isNullOrEmpty( value ) ) { throw new InvalidValueException( ""Content can not be empty"" ); } return value; } }; } public static ValueSaver createValueSaver() { return new ValueSaver(); } public static ValueChecker createEqualityChecker( final String errorMessage, final ValueSaver valueSaver ) { return new SavedValueChecker( valueSaver ) { @Override public String check( final String value, final String savedValue ) throws InvalidValueException { if ( !Strings.nullToEmpty( savedValue ).equals( value ) ) { throw new InvalidValueException( errorMessage ); } return value; } }; } public static ValueChecker createInequalityChecker( final String errorMessage, final ValueSaver valueSaver ) { return new SavedValueChecker( valueSaver ) { @Override public String check( final String value, final String savedValue ) throws InvalidValueException { if ( Strings.nullToEmpty( savedValue ).equals( value ) ) { throw new InvalidValueException( errorMessage ); } return value; } }; }ename Method
WICKET-291,public WicketPortletRequest(PortletRequest request),public WicketPortletRequest(PortletRequest req),KEEP KEEP REP,Rename Parameter
Finish Future approach,private boolean externalLinkIsDead(String url) { LOG.fine("checking url: " + url + " ...");,private boolean checkExternalLink(String url) { System.out.println("checking url: " + url + " ...");,KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
CompilerTest: add ability to invoke compiler with module names (#551),"protected CeyloncTaskImpl getCompilerTask(List<String> options, DiagnosticListener<? super FileObject> diagnosticListener,","protected CeyloncTaskImpl getCompilerTask(List<String> initialOptions, DiagnosticListener<? super FileObject> diagnosticListener,",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
include original exception in ParserException,"public ParseException(Throwable cause, String msg) { super(msg, cause);",public ParseException(String msg) { super(msg);,KEEP ADD ADD REP KEEP KEEP ADD REP,Add Parameter
Set Locale on activity re-creation,"public static void setLocale(){ String p = mSettings.getString(""set_locale"", """"); if (!p.equals("""")) { Locale locale; if(p.equals(""zh-TW"")) { locale = Locale.TRADITIONAL_CHINESE; } else if(p.startsWith(""zh"")) { locale = Locale.CHINA; } else if(p.equals(""pt-BR"")) { locale = new Locale(""pt"", ""BR""); } else if(p.equals(""bn-IN"") || p.startsWith(""bn"")) { locale = new Locale(""bn"", ""IN""); } else { if(p.contains(""-"")) p = p.substring(0, p.indexOf('-')); locale = new Locale(p); } Locale.setDefault(locale); Configuration config = new Configuration(); config.locale = locale; getAppResources().updateConfiguration(config, getAppResources().getDisplayMetrics()); } }","public static void setLocale(Context context){ String p = mSettings.getString(""set_locale"", """"); if (!p.equals("""")) { Locale locale; if(p.equals(""zh-TW"")) { locale = Locale.TRADITIONAL_CHINESE; } else if(p.startsWith(""zh"")) { locale = Locale.CHINA; } else if(p.equals(""pt-BR"")) { locale = new Locale(""pt"", ""BR""); } else if(p.equals(""bn-IN"") || p.startsWith(""bn"")) { locale = new Locale(""bn"", ""IN""); } else { if(p.contains(""-"")) p = p.substring(0, p.indexOf('-')); locale = new Locale(p); } Locale.setDefault(locale); Configuration config = new Configuration(); config.locale = locale; context.getResources().updateConfiguration(config, context.getResources().getDisplayMetrics()); } }",KEEP KEEP KEEP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP,Remove Parameter
cleanup WorkspaceDaoImpl,"public void update(Workspace update) throws ConflictException, NotFoundException, ServerException { final DBObject query = new BasicDBObject(""id"", update.getId()); final DBObject dbWorkspace = collection.findOne(query); if (dbWorkspace == null) { throw new NotFoundException(""Workspace not found "" + update.getId());","public void update(Workspace workspace) throws ConflictException, NotFoundException, ServerException { final DBObject query = new BasicDBObject(""id"", workspace.getId()); if (collection.findOne(query) == null) { throw new NotFoundException(""Workspace not found "" + workspace.getId());",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
CmsDetailOnlyContainerUtil: improved misleading comment.,"String detailPath,","String detailRootPath,",KEEP REP,Rename Parameter
add(ivalidator<t>)->add(ivalidator<? super t>),public final List<IValidator<? super T>> getValidators(),public final List<IValidator<T>> getValidators(),KEEP KEEP ADD ADD REP KEEP,Change Return Type
Narrower interface between SandboxClassLoader and ClassInstrumentor.,"Subject(ClassNode classNode, InstrumentationConfiguration config, ClassNodeProvider classNodeProvider, boolean containsStubs) {","Subject(SandboxClassLoader sandboxClassLoader, TypeMapper typeMapper, ClassNode classNode, boolean containsStubs) { this.sandboxClassLoader = sandboxClassLoader; this.typeMapper = typeMapper;",REP REP REP REP REP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL,Add Parameter
Pass scoped ComponentContexts to shouldUpdate,"ComponentContext previousScopedContext, Component previous, ComponentContext nextScopedContext, Component next) {","final boolean shouldComponentUpdate(Component previous, Component next) {",REP REP REP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
HDFS-6931. Move lazily persisted replicas to finalized directory on DN startup. (Arpit Agarwal),final LazyWriteReplicaTracker lazyWriteReplicaMap) throws IOException { if (lazypersistDir.exists()) { int numRecovered = moveLazyPersistReplicasToFinalized(lazypersistDir); FsDatasetImpl.LOG.info( "Recovered " + numRecovered + " replicas from " + lazypersistDir); },void getVolumeMap(ReplicaMap volumeMap) throws IOException {,REP REP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
refactored,"protected Pattern translateMaskIntoRegex(FacesContext context, InputMask inputMask) {",protected Pattern translateMaskIntoRegex(InputMask inputMask) {,KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Added Cuboid update methods for chunks/regions/worlds,"public CuboidChangeEvent(CuboidBuffer buffer, Cause<?> cause) {","public CuboidChangeEvent(CuboidBuffer buffer, Plugin plugin) {",KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Use EnumMap for type-safe per-mode slack configuration,"public static EnumMap<TransitMode, Integer> mapToDomain(Object value) { var result = new EnumMap<TransitMode, Integer>(TransitMode.class);","public static Map<TransitMode, Integer> mapToDomain(Object value) { Map<TransitMode, Integer> result = new HashMap<>();",KEEP KEEP REP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP KEEP ADD REP,Change Return Type
Download and install IM service,"private Response doDownloadArtifact(String artifact, String version, boolean publicAccess) throws IOException {","private Response doDownloadArtifact(String artifact, String version, boolean checkPublicAccess) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Rename statehandler to TreeState,public synchronized void acquireStateAndReleaseTree(boolean acquireTreeStateOnRelease) { if (acquireTreeStateOnRelease || shouldAcquireTreeStateOnRelease()) { acquireTreeState();,public synchronized void acquireStateAndReleaseTree(boolean acquireStateHandlerOnRelease) { if (acquireStateHandlerOnRelease || shouldAcquireStateHandlerOnRelease()) { acquireStateHandler();,KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP REP,Rename Parameter
"Show Nearby results from multiple languages, and merge duplicates.",@NonNull public List<NearbyPage> nearbyPages(@NonNull WikiSite wiki) {,@NonNull public List<NearbyPage> nearbyPages() {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Stop inheriting liveRatio and liveRatioComputedAt from previous memtables,public Memtable(ColumnFamilyStore cfs),"public Memtable(ColumnFamilyStore cfs, Memtable previous)",KEEP KEEP REP DEL DEL,Remove Parameter
fixed Date message formatting of the date,"private RangeValidator(Date minimum, Date maximum, String format)","private RangeValidator(Date minimum, Date maximum)",KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Added database migration to remove field 'db_type' and add field 'database_vendor_type' for GeoIpResolverConfig.,abstract boolean createDataProvider(File configFile);,abstract P createDataProvider(File configFile);,KEEP REP KEEP KEEP,Change Return Type
use global,private void storeProperties() { if(currentRootItemType.isEmpty()),"private void storeProperties(Node root, String type) { if(type.isEmpty())",KEEP KEEP REP DEL DEL DEL KEEP REP,Remove Parameter
#5983 SQL Server: use synonyms in schema child objects search,"public List<SQLServerObject> getChildren(@NotNull DBRProgressMonitor monitor) throws DBException { List<SQLServerObject> result = new ArrayList<>(); result.addAll(tableCache.getAllObjects(monitor, this)); result.addAll(synonymCache.getAllObjects(monitor, this)); return result;","public Collection<? extends SQLServerTableBase> getChildren(@NotNull DBRProgressMonitor monitor) throws DBException { return tableCache.getAllObjects(monitor, this);",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP DEL,Change Return Type
refactor: Improve ToStingBuilder,public ValueObjectToStringBuilder addText(String label) { sb.append(label); skipSep = true; return this; },public ValueObjectToStringBuilder addLbl(String label) { sb.append(label); skipSep = true; return this; },KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
use a scheduled executor to take care of watch dog task initial delay,private static ScheduledExecutorService createExecutor() {,private static ThreadPoolExecutor createExecutor() {,KEEP KEEP REP KEEP KEEP,Change Return Type
Add shadow support for registerReceiver with permission,"Intent registerReceiverWithContext(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler, Context context) {","Intent registerReceiverWithContext(BroadcastReceiver receiver, IntentFilter filter, Context context) {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD KEEP KEEP KEEP,Add Parameter
"UI Upgrades (understood that we need the components to be scalable will push that in next commit , and rename the fx:id too ) , dropped the list.",private void onSelectFileClicked() {,private void fileSelected() {,KEEP KEEP REP KEEP,Rename Method
Unwinding now differentiates between primitive and reference types to improve performance.,"private void instantiateCodeEntry(WasmInstance instance, CodeEntry codeEntry) {","private void instantiateCodeEntry(WasmContext context, WasmInstance instance, CodeEntry codeEntry) {",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
rename method in CategoryManager to be more descriptive; fix tag and category grouping when tags aer added / removed,public static Category categoryFromTagName(TagName tagName) {,public static Category fromTagName(TagName tagName) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
[TE] consider anomaly type during merge (#4613),AnomalyType type) {,"public AnomalyKey(String metric, String collection, DimensionMap dimensions, String mergeKey, String componentKey) {",REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
Use duration instead of minutes,"Duration freeTransferWindow,","int freeTransferWindowInMinutes,",REP REP,Rename Parameter
Make protocOpts() public.,"@StarlarkMethod(name = ""experimental_protoc_opts"", structField = true, documented = false) public ImmutableList<String> protocOptsForStarlark() throws EvalException {",public ImmutableList<String> protocOptsForStarlark(StarlarkThread thread) throws EvalException { ProtoCommon.checkPrivateStarlarkificationAllowlist(thread);,ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP REP DEL KEEP KEEP KEEP DEL,Remove Parameter
Add dialog box for designation submission error,"protected void changeDesignationOfBugRightNow(final BugInstance bug, final String designationKey) {","protected boolean changeDesignationOfBug(final BugInstance bug, final String designationKey) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
ZLBoolean3 => org.fbreader.util.Boolean3,public Boolean3 isChecked() {,public ZLBoolean3 isChecked() {,KEEP REP KEEP KEEP,Change Return Type
SONARJAVA-2257 Use the symbol corresponding to the parameter causing exception for flow,"private static Set<List<JavaFileScannerContext.Location>> flowsForMethodArguments(ExplodedGraph.Node node, ExceptionalCheckBasedYield yield, MethodInvocationTree mit) {","private static Set<List<JavaFileScannerContext.Location>> flowsForMethodArguments(ExplodedGraph.Node node, MethodInvocationTree mit) {",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Added method to compute estimator from pooled covariance matrices (for linear discriminant analysis). Made some types more specific. Made Javadoc more precise.,"private DenseVector weightedMean(double[][] matrix, double[] weights) {","private Vector weightedMean(double[][] matrix, double[] weights) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
2009.12.21 (1.43n11),private static void updateRoi() {,private static void updateRois() {,KEEP KEEP KEEP REP KEEP,Rename Method
Issue #1155: CallableBuilder: **Major rewrite** to accomodate the $call$variadc() methods needed for #1155.,"ProducedType callableTypeModel, boolean delegateDefaultedCalls) {","ProducedType callableTypeModel, boolean noDelegates) {",KEEP KEEP KEEP REP KEEP,Rename Parameter
CallableBuilder: Make parameterTypes a member,"private JCExpression getTypedParameter(Parameter param, int argIndex, boolean varargs){","private JCExpression getTypedParameter(Parameter param, int argIndex, boolean varargs, java.util.List<ProducedType> parameterTypes){",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL,Remove Parameter
Fixes to Truffle compilation problems. Refactoring of the trufflerizer code. Updated to newer Graal version.,"private static Object constructReplacementPrefix(RNode[] seq, RNode rhs, RNode replacementArg) {","private static Object constructReplacementPrefixNew(RNode[] seq, RNode rhs, RNode replacementArg) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
ItemsLoadingHandler has been extracted from NetworkCatalogActions$ExpandCatalogHandler,"public void onFinish(String errorMessage) { afterUpdateCatalog(errorMessage, myTree.ChildrenItems.size() == 0);","private void onFinish(String err) { afterUpdateCatalog(err, myTree.ChildrenItems.size() == 0);",REP KEEP KEEP REP KEEP REP KEEP KEEP KEEP,Rename Parameter
Trivial refactoring: change the return type of methods related to enclosing constructor call,public ConstructorCallExpression popEnclosingConstructorCall() {,public Expression popEnclosingConstructorCall() {,KEEP REP KEEP KEEP,Change Return Type
Extract conversion to bytes out of lambda,"void testInvalidJsonData(String postDataAsString) throws JsonProcessingException, UnsupportedEncodingException { byte[] postData = postDataAsString.getBytes(StandardCharsets.UTF_8);","void testInvalidJsonData(String postData) throws JsonProcessingException, UnsupportedEncodingException {",KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Rename Parameter
Hiding the type OTHER,"protected EditType buildEventType(int type, boolean yearOptional) { return new EventEditType(type, Event.getTypeResource(type)).setYearOptional(yearOptional) .setUnspecifiedType(type == Event.TYPE_OTHER);","protected EventEditType buildEventType(int type, boolean yearOptional) { return new EventEditType(type, Event.getTypeResource(type)).setYearOptional(yearOptional);",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD REP,Change Return Type
CATROID-279 Fix unnecessary vibration,private static synchronized boolean startVibrate() {,private static synchronized void startVibrate() {,KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Auto-generate wrappers for RFFI functions in testrffi,"public void SET_NAMED_FASTR(Object x, int v) {","public Object SET_NAMED_FASTR(Object x, int v) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Merging r1619271 from trunk to branch-2.,"int numDataNodes, StorageType[][] storageTypes, boolean format, boolean manageNameDfsDirs,","int numDataNodes, StorageType storageType, boolean format, boolean manageNameDfsDirs,",KEEP KEEP REP REP KEEP KEEP KEEP KEEP,Rename Parameter
Colored Foreign Schemas in ERD #8713,public int getSchemeIndex(DBSObject scheme) { Integer index = schemeMap.get(scheme);,public int getSchemeIndex(DBSObject dataSource) { Integer index = schemeMap.get(dataSource);,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Consolidate usage stats in 2-hour intervals. Speeds up consolidation and speeds up /stats pageload.,"private void consolidateDate(HttpServletResponse resp, PersistenceManager pm, String dateStr, String dateEndStr)","private void consolidateDate(HttpServletRequest req, HttpServletResponse resp, PersistenceManager pm, String dateStr)",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
UP-1848 Work on providing PortalControlStructures to IPrivileged for events,private Set<String> getListeningChannels(String talkerChannelSubscribeId) { return iccTalkers.get(talkerChannelSubscribeId);,private Set getListeningChannels(String talkerChannelSubscribeId) { return (Set)iccTalkers.get(talkerChannelSubscribeId);,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
[TE] generalized baseline granularity (#2683),"private Baseline parseOffset(String offset, String timeZoneString) { DateTimeZone timeZone = DateTimeZone.forID(timeZoneString);","private Baseline parseOffset(MetricSlice baseSlice, String offset, String timezone) { long timestamp = baseSlice.getStart(); boolean isDailyData = this.isDailyData(baseSlice);",KEEP KEEP REP DEL DEL KEEP KEEP REP KEEP REP REP KEEP REP DEL DEL DEL DEL,Rename Parameter
UP-2684 Refactoring the IPermissible API and implementations as a JPA-backed store of permission owners and activities.  This commit also includes adding import support for the new owner data objects and cleaning up the existing permission sets to use permission owners that do not refer to IChannel-based owner names.  A future commit will include refactoring of the permission owner target provider changes.,public Set<String> getTargetTokens();,public String[] getTargetTokens();,KEEP REP KEEP,Change Return Type
Use fully qualified classes instead of importing them for deprecated classes,public static org.apache.log.Logger getLoggerForClass() {,public static Logger getLoggerForClass() {,KEEP KEEP REP KEEP KEEP,Change Return Type
"replace loops, iterators, etc. with java 1.5 for-each where applicable",protected final String[] filterEmpty(String[] stringArray),protected final String[] filterEmpty(String[] array),KEEP KEEP KEEP KEEP REP,Rename Parameter
IAM policy parsing now validates json EUCA-12829,final boolean validating ) {,private PolicyParser( final PolicyAttachmentType attachmentType  ) {,DEL DEL KEEP REP REP DEL KEEP KEEP,Add Parameter
provide functionality for bug rank categories,public Collection<BugCategory> getBugCategories() { return bugCategories.values();,public Set<BugCategory> getBugCategories() { return bugCategoryList;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
`parameterizeSAM`: no type parameters from method context,"private static Map<GenericsType, GenericsType> correlateTypeParametersAndTypeArguments(final ClassNode declaringClass, final ClassNode actualReceiver, final boolean tryToFindExactType) {","private static Map<GenericsType, GenericsType> doMakeDeclaringAndActualGenericsTypeMap(final ClassNode declaringClass, final ClassNode actualReceiver, final boolean tryToFindExactType) { Map<GenericsType, GenericsType> map = Collections.emptyMap();",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Method
Refactor blaze server code:,"boolean sandboxed,","boolean isSpeculative,",KEEP REP,Rename Parameter
Merge/Rollup task scheduler for offline tables. (#7178),"public Map<String, Long> getWatermarkMap() {","public Map<Granularity, Long> getWatermarkMap() {",KEEP REP KEEP KEEP KEEP,Change Return Type
fonts catalog rescan has been added,"public static void fillFamiliesList(ArrayList<String> families, boolean forceReload) {",public static void fillFamiliesList(ArrayList<String> families) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
SONARJAVA-2805 Fix injection of checkRegistrars in SonarSomponents,"@Nullable CheckRegistrar[] checkRegistrars) { this(fileLinesContextFactory, fs, javaClasspath, javaTestClasspath, checkFactory, checkRegistrars, null);","CheckFactory checkFactory, @Nullable ProjectDefinition projectDefinition) { this(fileLinesContextFactory, fs, javaClasspath, javaTestClasspath, checkFactory, projectDefinition, null);",DEL DEL KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
SQLiteBooksDatabase intialization with no waiting messages,private void migrate() {,private void migrate(Context context) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Add test + fix on sum by workspace,"public StorageInitializer(DataSource dataSource, boolean cleanOnValidationError) throws SQLException {","public StorageInitializer(DataSource dataSource, boolean cleanOnValidationError, String database) {",KEEP KEEP KEEP KEEP REP REP REP KEEP,Remove Parameter
Migrated DND to WidgetBuilder.,"public void encodeEnd(FacesContext context, UIComponent component) throws IOException { ResponseWriter writer = context.getResponseWriter();","public void encodeEnd(FacesContext facesContext, UIComponent component) throws IOException { ResponseWriter writer = facesContext.getResponseWriter();",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Remove duplicated code in ExecUtil,"public static int execute(ProcessBuilder processBuilder, long terminationCheckInterval, TimeUnit units, ProcessTerminator terminator) throws SecurityException, IOException { return waitForTermination(processBuilder.command().get(0), processBuilder.start(), terminationCheckInterval, units, terminator);","public static int execute(ProcessBuilder processBuilder, long timeOut, TimeUnit units, ProcessTerminator terminator) throws SecurityException, IOException { return waitForTermination(processBuilder.command().get(0), processBuilder.start(), timeOut, units, terminator);",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
WICKET-4718 ResourceStreamResource#getResourceStream() is called multiple times,private void close(IResourceStream stream),private void close(),KEEP KEEP ADD REP,Add Parameter
Pass MediaWrapper objects to AudioService,public void load(MediaWrapper media) { ArrayList<MediaWrapper> arrayList = new ArrayList<MediaWrapper>(); arrayList.add(media);,public void load(String mediaPath) { ArrayList<String> arrayList = new ArrayList<String>();,KEEP KEEP REP REP KEEP REP KEEP KEEP KEEP ADD REP,Rename Parameter
simplify RAttributes,"public void put(String newName, Object newValue) { int pos = find(newName); if (pos == -1) { if (size == names.length) { names = Arrays.copyOf(names, (size + 1) * 2); values = Arrays.copyOf(values, (size + 1) * 2); assert names.length == values.length;","public void put(String name, Object value) { if (value1 == null) { name1 = name; value1 = value; } else if (value1 instanceof ArrayList) { @SuppressWarnings(""unchecked"") ArrayList<AttrInstance> list = (ArrayList<AttrInstance>) value1; AttrInstance attr = find(list, name); if (attr != null) { attr.value = value; return; } list.add(new AttrInstance(name, value)); } else { if (name1.equals(name)) { value1 = value; return; } else { ArrayList<AttrInstance> list = new ArrayList<>(2); list.add(new AttrInstance(name1, value1)); list.add(new AttrInstance(name, value)); value1 = list;",KEEP KEEP KEEP REP KEEP REP KEEP REP REP DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL KEEP REP REP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP REP REP KEEP REP KEEP REP REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP REP REP REP REP REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
"Changed to use InnerClassAccess objects, which record the","public Map<String, InnerClassAccess> getAccessMapForClass(String className)","public Map<String, XField> getAccessMapForClass(String className)",KEEP KEEP REP KEEP KEEP,Change Return Type
5370 address codacy complaint,"private synchronized static Map<String, List<AbstractFile>> runFileSearch(","private synchronized static LinkedHashMap<String, List<AbstractFile>> runFileSearch(",KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Allow specifying datacentersto participate in a repair,"public RepairSession(Range<Token> range, String keyspace, boolean isSequential, Collection<String> dataCenters, String... cfnames)","public RepairSession(Range<Token> range, String keyspace, boolean isSequential, boolean isLocal, String... cfnames)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP,Rename Parameter
merge -c 1508086 FIXES: HADOOP-9698. [RPC v9] Client must honor server's SASL negotiate response (daryn),"private synchronized AuthMethod setupSaslConnection(final InputStream in2, final OutputStream out2) throws IOException, InterruptedException { saslRpcClient = new SaslRpcClient(remoteId.getTicket(), remoteId.getProtocol(), remoteId.getAddress(), conf);","private synchronized boolean setupSaslConnection(final InputStream in2, final OutputStream out2) throws IOException { saslRpcClient = new SaslRpcClient(authMethod, token, serverPrincipal, fallbackAllowed);",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP REP REP REP REP,Change Return Type
Issue #299: Generate overloaded methods for defaulted parameters,"public List<JCTree> transform(Tree.AnyMethod def, ClassDefinitionBuilder classBuilder) {","public JCMethodDecl transform(Tree.AnyMethod def, ClassDefinitionBuilder classBuilder) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
SONAR-17393 Add OWASP ASVS report to 'api/security_reports/show' API call.,"private List<SecurityStandardCategoryStatistics> searchWithDistribution(SearchSourceBuilder sourceBuilder, String version) {","private List<SecurityStandardCategoryStatistics> searchPciDss(SearchSourceBuilder sourceBuilder, String version) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
UP-2808 Move resource aggregator to external project.,"public Map<Resource, Long> getAdditionalResources();",public Set<Resource> getAdditionalResources();,KEEP ADD REP KEEP,Change Return Type
"Allow filtering on learned constraints in SECheck#flow, minor refactorings","public void reportIssue(Tree tree, String message, Set<List<JavaFileScannerContext.Location>> flows) {","public void reportIssue(Tree tree, String message, Set<List<JavaFileScannerContext.Location>> secondary) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
refactoring +getter,public ArrayList authors() {,public ArrayList getAuthors() {,KEEP KEEP REP KEEP,Rename Method
Add categories to Settings,private void addLycheePreferences() {,private void addExtraPreferences() {,KEEP KEEP REP KEEP,Rename Method
No need to pass context,CoverFetcher(MediaWrapper mediaWrapper){,"CoverFetcher(Activity context, MediaWrapper mediaWrapper){",REP DEL DEL KEEP,Remove Parameter
network code simplification,"private void showInitLibraryDialog(String error) { final DialogInterface.OnClickListener listener = new DialogInterface.OnClickListener() { public void onClick(DialogInterface dialog, int which) { if (which == DialogInterface.BUTTON_POSITIVE) { initLibrary(); } else { finish(); } } };",private void showTryAgainDialog(String error) {,KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Method
IAM permission checks on internal imaging service api,public static DiskImagingTask named(final AccountFullName owningAccount) { final DiskImagingTask task = new DiskImagingTask(); task.setOwnerAccountNumber(owningAccount.getAccountNumber());,public static DiskImagingTask named(final OwnerFullName ownerFullName) { final DiskImagingTask task = new DiskImagingTask(ownerFullName);,KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Rename Parameter
Enable configuration of ignored tables,CatalogConfiguration config) {,"Map<String, String> configMap) {",REP REP DEL KEEP,Rename Parameter
Added flag to transformExpression to force a non-raw expected type: #687,"private boolean needsRawCast(ProducedType exprType, ProducedType expectedType, boolean expectedTypeNotRaw) {","private boolean needsRawCast(ProducedType exprType, ProducedType expectedType) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
I tried to remove the dependency on Container for reasons described by,public MarkupParser newMarkupParser(final ContainerInfo containerInfo),public MarkupParser newMarkupParser(final MarkupContainer container),KEEP KEEP KEEP REP REP,Rename Parameter
Added futures for the chunk snapshot system,"public boolean cancel(boolean mayInterruptIfRunning) { return resultRef.compareAndSet(null, (T)CANCEL);","public boolean cancel(boolean mayInterrupt) { return false; } public void set(T result) { this.result.set(result); if (!done.compareAndSet(false, true)) { throw new IllegalStateException(""A SimpleFuture can not store more than 1 element"");",KEEP KEEP KEEP REP KEEP KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
"Fix overflow in ResultHolderFactory, add max capacity to PairArrayBasedResultHolder","public void ensureCapacity(int capacity) { if (capacity > _resultHolderCapacity) { _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, capacity);","public void ensureCapacity(int maxUniqueKeys) { if (maxUniqueKeys > _resultHolderCapacity) { _resultHolderCapacity = Math.max(_resultHolderCapacity * 2, maxUniqueKeys);",KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Splits out DebugLayout into DebugLayoutEditor,DebugLayoutNode(LithoLayoutResult result) { mResult = result; mNode = result.getInternalNode();,DebugLayoutNode(InternalNode node) { mNode = node;,REP REP KEEP ADD ADD ADD KEEP KEEP REP,Rename Parameter
'vector' built-in can create pairlists,"Object vectorCached(String mode, int length, @Cached(""mode"") String cachedMode, @Cached(""modeToType(mode)"") RType type) { return createType(type, length);","RAbstractVector vectorCached(String mode, int length, @Cached(""mode"") String cachedMode, @Cached(""modeToType(mode)"") RType type) { return type.create(length, false);",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Change Return Type
Fix doxygen warning in autopsy/datamodel,public Object accept(AutopsyItemVisitor v) { return v.visit(this); ,public <T> T accept(AutopsyItemVisitor<T> v) { return v.visit(this);,KEEP REP REP DEL KEEP KEEP KEEP KEEP,Change Return Type
Multi-select to share Part 2,private void updateDisplayOptions(boolean isSearchModeChanging) {,private void updateDisplayOptions(boolean isIconifiedChanging) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
All test methods run in the same thread,"private void invokeBeforeClass(final Class clazz, final Sandbox sandbox) throws Throwable { if (!loadedTestClasses.containsKey(clazz)) { loadedTestClasses.put(clazz, sandbox);",private void invokeBeforeClass(final Class clazz) throws Throwable { if (!loadedTestClasses.contains(clazz)) { loadedTestClasses.add(clazz);,KEEP KEEP KEEP KEEP ADD ADD ADD REP KEEP KEEP KEEP KEEP REP KEEP ADD REP,Add Parameter
serialization: user Serializable instead of Object when writing to ObjectOutputStream,public int write(final File file) throws IOException,public void write(final File file) throws IOException,KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
make ConfigUtils testable without illegal reflective access (#8530),"private static JsonNode applyConfigWithEnvVariables(Environment environment, JsonNode jsonNode) {",private static JsonNode applyConfigWithEnvVariables(JsonNode jsonNode) {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
refactor `BinaryExpressionTransformer`,"private ClassNode findType(final Expression e) { return staticCompilationTransformer.getTypeChooser().resolveType(e, staticCompilationTransformer.getClassNode());","private ClassNode findType(final Expression expression) { ClassNode classNode = staticCompilationTransformer.getClassNode(); return staticCompilationTransformer.getTypeChooser().resolveType(expression, classNode);",KEEP KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL KEEP REP REP,Rename Parameter
Add support for Xen Secure-Console Intergration in console proxy,public static boolean authenticateConsoleAccess(ConsoleProxyClientParam param) {,"public static boolean authenticateConsoleAccess(String host, String port, String vmId, String sid, String ticket) {",KEEP KEEP KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Remove Parameter
Test function reference when showing the tip about help.local.,private void showBrowserWarning(String url) {,"private void showBrowserWarning(Object targetObject, String url) {",KEEP KEEP REP DEL DEL KEEP KEEP,Remove Parameter
Small format change to toString().  Changed "makeEmpty()",public void initEntryFact(ObligationFactory factory) {,public void makeEmpty() {,KEEP KEEP ADD REP KEEP,Add Parameter
Add Datatable to Itemstacks,"public BiomeManager generate(CuboidShortBuffer blockData, int chunkX, int chunkY, int chunkZ) {","public void generate(CuboidShortBuffer blockData, int chunkX, int chunkY, int chunkZ) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
HDFS-4912. Merge 1502634 from trunk,"private void startFileInternal(FSPermissionChecker pc, String src,","private LocatedBlock startFileInternal(FSPermissionChecker pc, String src,",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Add convenience methods for account loading,public void onAccountsLoaded(List<AccountInfo> accounts) { updateDisplayedAccounts(accounts);,"public void onLoadFinished(Loader<List<AccountInfo>> loader, List<AccountInfo> data) { updateDisplayedAccounts(data); } @Override public void onLoaderReset(Loader<List<AccountInfo>> loader) {",KEEP KEEP REP REP DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.,synchronized void setReduceResourceRequest(Resource res) { this.reduceResourceRequest = res;,synchronized void setReduceResourceRequest(int mem) { this.reduceResourceRequest = mem;,KEEP KEEP REP REP KEEP KEEP KEEP REP,Rename Parameter
2013.04.26 (1.47o),public void setPrecision(int decimalPlaces) { this.precision = decimalPlaces;,public void setPrecision(int precision) { this.precision = precision;,KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
"Refactor attribute reading in shadow views to support all constructors. View subclasses should override applyAttributes, not __constructor__.",@Override public void applyAttributes() { super.applyAttributes();,"@Override public void __constructor__(Context context, AttributeSet attributeSet) { super.__constructor__(context, attributeSet);",KEEP KEEP KEEP REP DEL DEL DEL KEEP REP DEL,Remove Parameter
Remove singleton for PinotLLCRealtimeSegmentManager and SegmentCompletionManager (#4102),"public static void buildLowLevelRealtimeIdealStateFor(PinotLLCRealtimeSegmentManager pinotLLCRealtimeSegmentManager, String realtimeTableName, TableConfig realtimeTableConfig, IdealState idealState, boolean enableBatchMessageMode) {","public static void buildLowLevelRealtimeIdealStateFor(String realtimeTableName, TableConfig realtimeTableConfig, IdealState idealState, boolean enableBatchMessageMode) {",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
"Calculate offset for baselines using Period instead of millis, so that DST is handled correctly (#1183)","public static Period getBucketSizePeriodForDataset(DatasetConfigDTO datasetConfig, AnomalyFunctionDTO anomalyFunction) { Period bucketSizePeriod = null;","public static long getBucketSizeInMSForDataset(DatasetConfigDTO datasetConfig, AnomalyFunctionDTO anomalyFunction) { long bucketMillis = 0;",KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP REP KEEP REP,Change Return Type
remove use of reflection with RCustomBuiltinNodes,public ReflectiveNodeFactory(Class<? extends RBuiltinNode> clazz) {,"public ReflectiveNodeFactory(Class<? extends RBuiltinNode> clazz, Constructor<? extends RBuiltinNode> constructor) {",KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL KEEP,Remove Parameter
Revert show/hide system for fragments,private void restoreFragmentsStack(FragmentManager fm) {,"private void restoreFragmentsStack(Bundle savedInstanceState, FragmentManager fm) {",KEEP KEEP REP DEL DEL KEEP KEEP,Remove Parameter
Fix personal data statistics,"private static void putPossibleUsersAsFilter(Map<String, String> context, SecurityContext securityContext) {","private static void putCurrentUserAsFilter(Map<String, String> context, SecurityContext securityContext) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
Better covers layout in the NetworkLibrary,"private void setupCover(final ImageView coverView, NetworkTree tree, int width, int height) {","protected void setupCover(final ImageView coverView, NetworkTree tree, int maxWidth, int maxHeight) { coverView.setScaleType(ImageView.ScaleType.CENTER_INSIDE);",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP DEL,Add Parameter
Unit tests support for Sulong aux cache AOT tests,protected boolean evaluateSourceOnly() { return TestEngineConfig.getInstance().evaluateSourceOnly();,"protected Map<String, String> getContextOptions() { return TestEngineConfig.getInstance().getContextOptions();",KEEP REP REP DEL KEEP KEEP REP,Change Return Type
Generalise by using super interfaces,"public static Destination lookupDestination(Context context, String name) throws NamingException {","public static Topic lookupTopic(Context context, String name) throws NamingException {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Codeacy fixes,"private List<AbstractFile> addCaseDbMatches(CorrelationAttribute corAttr, Case openCase) throws NoCurrentCaseException, TskCoreException, EamDbException {","private List<AbstractFile> AddCaseDbMatches(CorrelationAttribute corAttr, Case openCase) throws NoCurrentCaseException, TskCoreException, EamDbException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Sometimes my brain just breaks...,private boolean isSupportedProtocol(URL url),private boolean isUnsupportedProtocol(URL url),KEEP KEEP REP KEEP,Rename Method
Implement arbitrary superclasses for Pods (known at build time) with subclasses generation.,"private Pod(Class<? extends T> podClass, int fieldsSize, byte[] referenceMap) { this.podClass = podClass;","private Pod(Class<T> superClass, int fieldsSize, byte[] referenceMap) { this.superClass = superClass;",KEEP ADD ADD REP REP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Create download manifest for import tasks.,"public VmTypeInfo getVmTypeInfo(final Partition partition, final String instanceId) throws MetadataException { return this.bootSet.populateVirtualBootRecord(this.vmType, partition, instanceId);",public VmTypeInfo getVmTypeInfo() throws MetadataException { return this.bootSet.populateVirtualBootRecord(this.vmType);,KEEP KEEP ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Remove columnName usage in scripting api (#14094),"private List<SortSpec> getSortSpecs(List<ImmutablePair<Metric, SeriesSpec>> series) { return series.stream() .filter(e -> e.getKey().sort() != null) .map(sortable -> SeriesSort.create(sortable.getValue().literal(), sortable.getKey().sort()))","private List<SortSpec> getSortSpecs(final Collection<Metric> groupings) { return groupings.stream() .filter(sortable -> sortable.sort() != null) .map(sortable -> SeriesSort.create(sortable.columnName(), sortable.sort()))",KEEP KEEP REP REP REP KEEP KEEP REP REP KEEP REP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
provide context for max invocation times,"public void handleCall(long nanoTime, Object context) {",public void handleCall(long nanoTime) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
fixed OOM issue for text model,ZLTextModelImpl(CharStorage storage) { myStorage = storage;,ZLTextModelImpl(int dataBlockSize) { myDataBlockSize = dataBlockSize;,REP REP KEEP REP KEEP REP,Rename Parameter
Fix: PRENV should give the environment even in case of constant promises,"public static RPromise createEvaluatedPromise(PromiseState state, Closure closure, Object argumentValue, MaterializedFrame frame) { return traceDataCreated(new RPromise(state, closure, argumentValue, frame));","public static RPromise createEvaluatedPromise(PromiseState state, Closure closure, Object argumentValue) { return traceDataCreated(new RPromise(state, closure, argumentValue));",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
cosmetics,"protected void updateScriptSrcOrType(String name, String value) {","protected void updateSrcOrScriptTypeValue(String name, String value) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Replace CarouselResponsiveOptions with ResponsiveOptions,"public List<ResponsiveOption> getResponsiveOptions() { return (List<ResponsiveOption>) getStateHelper().eval(PropertyKeys.responsiveOptions, null);","public List<CarouselResponsiveOption> getResponsiveOptions() { return (List<CarouselResponsiveOption>) getStateHelper().eval(PropertyKeys.responsiveOptions, null);",KEEP REP KEEP KEEP KEEP REP KEEP KEEP,Change Return Type
Bug 56554 : the script cache key is now automatically generated,"protected ScriptingBeanInfoSupport(Class<? extends TestBean> beanClass, String[] languageTags, ResourceBundle rb) {","protected ScriptingBeanInfoSupport(Class<? extends TestBean> beanClass, String[] LANGUAGE_TAGS, ResourceBundle rb) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Rename TreeFactory to LazyTree,"LazyTree<State> lazyTree,","TreeFactory<State> treeFactory,",REP REP,Rename Parameter
Revert ServiceInterceptor changes from 7.2.12 #3167,"protected void logException(Throwable e, ProceedingJoinPoint ctx) {","protected void logException(Throwable e, MethodInvocation invocation) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Added expiration metadata to the download manifest,"String data, Date expiration) throws EucalyptusCloudException {","private static void putManifestData(@Nonnull EucaS3Client s3Client, String bucketName, String objectName, String data ) throws EucalyptusCloudException {",DEL DEL DEL DEL DEL DEL KEEP REP REP REP DEL DEL DEL KEEP KEEP KEEP,Add Parameter
Improve handling of ordered broadcasts,"private void postToWrappers(List<Wrapper> wrappers, Intent intent) {","private void postToWrappers(List<Wrapper> wrappers, Intent intent, String receiverPermission) {",KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
FISH-6775 Reactivate old CoyoteAdapter normalisation,public static boolean normalize(DataChunk uriDC) {,public static boolean normalize(MessageBytes uriMB) {,KEEP KEEP KEEP REP REP KEEP,Rename Parameter
combine builtin removes attributes,public RIntVector pass(RIntSequence vector) {,public RIntSequence pass(RIntSequence vector) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Add 2 rules to OpenAPI Normalizer (#14463),"public Schema normalizeSchema(Schema schema, Set<Schema> visitedSchemas) {","public void normalizeSchema(Schema schema, Set<Schema> visitedSchemas) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Fix adapter WriteValue setting from ReadValue,public MyPrimaryAdapterCellReadValue createReadValue(final StructReadAccess access) {,public AbstractAdapterCellReadValue createReadValue(final StructReadAccess access) {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
PINOT-2032 Ignore segments in error state when waiting for external view to reflect ideal state changes on segment refresh,"private boolean ifExternalViewChangeReflectedForState(String tableName, String segmentName, String targetState, long timeoutMillis) { long externalViewChangeCompletedDeadline = System.currentTimeMillis() + timeoutMillis; deadlineLoop: while (System.currentTimeMillis() < externalViewChangeCompletedDeadline) {","private boolean ifExternalViewChangeReflectedForState(String tableName, String segmentName, String targerStates, long timeOutInMills) { long timeOutTimeStamp = System.currentTimeMillis() + timeOutInMills; boolean isSucess = true; while (System.currentTimeMillis() < timeOutTimeStamp) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP REP DEL DEL DEL KEEP KEEP KEEP REP KEEP,Rename Parameter
SONAR-16370 computing new issues hashes. version takes into account issues that can be be on many components,"SourceLinesRepository sourceLinesRepository, CommonRuleEngine commonRuleEngine, IssueFilter issueFilter, RuleRepository ruleRepository,","public TrackerRawInputFactory(TreeRootHolder treeRootHolder, BatchReportReader reportReader, SourceLinesHashRepository sourceLinesHash, CommonRuleEngine commonRuleEngine, IssueFilter issueFilter, RuleRepository ruleRepository,",REP REP DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Rename TextMessage#getMessage() to #getText().,public TextMessage(final CharSequence text),public TextMessage(final CharSequence message),KEEP KEEP KEEP REP,Rename Parameter
remove android context field from LithoNode,"public void backgroundRes(final Context context, @DrawableRes int resId) {",public void backgroundRes(@DrawableRes int resId) {,KEEP KEEP ADD ADD ADD REP KEEP KEEP KEEP,Add Parameter
common: redesign ScrollbarTypePreference to StringListPreference,"ZLStringListPreference(Context context, ZLResource optResource, ZLResource valResource) {","ZLStringListPreference(Context context, ZLResource rootResource, String resourceKey) {",KEEP KEEP KEEP REP REP REP KEEP,Add Parameter
fix for resource wizard,"IModel<PrismContainerValueWrapper<ResourceObjectTypeDefinitionType>> valueModel) { ResourceObjectTypeWizardPanel wizard = new ResourceObjectTypeWizardPanel(ID_WIZARD_PANEL, getResourceModel(), valueModel) {","protected ResourceObjectTypeWizardPanel createObjectTypeWizard() { ResourceObjectTypeWizardPanel wizard = new ResourceObjectTypeWizardPanel(ID_WIZARD_PANEL, getResourceModel()) {",REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP ADD REP KEEP,Add Parameter
Revert changes to MockHttpServletRequest,public HttpSession getSession(boolean createNew),public HttpSession getSession(boolean b),KEEP KEEP KEEP REP,Rename Parameter
#squid:S1126,"public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; DualListModel<?> that = (DualListModel<?>) o; return Objects.equals(source, that.source) && Objects.equals(target, that.target);",public boolean equals(Object obj) { if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } final DualListModel<T> other = (DualListModel<T>) obj; if (this.source != other.source && (this.source == null || !this.source.equals(other.source))) { return false; } if (this.target != other.target && (this.target == null || !this.target.equals(other.target))) { return false; } return true;,KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP DEL KEEP REP DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP ADD REP REP KEEP KEEP REP REP REP REP REP REP REP REP REP REP REP DEL DEL DEL DEL DEL DEL,Rename Parameter
Fix logic for conditional case db add/post in modules/filetypeid/FileTypeDetector,"private String detect(AbstractFile file, boolean addToCaseDb) throws TskCoreException {","private String detect(AbstractFile file, boolean postToBlackBoard) throws TskCoreException {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
iss-6691,protected List<ByteBuffer> generateColumnValues(ByteBuffer key),protected List<ByteBuffer> generateColumnValues(),KEEP KEEP ADD REP,Add Parameter
- moved foreign exception handling from REPL to RErrorHandling,"public static void handleError(ExecutorService executor, Context context, PolyglotException eIn) {","public static void handleError(ExecutorService executor, Context context, PolyglotException e) { String errorText = getErrorText(executor, e); if (!errorText.isEmpty()) { run(executor, () -> context.eval(PRINT_ERROR).execute(errorText)); } } private static String getErrorText(ExecutorService executor, PolyglotException eIn) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP,Rename Parameter
Separated the concepts of block id and vertex label.  Block ids are used,public int getNumEdgeLabels() {,public int getNumLabels() {,KEEP KEEP REP KEEP,Rename Method
better authentication: no wait locks more,"private String runTokenAuthorization(String authUrl, String authToken, String code) {","private String runTokenAuthorization(String authUrl, String authToken, String accessToken) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Adding timing messages for verbosity level.,"public Kompile(KompileOptions kompileOptions, FileUtil files, KExceptionManager kem, Stopwatch sw, boolean cacheParses) {","public Kompile(KompileOptions kompileOptions, FileUtil files, KExceptionManager kem, boolean cacheParses) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
User profiles auth model,"boolean appliesTo(DBPDriver driver, Object context) {","boolean appliesTo(DBPDataSourceContainer dataSourceContainer, Object context) {",KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Fix: parent.frame(n) with n > 1 after do.call,"private RCaller(Frame callingFrame, Object nodeOrSupplier, boolean parentIsInternal) {","private RCaller(Frame callingFrame, Object nodeOrSupplier) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"Add experiment pair test, fix docs.","public CompilationUnit addCompilationUnit(String methodName, String compilationId, long period, CompilationUnit.TreeLoader treeLoader) {","public CompilationUnit addCompilationUnit(String methodName, String compilationId, long period, CompilationUnitTreeParser treeParser) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Removed textual representations of Duration and Time,Duration getTimeout();,String getTimeout();,REP KEEP,Change Return Type
Changed how service status updates are set and obtained,"public void publishCustomServiceStatus(String service, String status, String details) { eventPublisher.publishLocally(new ServiceEvent(service, status, details)); }","public void publishServiceStatus(String service, String status, String details) { eventPublisher.publishLocally(new ServiceEvent(service, status, details)); }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Non-working commit,IPersonAttributesGroupAdHocGroupTestDefinition definition);,IPersonAttributesGroupAdHocGroupTestDefinition personAttributesGroupAdHocGroupTestDefinition);,KEEP REP,Rename Parameter
HADOOP-9786. Merge change r1508304 from trunk.,static boolean isRpcInvocation(Object proxy) { if (proxy instanceof ProtocolTranslator) { proxy = ((ProtocolTranslator) proxy).getUnderlyingProxyObject(); } if (!Proxy.isProxyClass(proxy.getClass())) {,private boolean isRpcInvocation() { if (!Proxy.isProxyClass(currentProxy.getClass())) {,REP KEEP ADD REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Decouple ID-generation logic out of LayoutState,RenderUnitIdGenerator getRenderUnitIdGenerator() { return mRenderUnitIdGenerator;,RenderUnitIdMap getRenderUnitIdMap() { return mRenderUnitIdMap;,REP REP KEEP KEEP REP,Change Return Type
Make FakeToast count show() invocations and change "showed" to "shown",public static boolean shownToast(CharSequence message) {,public static boolean showedToast(CharSequence message) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
refactor: Remove `transitFactorIndex` and `wheelchairBoarding` from RaptorTripSchedule,public static <T extends DefaultTripSchedule> CostCalculator<T> createCostCalculator(,public static CostCalculator createCostCalculator(,KEEP KEEP ADD ADD ADD REP KEEP,Change Return Type
Fix XmlPullParserTest.,"void assertAttribute(XmlResourceParser parser,","void assertAttribute(XmlResourceParser parser, int attrIndex,",KEEP KEEP KEEP DEL DEL,Remove Parameter
updates for some initial debugging,private void setupDbChoice() {,private void setSelectedChoice(CentralRepoDbManager manager) {,KEEP KEEP REP DEL KEEP,Remove Parameter
More work on unconditional value deref analysis.,ValueNumberDataflow vnaDataflow) {,ValueNumberFactory valueNumberFactory) {,REP REP KEEP,Rename Parameter
PCS CSS endpoint fallback,"public CommunicationBridge(final WebView webView, final String baseUrl) {","public CommunicationBridge(final WebView webView, final String baseURL) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Added some smoother transitions to the editor,protected void updateAddFooterVisible(boolean animate) {,protected void updateAddFooterVisible() {,KEEP KEEP ADD REP KEEP,Add Parameter
merge YARN-439 from trunk. Flatten NodeHeartbeatResponse. Contributed by Xuan Gong.,private ApplicationIdPBImpl convertFromProtoFormat(ApplicationIdProto p) { return new ApplicationIdPBImpl(p); },private HeartbeatResponsePBImpl convertFromProtoFormat(HeartbeatResponseProto p) { return new HeartbeatResponsePBImpl(p);,KEEP REP REP KEEP KEEP KEEP KEEP ADD REP,Change Return Type
Don't load legacy resources at all when in ARSC mode.,protected AttributeSetBuilderImpl(Context context) { this.context = context;,protected AttributeSetBuilderImpl(ResourceTable resourceTable) { this.appResourceTable = resourceTable;,KEEP REP REP KEEP REP KEEP REP,Rename Parameter
Implemented RFE #2361 added ability for the grid layout to have a different column/row count when in landscape mode,"private void autoSizeCols(Container parent, int width, boolean landscapeMode) {","private void autoSizeCols(Container parent, int width) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Creation/deletion flow for replica groups sets in realtime (#4193),"public static String constructPropertyStorePathForInstancePartitions(String tableNameWithType) { return StringUtil.join(""/"", PROPERTYSTORE_INSTANCE_PARTITIONS_PREFIX, tableNameWithType);","public static String constructPropertyStorePathForInstancePartitions(String offlineTableName) { return StringUtil.join(""/"", PROPERTYSTORE_INSTANCE_PARTITIONS_PREFIX, offlineTableName);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
IAM region EUCA-10449,public CertificateEntity( final X509Certificate cert ) throws CertificateEncodingException { this.certificateId = Identifiers.generateCertificateIdentifier( cert ); this.pem = X509CertHelper.fromCertificate( cert );,"public CertificateEntity( String pem ) { this.pem = pem; } public static CertificateEntity newInstanceWithId( final String id ) { CertificateEntity c = new CertificateEntity( ); c.certificateId = id; return c; } @PrePersist public void generateOnCommit() { if( this.certificateId == null ) { this.certificateId = Crypto.generateAlphanumericId( 21, """" ); }",KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP REP KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP DEL KEEP REP REP REP REP REP KEEP REP REP DEL KEEP DEL,Rename Parameter
Changed  methods to get ChannelTypes and ChannelRegistry XML,public Document getChannelRegistryXML () throws SQLException { Document doc = new org.apache.xerces.dom.DocumentImpl(); Element registry = doc.createElement("registry"); doc.appendChild(registry);,"public Element getRegistryXML (org.apache.xerces.dom.DocumentImpl chanDoc, Element root, String catID, String role) throws Exception { String catid = """"; Element cat = null;",KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP REP REP KEEP ADD REP KEEP REP KEEP ADD REP,Change Return Type
UI: add menu option to clear history,public synchronized ArrayList<String> getSearchhistory(int size) {,public synchronized String[] getSearchhistory(int size) {,KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Remove the usage of PQL compiler (#6808),public static ExpressionContext getExpressionFromSQL(String sqlExpression) { if (sqlExpression.equals("*")) { return ExpressionContext.forIdentifier("*"); } else { return getExpression(CalciteSqlParser.compileToExpression(sqlExpression)); } },public static ExpressionContext getExpression(String stringExpression) { if (stringExpression.equals("*")) {,KEEP KEEP KEEP REP REP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
improve default chart tooltip.  fixe guideline tooltip.  fix guideline drag mouse event handler,public static Tooltip getDefaultTooltip() { return DEFAULT_TOOLTIP;,public static Tooltip getDragTooltip() { return DRAG_TOOLTIP;,KEEP KEEP KEEP REP KEEP KEEP REP,Rename Method
SONARJAVA-4185 Fix MethodTree#isOverriding() returning false instead of null when a parameter type is unknown,public static boolean hasUnknownTypePreventingOverrideResolution(Symbol.MethodSymbol symbol) {,public static boolean hasUnknownTypeInHierarchy(Symbol.MethodSymbol symbol) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
Rename the method types 'T' to 'R' so that they are not confused with the class type 'T',public static <R> IModel<R> of(SerializableSupplier<R> getter),public static <T> IModel<T> of(SerializableSupplier<T> getter),KEEP KEEP REP REP REP KEEP,Change Return Type
"Add default funnel for funnel heatmap view, based on collection metrics.","public FunnelHeatMapView getFunnelDataFor(String collection, FunnelSpec spec, long baselineMillis,","public FunnelHeatMapView getFunnelDataFor(String collection, String funnel, long baselineMillis,",KEEP KEEP KEEP KEEP REP REP KEEP KEEP,Rename Parameter
tweak for consistency,public final Class<? extends T> getType(),public final Class getType(),KEEP KEEP ADD ADD REP KEEP,Change Return Type
[TE] weekly holt winter algorithm prediction window alignment (#5052),private DateTime getTrainingStartTime(DateTime windowStart) {,private DateTime getTrainingStartTime(Interval window) {,KEEP KEEP REP REP KEEP,Rename Parameter
Workspace -> WorkspaceDescriptor,"protected List<WorkspaceDescriptor> getWorkspaces(String accountId) throws IOException { return httpMetricTransport.getResources(WorkspaceDescriptor.class, ""GET"", PATH_ACCOUNT_WORKSPACES.replace(PARAM_ACCOUNT_ID, accountId));","protected List<Workspace> getWorkspaces(String accountId) throws IOException { return httpMetricTransport .getResources(Workspace.class, ""GET"", PATH_ACCOUNT_WORKSPACES.replace(PARAM_ACCOUNT_ID, accountId));",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP KEEP,Change Return Type
[DO NOT MERGE] Clean up PeopleActivity in i-dev,private void setUpListFragment(FragmentManager fragmentManager) {,private void setUpAllFragment(FragmentManager fragmentManager) {,KEEP KEEP REP KEEP KEEP,Rename Method
`Book is already being downloaded` notification,"private void startFileDownload(final String urlString, final File file, final String title) { myDownloadingURLs.add(urlString);","private void startFileDownload(final String uriString, final File file, final String title) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD,Rename Parameter
Conditionally removing SIP call button,public synchronized static ResolveCache getInstance(Context context) {,public synchronized static ResolveCache getInstance(PackageManager packageManager) {,KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
described the logic of the assembly/managements methods in comments,"public ILayoutNode addNodes(ILayoutNode node, INodeId parentId, INodeId nextId) { return null; } public boolean deleteNode(INodeId nodeId) { return false; } public boolean moveNode(INodeId nodeId, INodeId parentId, INodeId nextId) { return false; } public INodeDescription updateNode(INodeDescription nodeDesc) { return null; } protected IALNode importNodes(ILayoutNode node) { return null; }","public ILayoutNode addNodeSubtree(ILayoutNode[] nodeDesc, INodeId parentId, INodeId nextId) { return null; }",KEEP KEEP REP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP,Rename Parameter
bugfix,"public void encodeExpansion(FacesContext context, DataTableRenderer renderer, DataTable table, int rowIndex) throws IOException { ResponseWriter writer = context.getResponseWriter(); String rowIndexVar = table.getRowIndexVar(); RowExpansion rowExpansion = table.getRowExpansion(); String styleClass = DataTable.EXPANDED_ROW_CONTENT_CLASS + "" ui-widget-content""; if(rowExpansion.getStyleClass() != null) { styleClass = styleClass + "" "" + rowExpansion.getStyleClass(); } table.setRowIndex(rowIndex); if(rowIndexVar != null) { context.getExternalContext().getRequestMap().put(rowIndexVar, rowIndex); } writer.startElement(""tr"", null); writer.writeAttribute(""class"", styleClass, null); writer.startElement(""td"", null); writer.writeAttribute(""colspan"", table.getColumnsCount(), null); table.getRowExpansion().encodeAll(context); writer.endElement(""td""); writer.endElement(""tr""); } public boolean shouldDecode(FacesContext context, DataTable table) { return false; } public boolean shouldEncode(FacesContext context, DataTable table) { return context.getExternalContext().getRequestParameterMap().containsKey(table.getClientId(context) + ""_rowExpansion""); } }","public void encodeExpansion(FacesContext context, DataTableRenderer renderer, DataTable table, int rowIndex, boolean hidden) throws IOException { ResponseWriter writer = context.getResponseWriter(); String rowIndexVar = table.getRowIndexVar(); RowExpansion rowExpansion = table.getRowExpansion(); String styleClass = DataTable.EXPANDED_ROW_CONTENT_CLASS + "" ui-widget-content""; if(rowExpansion.getStyleClass() != null) { styleClass = styleClass + "" "" + rowExpansion.getStyleClass(); } table.setRowIndex(rowIndex); if(rowIndexVar != null) { context.getExternalContext().getRequestMap().put(rowIndexVar, rowIndex); } writer.startElement(""tr"", null); if(hidden) { writer.writeAttribute(""style"", ""display:none"", null); } writer.writeAttribute(""class"", styleClass, null); writer.startElement(""td"", null); writer.writeAttribute(""colspan"", table.getColumnsCount(), null); table.getRowExpansion().encodeAll(context); writer.endElement(""td""); writer.endElement(""tr""); } public boolean shouldDecode(FacesContext context, DataTable table) { return false; } public boolean shouldEncode(FacesContext context, DataTable table) { return context.getExternalContext().getRequestParameterMap().containsKey(table.getClientId(context) + ""_rowExpansion""); } }",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Revert "Make portrait action bar icons consistent with landscape.","public void onItemClick(AdapterView<?> parent, View view, int position, long id) { popup.dismiss(); AccountWithDataSet account = adapter.getItem(position); final Intent intent = new Intent(PeopleActivity.this, GroupEditorActivity.class); intent.setAction(Intent.ACTION_INSERT); intent.putExtra(Intents.Insert.ACCOUNT, account); intent.putExtra(Intents.Insert.DATA_SET, account.dataSet); startActivityForResult(intent, SUBACTIVITY_NEW_GROUP); } }); popup.setModal(true); popup.show();","private void createNewGroup() { final Intent intent = new Intent(this, GroupEditorActivity.class); intent.setAction(Intent.ACTION_INSERT); startActivityForResult(intent, SUBACTIVITY_NEW_GROUP);",REP KEEP ADD ADD ADD ADD ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD KEEP KEEP ADD ADD ADD ADD,Add Parameter
UP-3171 Portlet event work,"Map<String, List<String>> parameters) {",String actionName) {,ADD REP REP KEEP,Rename Parameter
Fixes #DataExporter: Permit using custom DecimalFormat in ExcelOptions (#8964),"protected Number parseFormat(String value, DecimalFormat formatter) {","protected Object parseFormat(String value, DecimalFormat formatter) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
First part of syncEntities re-write. Added changes by @Olloth for SnapshotableHashMap.,public Collection<SpoutEntity> getAll() {,public List<SpoutEntity> getAll() {,KEEP REP KEEP KEEP,Change Return Type
First pass Source->Causal system,"public BlockChangeEvent(Block block, BlockSnapshot initial, Cause<?> reason) { super(block, reason);","public BlockChangeEvent(Block block, BlockSnapshot initial, Source source) { super(block, source);",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
use RDataFactory consistently; implement creation tracing; add PerfStats option,"public static boolean debugMatches(String element) { return matchesElement(element, Debug); } public static boolean matchesElement(String element, OptionValue<String> stringOption) { initialize(); String s = stringOption.getValue();",public static boolean debugMatches(String string) { String s = Debug.getValue();,KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP REP,Rename Parameter
DirectoryAdapter: fix crash,"public DirectoryAdapter(Context context) { DirectoryAdapter_Core(context, null);",public DirectoryAdapter() { DirectoryAdapter_Core(null);,KEEP ADD REP KEEP ADD REP,Add Parameter
Add a new Common Prop for Accessibility Role,boolean needsAccessibilityDelegate() {,boolean hasAccessibilityHandlers() {,KEEP REP KEEP,Rename Method
Interim commit.,"static JLabel addHeader(JPanel panel, GridBagLayout gridbagLayout, GridBagConstraints constraints, String headerString) {","static void addHeader(JPanel panel, GridBagLayout gridbagLayout, GridBagConstraints constraints, String headerString) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
[TE] Dataframe join tweaks (#1432),"private static DataFrame join(DataFrame left, DataFrame right, List<Series.JoinPair> pairs, String onSeriesLeft, String onSeriesRight) {","private static DataFrame join(DataFrame left, DataFrame right, List<Series.JoinPair> pairs) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
Refactor,"protected void renderDomEvents(FacesContext context, UIComponent component, String[] eventAttrs) throws IOException {","protected void renderEvents(FacesContext context, UIComponent component, String[] eventAttrs) throws IOException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Fix bug WebCloudIssueSyncTests now the uploaded event is called even when uploading is skipped.,"public void testDontUploadInTextMode() throws IOException, InterruptedException {","public void doNotTestDontUploadInTextMode() throws IOException, InterruptedException {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
SONARJAVA-2061 Stack and consume correctly exceptional symbolic values,private void enqueueExceptionalPaths(ProgramState ps) {,"private void enqueueExceptionalPaths(ProgramState ps, SymbolicValue.ExceptionalSymbolicValue exceptionSV) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
minor cleanups,"private void setupCover(Book book, PluginCollection pluginCollection) {",private void setupCover(Book book) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
[TE] more validation on max duration (#3982),"private Map<String, Object> buildDimensionWrapperProperties() {","private Map<String, Object> buildDimensionWrapperProperties(Map<String, Collection<String>> filterMaps) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
"Greatly improved memory usage of segment creation, removed creation and retention of large amounts of boxed primitives, removed memory inefficient cache, removed inefficient binary searches, added missing assertion for unsupported data type, added logging of pre-index creation per-column statistics, refactored forward index creator interface",public int[] indexOfMV(Object e) {,private Integer[] indexOfMV(Object e) {,REP REP KEEP KEEP KEEP,Change Return Type
WICKET-6913 Add generic type to IProxyFactory#createProxy(),"public static <T> T createProxy(final Class<T> type, final IProxyTargetLocator locator)","public static Object createProxy(final Class<?> type, final IProxyTargetLocator locator)",KEEP KEEP ADD REP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
UP-3702 Fix comparison bug,public List<JsonEntityBean> getChildren() {,public List getChildren() {,KEEP REP KEEP KEEP,Change Return Type
Add `YogaNodeProperties` implementation based on `ByteBuffer`,"private native boolean jni_YGNodeCalculateLayout(long nativePointer, float width, float height);","private native void jni_YGNodeCalculateLayout(long nativePointer, float width, float height);",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add node source positions to pod factory methods for inlining in runtime compilations.,"GraphBuilderConfiguration.Plugins graphBuilderPlugins, CompilationIdentifier compilationId, boolean forceTrackNodeSourcePosition) { super(debug, stubMethod, providers, wordTypes, graphBuilderPlugins, compilationId, null, forceTrackNodeSourcePosition || SubstrateOptions.parseOnce(), false);","public SubstrateGraphKit(DebugContext debug, ResolvedJavaMethod stubMethod, Providers providers, WordTypes wordTypes, GraphBuilderConfiguration.Plugins graphBuilderPlugins, CompilationIdentifier compilationId) { super(debug, stubMethod, providers, wordTypes, graphBuilderPlugins, compilationId, null, SubstrateOptions.parseOnce(), false);",DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP,Add Parameter
OC-6929,public DiscrepancyNote findByDiscrepancyNoteId(int discrepancyNoteId) { String query = "from " + getDomainClassName() + " do where do.discrepancyNoteId = :discrepancynoteid ";,public DiscrepancyNote findByParentId(int discrepancyNoteId) { String query = "from " + getDomainClassName() + " do where do.parentDnId = :discrepancynoteid ";,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Refactor ClassRegistry API,public BootClassRegistry(long loaderID) { super(loaderID);,public BootClassRegistry(EspressoContext context) { super(context);,KEEP REP REP KEEP REP,Rename Parameter
Refactor VehicleParkingService,private VehicleParking removeVehicleParkingEntranceVertexFromGraph(,private void removeVehicleParkingEntranceVertexFromGraph(,KEEP REP KEEP,Change Return Type
TE: Add test cases for PqlUtils between clause (#206),"static String getBetweenClause(DateTime start, DateTime end, TimeSpec timeFieldSpec) {","static String getBetweenClause(String collection, DateTime start, DateTime end, TimeSpec timeFieldSpec) {",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
color dialog update; tags processing in opds,"public SeekBarDrawable(Drawable base, String text, SeekBar slider) { mySlider = slider;","public SeekBarDrawable(Drawable base, String text, boolean labelOnRight) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP ADD ADD ADD,Rename Parameter
Added javadoc,"protected void stepContextualMenu(final StepVisual step, final int x, final int y) {","protected void stepContextualMenu(Point pt, final StepVisual step, final int x, final int y) {",KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
pass FacesContext to SearchExpressionResolvers,"public UIComponent resolveComponent(FacesContext context, UIComponent source, UIComponent last, String expression) {","public UIComponent resolveComponent(UIComponent source, UIComponent last, String expression) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Copy vectors for binary and unary arithmetic tests.,"public void testScalarUnboxing(BinaryArithmeticFactory factory, RScalarVector aOrig, RAbstractVector bOrig) { RAbstractVector a = aOrig.copy(); RAbstractVector b = bOrig.copy();","public void testScalarUnboxing(BinaryArithmeticFactory factory, RScalarVector a, RAbstractVector b) {",KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Make sure Flex access with many rides can be combined with the max number of possible transfers.,private void addAccessPaths(Collection<RaptorTransfer> accessPaths) { if(accessPaths == null) { return; },"private void addAccessPathsToState(boolean inTransit) { for (RaptorTransfer it : accessPaths) { if (!includeAccessInRound(it, inTransit)) { continue; }",KEEP KEEP REP DEL DEL DEL DEL DEL DEL KEEP KEEP REP REP REP KEEP REP KEEP,Rename Parameter
Check if quick access folders exist,private static Uri getFolderUri(File file) {,private static Uri getFolderUri(String type) {,KEEP KEEP KEEP REP REP KEEP,Rename Parameter
First cut of local var info for stack and reg slots.,"private DwarfLocalProperties addMethodLocalProperties(MethodEntry methodEntry) { DwarfLocalProperties localProperties = new DwarfLocalProperties(); methodLocalPropertiesIndex.put(methodEntry, localProperties); return localProperties; }","private DwarfMethodProperties addMethodProperties(MethodEntry methodEntry) { DwarfMethodProperties methodProperties = new DwarfMethodProperties(); methodPropertiesIndex.put(methodEntry, methodProperties); return methodProperties;",KEEP REP REP KEEP KEEP REP REP KEEP KEEP REP REP REP KEEP ADD REP,Change Return Type
Create new watchos_device_arm64 architecture,"PlatformType applePlatformType, AppleCpus appleCpus, boolean removeEnvironmentPrefix) {","PlatformType applePlatformType, AppleCpus appleCpus, boolean removeSimPrefix) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Extract StreetEdge cost computation into separate methods,"private TraversalCosts bicycleTraversalCost(RoutingRequest req, double speed) { double time = getEffectiveBikeDistance() / speed;","private double bicycleTraversalCost(RoutingRequest req, double speed) {",KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD,Change Return Type
Implemented basic block physics (falling sand and doublesteps so far).,public BlockPhysicsHandler getPhysics() { return physics; },public boolean hasPhysics() { return physics; },KEEP REP REP KEEP KEEP KEEP KEEP,Change Return Type
Removed property support,"protected String resolveDefaultSortIcon(ValueExpression columnSortByVE, ValueExpression tableSortByVE, String sortOrder) { String columnSortByExpression = columnSortByVE.getExpressionString(); String tableSortByExpression = tableSortByVE.getExpressionString();","protected String resolveDefaultSortIconFromExpression(ValueExpression columnSortBy, ValueExpression tableSortBy, String sortOrder) { String columnSortByExpression = columnSortBy.getExpressionString(); String tableSortByExpression = tableSortBy.getExpressionString();",KEEP KEEP REP REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Add Parameter
Implement targetsToSkip for Skymeld.,"private static ImmutableList<Label> autoConfigureTargetEnvironments( BuildConfigurationValue config, @Nullable Label environmentGroupLabel, TargetLookup targetLookup)","private List<Label> autoConfigureTargetEnvironments( BuildConfigurationValue config, @Nullable Label environmentGroupLabel)",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Change Return Type
Concrete Interface Members: Support for concrete getters,"public List<JCTree> transform(AttributeGetterDefinition decl, boolean forCompanion) {",public List<JCTree> transform(AttributeGetterDefinition decl) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
ConcurrentSkipListSet for manage mesh priority,"public HashMap<RenderMaterial, Map<BlockFace, ComposedMesh>> getMaterialsFaces() { return meshs;","public Set<Entry<RenderMaterial, Map<BlockFace, ComposedMesh>>> getMaterialsFaces() { return meshs.entrySet();",KEEP REP KEEP REP KEEP KEEP KEEP REP,Change Return Type
MAPREDUCE-6259. IllegalArgumentException due to missing job submit time. Contributed by zhihai xu,"protected void setupEventWriter(JobId jobId, AMStartedEvent amStartedEvent)","protected void setupEventWriter(JobId jobId, String forcedJobStateOnShutDown)",KEEP KEEP KEEP KEEP REP REP,Rename Parameter
HADOOP-12189. Improve CallQueueManager#swapQueue to make queue elements drop nearly impossible. Contributed by Zhihai Xu.,"Class<?> queueClass, Class<E> elementClass) { return (Class<? extends BlockingQueue<E>>)queueClass;","Class<?> queneClass, Class<E> elementClass) { return (Class<? extends BlockingQueue<E>>)queneClass;",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Make ComponentBodyGenerator compatible with RunMode.ABI,"public static TypeSpecDataHolder generate(SpecModel specModel, EnumSet<RunMode> runMode) {",public static TypeSpecDataHolder generate(SpecModel specModel) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
started compile listener,public void compileWarning(CompileEvent evt),public void compileWarning(CompileEvent arg0),KEEP KEEP KEEP REP,Rename Parameter
Moved RecyclerConfig#buildTarget into RecyclerCollectionComponentSpec,public float getRangeRatio() {,public double getRangeRatio() {,KEEP REP KEEP KEEP,Change Return Type
Adding trace logging into NettyServer for pinot-server request latency.,"public NettyServer(int port, RequestHandlerFactory handlerFactory, AggregatedMetricsRegistry registry, long defaultLargeQueryLatencyMs) {","public NettyServer(int port, RequestHandlerFactory handlerFactory, AggregatedMetricsRegistry registry) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
[core] Changes to execution classpath invalidate cache,"public void checkValidity(final RuleSets ruleSets, final ClassLoader auxclassPathClassLoader) {","public void checkValidity(final RuleSets ruleSets, final ClassLoader classLoader) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
YARN-2501. Enhanced AMRMClient library to support requests against node labels. Contributed by Wangda Tan.,String labelExpression) {,"private void addResourceRequest(Priority priority, String resourceName, Resource capability, T req, boolean relaxLocality) {",DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
Use ToolchainTypeRequirement in ToolchainContext and related classes.,"ToolchainTypeRequirement toolchainType,","Label toolchainTypeLabel,",REP REP,Rename Parameter
Added setting of parameter override value in the construction of the XML representing this channel description.,public boolean getParameterOverrideValue(String parameterName) { return ((Boolean)override.get(parameterName)).booleanValue();,public String getParameterOverrideValue(String parameterName) { return (String) override.get(parameterName);,KEEP REP KEEP KEEP KEEP KEEP REP DEL,Change Return Type
Removed plugin property from widget. Re-add if it is really needed,public GenericScreen() {,public GenericScreen(Plugin plugin) { super(plugin);,KEEP REP DEL KEEP DEL,Remove Parameter
[GR-2950] Fix a batch of builtins with CP issues,"private static RDoubleVector createResult(RAbstractVector source, double[] resultData, boolean complete, CopyOfRegAttributesNode copyAttrsNode, GetNamesAttributeNode getNamesNode,","private static RDoubleVector createResult(RAbstractVector source, double[] resultData, double base, CopyOfRegAttributesNode copyAttrsNode, GetNamesAttributeNode getNamesNode,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP,Rename Parameter
Presentational timeseries for anomalies tab (#736),"public static TimeSeriesResponse getTimeSeriesResponseForPresentation(AnomalyTimeSeriesView anomalyTimeSeriesView,","public static TimeSeriesResponse getTimeSeriesResponseForPresentation(BaseAnomalyFunction anomalyFunction,",KEEP KEEP KEEP REP REP,Rename Parameter
isNonLazyStateUpdate -> isLazyStateUpdate,"String key, StateUpdate stateUpdate, boolean isLazyStateUpdate) {",boolean isNonLazyStateUpdate) {,ADD ADD ADD ADD KEEP REP KEEP,Rename Parameter
Fix the function name for getAllTableNames (#1350),public List<String> getAllResourceNames() {,public List<String> getAllTableNames() {,KEEP KEEP REP KEEP,Rename Method
Provide biFunction for edges to be linked,private boolean connectVertexToStop(TransitStopVertex ts) {,"private boolean connectVertexToStop(TransitStopVertex ts, boolean wheelchairAccessible) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Change function variable name displayJMeterPropterties with displayJMeterProperties,public void setDisplayJMeterProperties(boolean displayJMeterProperties) { this.displayJMeterProperties = displayJMeterProperties;,public void setDisplayJMeterProperties(boolean displayJMeterPropterties) { this.displayJMeterProperties = displayJMeterPropterties;,KEEP KEEP KEEP REP KEEP KEEP KEEP REP,Rename Parameter
Fix #2337,"public JarEntryManifestFileObject(String jarFileName, JarOutputStream jarFile, String fileName, Module module, String osgiProvidedBundles) {","public JarEntryManifestFileObject(String jarFileName, JarOutputStream jarFile, String fileName, Module module) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fixes #DataExporter: Numbers greater than 1000 are formatted as currency in Excel exporter with numberConverter (#8980),public DecimalFormat getNumberFormat() { return numberFormat;,public DecimalFormat getDecimalFormat() { return decimalFormat;,KEEP KEEP REP KEEP KEEP REP,Rename Method
wip: javadoc and some minor changes,"private StringBuffer setComponentPathForTag(final StringBuffer tagPath, final ComponentTag tag, final int tagIndex)","private StringBuffer setComponentPathForTag(StringBuffer componentPath, final ComponentTag tag, final int tagIndex)",KEEP KEEP ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Handling a no-arg function in query parsing and expression tree (#5375),private static void queryRewrite(PinotQuery pinotQuery) {,private static void queryReWrite(PinotQuery pinotQuery) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
Adds state change info to AtomicBlock store dirty system,"public AtomicPaletteBlockStore(int shift, boolean storeState) { this(shift, storeState, 10);","public AtomicPaletteBlockStore(int shift) { this(shift, 10);",KEEP KEEP ADD ADD REP KEEP KEEP ADD KEEP,Add Parameter
Fix invalid host value returned by R REPL.,public Object getExecutor() { return env.asGuestValue(this.executor);,public Executor getExecutor() { return this.executor;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Add a unit test for handleOneRequestSimple().,public synchronized void pushRequest(final ImportRequest request) {,public synchronized void pushRequest(ImportRequest parameter) {,KEEP KEEP KEEP ADD REP REP KEEP,Rename Parameter
Simplify package_group unit tests,public boolean contains(PackageIdentifier pkgId) { return packageSpecifications.containsPackage(pkgId);,public boolean contains(Package pkg) { return packageSpecifications.containsPackage(pkg.getPackageIdentifier());,KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
make CheckExpectedWarning check for DesireWarning and DesireNoWarning,"private void check(XMethod xmethod, ClassDescriptor annotation, boolean expectWarnings, int priority) {","private void check(XMethod xmethod, ClassDescriptor annotation, boolean expectWarnings) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
UP-2869 Refactoring user lookup flow as a single screen that calls a person REST service via AJAX.,public Set<String> getDisplayAttributes(ExternalContext externalContext) {,"public Set<String> getDisplayAttributes(ExternalContext externalContext, IPersonAttributes person) { final PortletRequest portletRequest = (PortletRequest)externalContext.getNativeRequest(); final PortletPreferences preferences = portletRequest.getPreferences();",KEEP KEEP KEEP REP DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
tests for environment hierarchy fixes,@Test public void TestSimpleBuiltins_testGet_1360e7f9c659eacd7ee24ef5ca6b274c() { assertEval("{ get(\".Platform\")$endian }"); },@Test public void TestSimpleBuiltins_testGetIgnore_1360e7f9c659eacd7ee24ef5ca6b274c() { assertEval("{ get(\".Platform\")$endian }"); },KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
Fix the problem of retention manager not pick up the latest table config (#962),private void updateDeletionStrategyForOfflineTable(String offlineTableName) { AbstractTableConfig offlineTableConfig;,"private Map<String, RetentionStrategy> handleOfflineDeletionStrategy(String offlineTableName) { Map<String, RetentionStrategy> tableToDeletionStrategyMap = new HashMap<String, RetentionStrategy>();",KEEP REP REP DEL KEEP KEEP REP REP DEL DEL DEL DEL DEL,Change Return Type
"Remove null checking, should be calling remove instead. Masking null",public void onRemoved() {,public void onDeath() {,KEEP KEEP REP KEEP,Rename Method
Now implements distributionForInstance() instead of classifyInstance(),public double[] distributionForInstance(Instance instance) throws Exception {,public double classifyInstance(Instance instance) throws Exception {,KEEP REP REP KEEP KEEP KEEP KEEP,Change Return Type
library auto-sorting,"BookInSeriesTree(Book book) { super(book, false); } BookInSeriesTree(LibraryTree parent, Book book, int position) { super(parent, book, false, position);","BookInSeriesTree(LibraryTree parent, Book book) { super(parent, book, false);",ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP ADD REP,Remove Parameter
Refactored LithoPluginUtils#findGeneratedClass to return PsiClass instead of Optional,"public static PsiClass findGeneratedClass(String qualifiedSpecName, Project project) {","public static Optional<PsiClass> findGeneratedClass(String qualifiedSpecName, Project project) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Introduce simpler parameterized tests,"void inferServiceDayOfTripAt6(String time, String expectedDate) {",@Test void inferServiceDayOfTripAt6() {,ADD ADD REP REP REP KEEP,Add Parameter
Estimate number of breadcrumbs to layout,"private void setDeepestNode(Node node, Function<Node, Double> widthEstimator) {",private void setDeepestNode(Node node) {,KEEP KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
"Removed unnecessary methods, improved Command (including making it work)",public String getVersion();,public long getVersion();,KEEP REP KEEP,Change Return Type
#10426 PG partitions folder description fixed. Folder item types model added,public List<PostgreTableBase> getPartitions(DBRProgressMonitor monitor) throws DBException {,public List<PostgreTablePartition> getPartitions(DBRProgressMonitor monitor) throws DBException {,KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
book serialization is now usable,"public SeriesInfo(String title, BigDecimal index) { Title = title;","public SeriesInfo(String name, BigDecimal index) { Name = name;",KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
[TE] avoid tuning the detector and baseline provider separately if both interfaces are implemented in the same class (#4154),"public String lookupTunable(String type) { Preconditions.checkArgument(TUNE_MAP.containsKey(type), type + "" not found in registry""); return this.lookup(TUNE_MAP.get(type).tunable());","public String lookupTunable(String className) { Preconditions.checkArgument(TUNE_MAP.containsKey(className), className + "" not found in registry""); return this.lookup(TUNE_MAP.get(className).tunable());",KEEP KEEP KEEP REP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
FrameFunctions: avoid using PE unsafe equality profile on Objects.,"@Cached(""nIn"") int n,","@Cached(""createEqualityProfile()"") ValueProfile nProfile,",REP REP REP,Rename Parameter
UP-1846,"public String getProperty(String name) { Validate.notNull(name, ""Property name can not be null""); return this.portalProperties.getProperty(name);",public String getProperty(String arg0) { return null;,KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP REP,Rename Parameter
rename ReadVariableNode.getName() to ReadVariableNode.getIdentifier(),"public ReadVariableNode(String identifier, RType mode, ReadKind kind) { this.identifier = identifier;","public ReadVariableNode(String name, RType mode, ReadKind kind) { this.name = name;",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
file functions bug fixes,"protected RStringVector doListFilesBody(RAbstractStringVector vec, String patternString, byte allFilesL, byte fullNamesL, byte recursiveL, byte ignoreCaseL, byte includeDirsL, byte noDotDotL) {","protected RStringVector doListFilesBody(RAbstractStringVector vec, String pattern, byte allFilesL, byte fullNamesL, byte recursiveL, byte ignoreCaseL, byte includeDirsL, byte noDotDotL) {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Pull up checkInvalidParameterCounts() and convert to use min rather than min-1,"private static CSVRead setCSVReadParams(String p1, String p2) throws Exception {","private static CSVRead setParams(String p1, String p2) throws Exception {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Cast to the page type when possible.,public final <C extends Page> C startPage(final Class<C> pageClass),public final <C extends Page> Page startPage(final Class<C> pageClass),KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
2011.09.27 (1.45q8),private void toggleLiveMode() {,private void toggleLiveHistograms() {,KEEP KEEP REP KEEP,Rename Method
"Bug fixes, comment fixes, more code clean up","public ImageTag(ContentViewerTag<ImageTagRegion> contentViewerTag, ImageView image) {","public ImageTag(ContentViewerTag<ImageTagRegion> appTag, ImageView image) {",KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Implemented external builtin / native function 'octsize'.,protected CastNode createCast() { HeadPhaseBuilder<Double> findFirst = CastNodeBuilder.newCastBuilder().mustNotBeMissing().mustNotBeNull().asDoubleVector().findFirst(); return findFirst.buildCastNode();,"protected CastDoubleBaseNode createCast() { return CastDoubleBaseNodeGen.create(false, false, false); } @Specialization(guards = ""size.getLength() == 1"") protected RRawVector octSize(RAbstractIntVector size, @Cached(""create()"") GetDataAt.Int getDataNode) { int s = getDataNode.execute(size, size.getInternalStore(), 0); byte[] buf = toOctalAsciiString(s); return RDataFactory.createRawVector(buf); } @TruffleBoundary private byte[] toOctalAsciiString(int s) { if (asciiCharset == null) { asciiCharset = Charset.forName(""US-ASCII""); } return asciiCharset.encode(Integer.toOctalString(s)).array(); }",KEEP REP KEEP KEEP REP REP DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
SONARJAVA-725 SQLInjection check for concatenation of enclosing method param only,"private boolean isIdentifierDynamicString(MethodInvocationTree methodTree, IdentifierTree arg, @Nullable Symbol currentlyChecking, boolean firstLevel) {","private boolean isIdentifierDynamicString(MethodInvocationTree methodTree, IdentifierTree arg, @Nullable Symbol currentlyChecking) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
First draft of full CaseMetadata (there are bugs),"private CaseMetadata(Case.CaseType caseType, String caseName, String caseDirectory, String caseDatabaseName, String caseTextIndexName) throws CaseMetadataException {","public CaseMetadata(Case.CaseType caseType, String caseName, String caseNumber, String exainer, String caseDirectory, String caseDatabaseName, String caseTextIndexName) throws CaseMetadataException {",REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Don't assume current arch is equal to target arch in LLVM toolchain wrappers.,"protected ClangLike(String[] args, boolean cxx, OS os, Arch arch, String platform) { super(args, cxx, os, arch, platform);","protected ClangLike(String[] args, boolean cxx, OS os, String platform) { super(args, cxx, os, platform);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP,Add Parameter
Disable recursion in PinotFS copy (#8162),"private static void copy(File srcFile, File dstFile, boolean recursive)","private static void copy(File srcFile, File dstFile)",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
Precompute type binding for unqualified keyword super in expressions,"UnqualifiedKeywordSuper(InternalSyntaxToken token, ITypeBinding typeBinding) {",UnqualifiedKeywordSuper(InternalSyntaxToken token) {,KEEP ADD ADD REP KEEP,Add Parameter
Use stop indices from stops,public TripPatternWithRaptorStopIndexes(TripPattern pattern) {,"public TripPatternWithRaptorStopIndexes(TripPattern pattern, int[] stopIndexes) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Set thread cpu time in setExecutionStatistics() (#6711),public void setExecutionThreadCpuTimeNs(long executionThreadCpuTimeNs) { _executionThreadCpuTimeNs = executionThreadCpuTimeNs;,public void setThreadCpuTimeNs(long threadCpuTimeNanos) { _threadCpuTimeNs = threadCpuTimeNanos;,KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
PopupButton keyboard navigation does not work #1961,protected static VOverlay createTableContextMenu() { return new TableOverlay();,"protected static VOverlay createContextMenu() { return new TableOverlay() { @Override protected void onPreviewNativeEvent(Event.NativePreviewEvent event) { super.onPreviewNativeEvent(event); NativeEvent nativeEvent = event.getNativeEvent(); Element target = Element.as(nativeEvent.getEventTarget()); if (Event.ONKEYDOWN == event.getTypeInt()) { if (KeyCodes.KEY_ESCAPE == event.getNativeEvent().getKeyCode()) { event.cancel(); event.getNativeEvent().stopPropagation(); event.getNativeEvent().preventDefault(); hide(); } else { VAbstractOrderedLayout verticalLayout = ((VVerticalLayout) getWidget()); Widget widget = WidgetUtil.findWidget(target, null); if (isLayoutChild(verticalLayout, widget)) { Widget widgetParent = widget.getParent(); VAbstractOrderedLayout layout = (VAbstractOrderedLayout) widgetParent.getParent(); Widget focusWidget = null; int widgetIndex = layout.getWidgetIndex(widgetParent); if (event.getNativeEvent().getKeyCode() == KeyCodes.KEY_DOWN) { focusWidget = Tools.findNextWidget(layout, widgetIndex); } else if (event.getNativeEvent().getKeyCode() == KeyCodes.KEY_UP) { focusWidget = Tools.findPrevWidget(layout, widgetIndex); } if (focusWidget instanceof VButton) { VButton button = (VButton) focusWidget; focusSelectedItem(widgetParent.getParent(), button); button.setFocus(true); } } } } else if (Event.ONMOUSEOVER == event.getTypeInt()) { VAbstractOrderedLayout verticalLayout = ((VAbstractOrderedLayout) getWidget()); Widget widget = WidgetUtil.findWidget(target, null); if (isLayoutChild(verticalLayout, widget)) { if (widget instanceof VButton) { VButton button = (VButton) widget; Widget widgetParent = button.getParent(); if (!button.getStyleName().contains(SELECTED_ITEM_STYLE)) { focusSelectedItem(widgetParent.getParent(), button); button.setFocus(true); } } } } } }ename Method
Changed region file so that it returns Streams rather than DataStreams.  This saves a wrapper object for classes which don't need it,public OutputStream getBlockOutputStream(int i) {,public DataOutputStream getBlockOutputStream(int i) {,KEEP REP KEEP KEEP KEEP,Change Return Type
"GROOVY-8507, support comma on last enum value in more cases",public void testParseEnumWithMethodDefinitions1() {,public void testParseEnumWithMethodDefinitions() {,KEEP KEEP REP KEEP,Rename Method
Improve interface for furthe enhancements,"public boolean checkResult(DataContext dataContext, ResultData result) {",public void checkResult(ResultData result) {,KEEP ADD ADD REP REP KEEP KEEP,Change Return Type
#3734 Double dollar rule fix ($$ occurrences inside identifier),"private boolean isWordPart(char c, char prevC, TPCharacterScanner scanner) {","private boolean isWordPart(char c, TPCharacterScanner scanner) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
2019.11.29 (1.52s70; Convolver),public static void setDefaultDirectory(String dir) { if (dir!=null && dir.length()>0 && !(dir.endsWith(File.separator)||dir.endsWith("/"))) { String separator = dir.contains("/")?"/":File.separator; dir = dir + separator; } defaultDirectory = dir;,public static void setDefaultDirectory(String defaultDir) { defaultDirectory = defaultDir; if (defaultDirectory!=null && !defaultDirectory.endsWith(File.separator) && !defaultDirectory.endsWith("/")) defaultDirectory = defaultDirectory + File.separator;,KEEP KEEP KEEP KEEP REP KEEP REP REP REP REP DEL KEEP REP REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP REP REP,Rename Parameter
HDFS-5893. Merge change r1569477 from trunk.,"RangeHeaderUrlOpener(URLConnectionFactory connFactory, final URL url) {",RangeHeaderUrlOpener(final URL url) {,ADD ADD REP KEEP KEEP KEEP,Add Parameter
Cleanups,public boolean onStreet() { return ON_STREET_MODES.contains(this);,public boolean isBus() { return BUS_TYPE_MODES.contains(this);,KEEP KEEP REP KEEP KEEP REP,Rename Method
Changed names of id's to simply "id".,"public ChannelDefinition(int id, String chanTitle) { this.id = id;","public ChannelDefinition(int channelPublishId, String chanTitle) { this.channelPublishId = channelPublishId;",KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
2018.03.29 (1.52a25),double doTable() {,double table() {,KEEP REP KEEP,Rename Method
file removing support,private List<ZLPhysicalFile> collectPhysicalFiles(List<String> paths) {,private List<ZLPhysicalFile> collectPhysicalFiles(List<String> directories) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
"In groovy.util.Node.depthFirst please Provide a way to Specify pre-order, post-order Ordering",public List depthFirst(boolean preorder) {,private List depthFirstRest() {,REP KEEP ADD REP KEEP,Add Parameter
Java Ruling IT: update to orchestrator 3.5,"private static void test_project(String projectKey, String projectName) throws IOException {",private static void test_project(String projectName) throws IOException {,KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
Automated rollback of commit 9c65356cedcf4e68077219c10f5a7bb39d38054b.,public String getMainRepositoryName() { return mainRepositoryName.strippedName();,public RepositoryName getMainRepositoryName() { return mainRepositoryName;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
run R test with a longer timeout then the default,"private boolean evalAndCompare(String[] inputs, long timeout, TestTrait... traitsList) { return evalAndCompare(inputs, false, timeout, traitsList);","private boolean evalAndCompare(String[] inputs, TestTrait... traitsList) { return evalAndCompare(inputs, false, traitsList);",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP,Add Parameter
DSKCLI-259 : Split Project and ProjectReference,Request<List<ProjectReference>> getWorkspaceProjects(String workspaceId);,Request<List<Project>> getWorkspaceProjects(String workspaceId);,REP KEEP KEEP,Change Return Type
Add Predicate and Class onError handlers to Operation (#1584),"public Operation onError(Predicate<? super Throwable> predicate, Action<? super Throwable> errorHandler) { return new DefaultOperation(promise.onError(predicate, errorHandler));",public Operation onError(Action<? super Throwable> onError) { return new DefaultOperation( promise.transform(up -> down -> up.connect(new Downstream<Void>() { @Override public void success(Void value) { down.success(value); } @Override public void error(Throwable throwable) { Operation.of(() -> onError.execute(throwable)).promise().connect(new Downstream<Void>() { @Override public void success(Void value) { down.complete(); } @Override public void error(Throwable throwable) { down.error(throwable); } @Override public void complete() { down.complete(); } }); } @Override public void complete() { down.complete(); } }) ) );,KEEP KEEP REP KEEP KEEP REP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
high tier memory: also verify kills,protected PlaceholderWithExceptionNode(LocationIdentity killedLocation) {,protected PlaceholderWithExceptionNode() {,KEEP ADD REP KEEP,Add Parameter
modified:   src/main/java/com/xtremelabs/robolectric/shadows/ShadowOverlayItem.java,"public void setResultSet(ResultSet result, String sql) {","public void setResultSet(ResultSet result, String sql, Connection connection) {",KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Fix getPatterns(),public static List getPatterns(),public static Set getPatterns(),KEEP KEEP REP KEEP,Change Return Type
2011.06.24 (1.45j),"public void rank(ImageProcessor ip, double radius, int filterType) { rank(ip, radius, filterType, 0, 50f); } public void rank(ImageProcessor ip, double radius, int filterType, int whichOutliers, float threshold) { Rectangle roi = ip.getRoi(); ImageProcessor mask = ip.getMask(); Rectangle roi1 = null; int[] lineRadii = makeLineRadii(radius); boolean isImagePart = (roi.width<ip.getWidth()) || (roi.height<ip.getHeight()); boolean[] aborted = new boolean[1];                      for (int ch=0; ch<ip.getNChannels(); ch++) { int filterType1 = filterType; if (isMultiStepFilter(filterType)) { filterType1 = (filterType==OPEN) ? MIN : MAX; if (isImagePart) {  int kRadius = kRadius(lineRadii); int kHeight = kHeight(lineRadii); Rectangle roiClone = (Rectangle)roi.clone(); roiClone.grow(kRadius, kHeight/2); roi1 = roiClone.intersection(new Rectangle(ip.getWidth(), ip.getHeight())); ip.setRoi(roi1); } } doFiltering(ip, lineRadii, filterType1, whichOutliers, threshold, ch, aborted); if (aborted[0]) break; if (isMultiStepFilter(filterType)) { ip.setRoi(roi); ip.setMask(mask); int filterType2 = (filterType==OPEN) ? MAX : MIN; doFiltering(ip, lineRadii, filterType2, whichOutliers, threshold, ch, aborted); if (aborted[0]) break; if (isImagePart) resetRoiBoundary(ip, roi, roi1); } } } private void doFiltering(final ImageProcessor ip, final int[] lineRadii, final int filterType, final int whichOutliers, final float threshold, final int colorChannel, final boolean[] aborted) { Rectangle roi = ip.getRoi(); int width = ip.getWidth(); Object pixels = ip.getPixels(); int numThreads = Math.min(roi.height, this.numThreads); int kHeight = kHeight(lineRadii); int kRadius  = kRadius(lineRadii); final int cacheWidth = roi.width+2*kRadius; final int cacheHeight = kHeight + (numThreads>1 ? 2*numThreads : 0); final float[] cache = new float[cacheWidth*cacheHeight]; highestYinCache = Math.max(roi.y-kHeight/2, 0) - 1;	 final int[] yForThread = new int[numThreads];		 Arrays.fill(yForThread, -1); yForThread[numThreads-1] = roi.y-1;					 final Thread[] threads = new Thread[numThreads]; for (int t=numThreads-1; t>0; t--) { final int ti=t; final Thread thread = new Thread( new Runnable() { final public void run() { doFiltering(ip, lineRadii, cache, cacheWidth, cacheHeight, filterType, whichOutliers, threshold, colorChannel, yForThread, ti, aborted); } }, ""RankFilters-""+t); thread.setPriority(Thread.currentThread().getPriority()); thread.start(); threads[ti] = thread; } doFiltering(ip, lineRadii, cache, cacheWidth, cacheHeight, filterType, whichOutliers, threshold, colorChannel, yForThread, 0, aborted); try { for (final Thread thread : threads) if (thread != null) thread.join(); } catch (InterruptedException e) { aborted[0] = true; } showProgress(1.0); pass++; } private void doFiltering(ImageProcessor ip, int[] lineRadii, float[] cache, int cacheWidth, int cacheHeight, int filterType, int whichOutliers, float threshold, int colorChannel, int [] yForThread, int threadNumber, boolean[] aborted) { if (aborted[0] || Thread.currentThread().isInterrupted()) return; int width = ip.getWidth(); int height = ip.getHeight(); Rectangle roi = ip.getRoi(); int kHeight = kHeight(lineRadii); int kRadius  = kRadius(lineRadii); int kNPoints = kNPoints(lineRadii); int xmin = roi.x - kRadius; int xmax = roi.x + roi.width + kRadius; int[]cachePointers = makeCachePointers(lineRadii, cacheWidth); int padLeft = xmin<0 ? -xmin : 0; int padRight = xmax>width? xmax-width : 0; int xminInside = xmin>0 ? xmin : 0; int xmaxInside = xmax<width ? xmax : width; int widthInside = xmaxInside - xminInside; boolean minOrMax = filterType == MIN || filterType == MAX; boolean minOrMaxOrOutliers = minOrMax || filterType == OUTLIERS; boolean sumFilter = filterType == MEAN || filterType == VARIANCE; boolean medianFilter = filterType == MEDIAN || filterType == OUTLIERS; double[] sums = sumFilter ? new double[2] : null; float[] medianBuf1 = (medianFilter||filterType==REMOVE_NAN) ? new float[kNPoints] : null; float[] medianBuf2 = (medianFilter||filterType==REMOVE_NAN) ? new float[kNPoints] : null; float sign = filterType==MIN ? -1f : 1f; if (filterType == OUTLIERS)		 sign = (ip.isInvertedLut()==(whichOutliers==DARK_OUTLIERS)) ? -1f : 1f; boolean smallKernel = kRadius < 2; Object pixels = ip.getPixels(); boolean isFloat = pixels instanceof float[]; float maxValue = isFloat ? Float.NaN : (float)ip.maxValue(); float[] values = isFloat ? (float[])pixels : new float[roi.width]; int numThreads = yForThread.length; long lastTime = System.currentTimeMillis(); int previousY = kHeight/2-cacheHeight; while (!aborted[0]) { int y = arrayMax(yForThread) + 1;		 yForThread[threadNumber] = y; boolean threadFinished = y >= roi.y+roi.height; if (numThreads>1 && (threadWaiting || threadFinished))		 synchronized(this) { notifyAll();					 } if (threadFinished) return;				 if (threadNumber==0) {					 long time = System.currentTimeMillis(); if (time-lastTime>100) { lastTime = time; showProgress((y-roi.y)/(double)(roi.height)); if (Thread.currentThread().isInterrupted() || (imp!= null && IJ.escapePressed())) { aborted[0] = true; synchronized(this) {notifyAll();} return; } } } for (int i=0; i<cachePointers.length; i++)    cachePointers[i] = (cachePointers[i] + cacheWidth*(y-previousY))%cache.length; previousY = y; if (numThreads>1) {						 int slowestThreadY = arrayMinNonNegative(yForThread); if (y - slowestThreadY + kHeight > cacheHeight) {	 synchronized(this) { do { notifyAll();			 threadWaiting = true; try { wait(); if (aborted[0]) return; } catch (InterruptedException e) { aborted[0] = true; notifyAll(); return; } slowestThreadY = arrayMinNonNegative(yForThread); } while (y - slowestThreadY + kHeight > cacheHeight); threadWaiting = false; } } } if (numThreads==1) {															 int yStartReading = y==roi.y ? Math.max(roi.y-kHeight/2, 0) : y+kHeight/2; for (int yNew = yStartReading; yNew<=y+kHeight/2; yNew++) {	 readLineToCacheOrPad(pixels, width, height, roi.y, xminInside, widthInside, cache, cacheWidth, cacheHeight, padLeft, padRight, colorChannel, kHeight, yNew); } } else { if (!copyingToCache || highestYinCache < y+kHeight/2) synchronized(cache) { copyingToCache = true;				 while (highestYinCache < arrayMinNonNegative(yForThread) - kHeight/2 + cacheHeight - 1) { int yNew = highestYinCache + 1; readLineToCacheOrPad(pixels, width, height, roi.y, xminInside, widthInside, cache, cacheWidth, cacheHeight, padLeft, padRight, colorChannel, kHeight, yNew); highestYinCache = yNew; } copyingToCache = false; } } int cacheLineP = cacheWidth * (y % cacheHeight) + kRadius;	 filterLine(values, width, cache, cachePointers, kNPoints, cacheLineP, roi, y,	 sums, medianBuf1, medianBuf2, sign, maxValue, isFloat, smallKernel, sumFilter, minOrMax, minOrMaxOrOutliers); if (!isFloat)		 writeLineToPixels(values, pixels, roi.x+y*width, roi.width, colorChannel);	 }  } private int arrayMax(int[] array) { int max = Integer.MIN_VALUE; for (int i=0; i<array.length; i++) if (array[i] > max) max = array[i]; return max; } private int arrayMinNonNegative(int[] array) { int min = Integer.MAX_VALUE; for (int i=0; i<array.length; i++) if (array[i]>=0 && array[i]<min) min = array[i]; return min; } private void filterLine(float[] values, int width, float[] cache, int[] cachePointers, int kNPoints, int cacheLineP, Rectangle roi, int y, double[] sums, float[] medianBuf1, float[] medianBuf2, float sign, float maxValue, boolean isFloat, boolean smallKernel, boolean sumFilter, boolean minOrMax, boolean minOrMaxOrOutliers) { int valuesP = isFloat ? roi.x+y*width : 0; float max = 0f; float median = Float.isNaN(cache[cacheLineP]) ? 0 : cache[cacheLineP];   boolean fullCalculation = true; for (int x=0; x<roi.width; x++, valuesP++) {							 if (fullCalculation) { fullCalculation = smallKernel;	 if (minOrMaxOrOutliers) max = getAreaMax(cache, x, cachePointers, 0, -Float.MAX_VALUE, sign); if (minOrMax) { values[valuesP] = max*sign; continue; } else if (sumFilter) getAreaSums(cache, x, cachePointers, sums); } else { if (minOrMaxOrOutliers) { float newPointsMax = getSideMax(cache, x, cachePointers, true, sign); if (newPointsMax >= max) {  max = newPointsMax; } else { float removedPointsMax = getSideMax(cache, x, cachePointers, false, sign); if (removedPointsMax >= max) max = getAreaMax(cache, x, cachePointers, 1, newPointsMax, sign); } if (minOrMax) { values[valuesP] = max*sign; continue; } } else if (sumFilter) { addSideSums(cache, x, cachePointers, sums); if (Double.isNaN(sums[0]))  fullCalculation = true; } } if (sumFilter) { if (filterType == MEAN) values[valuesP] = (float)(sums[0]/kNPoints); else	{ float value = (float)((sums[1] - sums[0]*sums[0]/kNPoints)/kNPoints); if (value>maxValue) value = maxValue; values[valuesP] = value; } } else if (filterType == MEDIAN) { median = getMedian(cache, x, cachePointers, medianBuf1, medianBuf2, kNPoints, median); values[valuesP] = median; } else if (filterType == OUTLIERS) { float v = cache[cacheLineP+x]; if (v*sign+threshold < max) {        median = getMedian(cache, x, cachePointers, medianBuf1, medianBuf2, kNPoints, median); if (v*sign+threshold < median*sign) v = median;                  } values[valuesP] = v; } else if (filterType == REMOVE_NAN) {    if (Float.isNaN(values[valuesP])) values[valuesP] = getNaNAwareMedian(cache, x, cachePointers, medianBuf1, medianBuf2, kNPoints, median); else median = values[valuesP];	 } }  } private static void readLineToCacheOrPad(Object pixels, int width, int height, int roiY, int xminInside, int widthInside, float[]cache, int cacheWidth, int cacheHeight, int padLeft, int padRight, int colorChannel, int kHeight, int y) { int lineInCache = y%cacheHeight; if (y < height) { readLineToCache(pixels, y*width, xminInside, widthInside, cache, lineInCache*cacheWidth, padLeft, padRight, colorChannel); if (y==0) for (int prevY = roiY-kHeight/2; prevY<0; prevY++) {	 int prevLineInCache = cacheHeight+prevY; System.arraycopy(cache, 0, cache, prevLineInCache*cacheWidth, cacheWidth); } } else System.arraycopy(cache, cacheWidth*((height-1)%cacheHeight), cache, lineInCache*cacheWidth, cacheWidth); } private static void readLineToCache(Object pixels, int pixelLineP, int xminInside, int widthInside, float[] cache, int cacheLineP, int padLeft, int padRight, int colorChannel) { if (pixels instanceof byte[]) { byte[] bPixels = (byte[])pixels; for (int pp=pixelLineP+xminInside, cp=cacheLineP+padLeft; pp<pixelLineP+xminInside+widthInside; pp++,cp++) cache[cp] = bPixels[pp]&0xff; } else if (pixels instanceof short[]){ short[] sPixels = (short[])pixels; for (int pp=pixelLineP+xminInside, cp=cacheLineP+padLeft; pp<pixelLineP+xminInside+widthInside; pp++,cp++) cache[cp] = sPixels[pp]&0xffff; } else if (pixels instanceof float[]) { System.arraycopy(pixels, pixelLineP+xminInside, cache, cacheLineP+padLeft, widthInside); } else {     int[] cPixels = (int[])pixels; int shift = 16 - 8*colorChannel; int byteMask = 255<<shift; for (int pp=pixelLineP+xminInside, cp=cacheLineP+padLeft; pp<pixelLineP+xminInside+widthInside; pp++,cp++) cache[cp] = (cPixels[pp]&byteMask)>>shift; } for (int cp=cacheLineP; cp<cacheLineP+padLeft; cp++) cache[cp] = cache[cacheLineP+padLeft]; for (int cp=cacheLineP+padLeft+widthInside; cp<cacheLineP+padLeft+widthInside+padRight; cp++) cache[cp] = cache[cacheLineP+padLeft+widthInside-1]; } private static void writeLineToPixels(float[] values, Object pixels, int pixelP, int length, int colorChannel) { if (pixels instanceof byte[]) { byte[] bPixels = (byte[])pixels; for (int i=0, p=pixelP; i<length; i++,p++) bPixels[p] = (byte)(((int)(values[i] + 0.5f))&0xff); } else if (pixels instanceof short[]) { short[] sPixels = (short[])pixels; for (int i=0, p=pixelP; i<length; i++,p++) sPixels[p] = (short)(((int)(values[i] + 0.5f))&0xffff); } else {     int[] cPixels = (int[])pixels; int shift = 16 - 8*colorChannel; int resetMask = 0xffffffff^(0xff<<shift); for (int i=0, p=pixelP; i<length; i++,p++) cPixels[p] = (cPixels[p]&resetMask) | (((int)(values[i] + 0.5f))<<shift); } } private static float getAreaMax(float[] cache, int xCache0, int[] kernel, int ignoreRight, float max, float sign) { for (int kk=0; kk<kernel.length; kk++) {	 for (int p=kernel[kk++]+xCache0; p<=kernel[kk]+xCache0-ignoreRight; p++) { float v = cache[p]*sign; if (max < v) max = v; } } return max; } private static float getSideMax(float[] cache, int xCache0, int[] kernel, boolean isRight, float sign) { float max = -Float.MAX_VALUE; if (!isRight) xCache0--; for (int kk= isRight ? 1 : 0; kk<kernel.length; kk+=2) {	 float v = cache[xCache0 + kernel[kk]]*sign; if (max < v) max = v; } return max; } private static void getAreaSums(float[] cache, int xCache0, int[] kernel, double[] sums) { double sum=0, sum2=0; for (int kk=0; kk<kernel.length; kk++) {	 for (int p=kernel[kk++]+xCache0; p<=kernel[kk]+xCache0; p++) { float v = cache[p]; sum += v; sum2 += v*v; } } sums[0] = sum; sums[1] = sum2; return; } private static void addSideSums(float[] cache, int xCache0, int[] kernel, double[] sums) { double sum=0, sum2=0; for (int kk=0; kk<kernel.length; ) { float v = cache[kernel[kk++]+(xCache0-1)]; sum -= v; sum2 -= v*v; v = cache[kernel[kk++]+xCache0]; sum += v; sum2 += v*v; } sums[0] += sum; sums[1] += sum2; return; } private static float getMedian(float[] cache, int xCache0, int[] kernel, float[] aboveBuf, float[]belowBuf, int kNPoints, float guess) { int nAbove = 0, nBelow = 0; for (int kk=0; kk<kernel.length; kk++) { for (int p=kernel[kk++]+xCache0; p<=kernel[kk]+xCache0; p++) { float v = cache[p]; if (v > guess) { aboveBuf[nAbove] = v; nAbove++; } else if (v < guess) { belowBuf[nBelow] = v; nBelow++; } } } int half = kNPoints/2; if (nAbove>half) return findNthLowestNumber(aboveBuf, nAbove, nAbove-half-1); else if (nBelow>half) return findNthLowestNumber(belowBuf, nBelow, half); else return guess; } private static float getNaNAwareMedian(float[] cache, int xCache0, int[] kernel, float[] aboveBuf, float[]belowBuf, int kNPoints, float guess) { int nAbove = 0, nBelow = 0; for (int kk=0; kk<kernel.length; kk++) { for (int p=kernel[kk++]+xCache0; p<=kernel[kk]+xCache0; p++) { float v = cache[p]; if (Float.isNaN(v)) { kNPoints--; } else if (v > guess) { aboveBuf[nAbove] = v; nAbove++; } else if (v < guess) { belowBuf[nBelow] = v; nBelow++; } } } if (kNPoints == 0) return Float.NaN;	 int half = kNPoints/2; if (nAbove>half) return findNthLowestNumber(aboveBuf, nAbove, nAbove-half-1); else if (nBelow>half) return findNthLowestNumber(belowBuf, nBelow, half); else return guess; } public final static float findNthLowestNumber(float[] buf, int bufLength, int n) { int i,j; int l=0; int m=bufLength-1; float med=buf[n]; float dum ; while (l<m) { i=l ; j=m ; do { while (buf[i]<med) i++ ; while (med<buf[j]) j-- ; dum=buf[j]; buf[j]=buf[i]; buf[i]=dum; i++ ; j-- ; } while ((j>=n) && (i<=n)) ; if (j<n) l=i ; if (n<i) m=j ; med=buf[n] ; } return med ; } private void resetRoiBoundary(ImageProcessor ip, Rectangle roi, Rectangle roi1) { int width = ip.getWidth(); Object pixels = ip.getPixels(); Object snapshot = ip.getSnapshotPixels(); for (int y=roi1.y, p = roi1.x+y*width; y<roi.y; y++,p+=width) System.arraycopy(snapshot, p, pixels, p, roi1.width); int leftWidth = roi.x - roi1.x; int rightWidth = roi1.x+roi1.width - (roi.x+roi.width); for (int y=roi.y, pL=roi1.x+y*width, pR=roi.x+roi.width+y*width; y<roi.y+roi.height; y++,pL+=width,pR+=width) { if (leftWidth > 0) System.arraycopy(snapshot, pL, pixels, pL, leftWidth); if (rightWidth > 0) System.arraycopy(snapshot, pR, pixels, pR, rightWidth); } for (int y=roi.y+roi.height, p = roi1.x+y*width; y<roi1.y+roi1.height; y++,p+=width) System.arraycopy(snapshot, p, pixels, p, roi1.width); } public void makeKernel(double radius) { this.radius = radius; } protected int[] makeLineRadii(double radius) { if (radius>=1.5 && radius<1.75)  radius = 1.75; else if (radius>=2.5 && radius<2.85) radius = 2.85; int r2 = (int) (radius*radius) + 1; int kRadius = (int)(Math.sqrt(r2+1e-10)); int kHeight = 2*kRadius + 1; int[] kernel = new int[2*kHeight + 2]; kernel[2*kRadius]   = -kRadius; kernel[2*kRadius+1] =  kRadius; int nPoints = 2*kRadius+1; for (int y=1; y<=kRadius; y++) {         int dx = (int)(Math.sqrt(r2-y*y+1e-10)); kernel[2*(kRadius-y)]   = -dx; kernel[2*(kRadius-y)+1] =  dx; kernel[2*(kRadius+y)]   = -dx; kernel[2*(kRadius+y)+1] =  dx; nPoints += 4*dx+2;   } kernel[kernel.length-2] = nPoints; kernel[kernel.length-1] = kRadius; return kernel; } private int kHeight(int[] lineRadii) { return (lineRadii.length-2)/2; } private int kRadius(int[] lineRadii) { return lineRadii[lineRadii.length-1]; } private int kNPoints(int[] lineRadii) { return lineRadii[lineRadii.length-2]; } private int[] makeCachePointers(int[] lineRadii, int cacheWidth) { int kRadius = kRadius(lineRadii); int kHeight = kHeight(lineRadii); int[] cachePointers = new int[2*kHeight]; for (int i=0; i<kHeight; i++) { cachePointers[2*i]   = i*cacheWidth+kRadius + lineRadii[2*i]; cachePointers[2*i+1] = i*cacheWidth+kRadius + lineRadii[2*i+1]; } return cachePointers; } void showMasks() { int w=150, h=150; ImageStack stack = new ImageStack(w, h); for (double r=0.5; r<50; r+=0.5) { ImageProcessor ip = new FloatProcessor(w,h,new int[w*h]); float[] pixels = (float[])ip.getPixels(); int[] lineRadii = makeLineRadii(r); int kHeight = kHeight(lineRadii); int kRadius = kRadius(lineRadii); int y0 = h/2-kHeight/2; for (int i = 0, y = y0; i<kHeight; i++, y++) for (int x = w/2+lineRadii[2*i], p = x+y*w; x <= w/2+lineRadii[2*i+1]; x++, p++) pixels[p] = 1f; stack.addSlice(""radius=""+r+"", size=""+(2*kRadius+1), ip); } new ImagePlus(""Masks"", stack).show(); } public void setNPasses (int nPasses) { this.nPasses = nPasses; pass = 0; } private void showProgress(double percent) { percent = (double)pass/nPasses + percent/nPasses; IJ.showProgress(percent); } }","public void rank(ImageProcessor ip, double radius, int rankType) { FloatProcessor fp = null; for (int i=0; i<ip.getNChannels(); i++) { makeKernel(radius); fp = ip.toFloat(i, fp); doFiltering(fp, kRadius, lineRadius, rankType, BRIGHT_OUTLIERS, 50f); ip.setPixels(i, fp); } } private float getAreaMax(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, int ignoreRight, float max, float sign) { for (int y=0; y<kSize; y++) {	 for (int x=xCache0-lineRadius[y], iCache=y*cacheWidth+x; x<=xCache0+lineRadius[y]-ignoreRight; x++, iCache++) { float v = cache[iCache]*sign; if (max < v) max = v; } } return max; } private float getSideMax(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, boolean isRight, float sign) { float max=-Float.MAX_VALUE; for (int y=0; y<kSize; y++) {	 int x = isRight ? xCache0+lineRadius[y] : xCache0-lineRadius[y]-1; int iCache = y*cacheWidth + x; float v = cache[iCache]*sign; if (max < v) max = v; } return max; } private void getAreaSums(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, double[] sums) { double sum=0, sum2=0; for (int y=0; y<kSize; y++) {	 for (int x=xCache0-lineRadius[y], iCache=y*cacheWidth+x; x<=xCache0+lineRadius[y]; x++, iCache++) { float v = cache[iCache]; sum += v; sum2 += v*v; } } sums[0] = sum; sums[1] = sum2; return; } private void addSideSums(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, double[] sums) { double sum=0, sum2=0; for (int y=0; y<kSize; y++) {	 int iCache0 = y*cacheWidth + xCache0; float v = cache[iCache0 + lineRadius[y]]; sum += v; sum2 += v*v; v = cache[iCache0 - lineRadius[y] - 1]; sum -= v; sum2 -= v*v; } sums[0] += sum; sums[1] += sum2; return; } private float getMedian(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, float[] aboveBuf, float[]belowBuf, int kNPoints, float guess) { int nAbove = 0, nBelow = 0; for (int y=0; y<kSize; y++) {		 for (int x=xCache0-lineRadius[y], iCache=y*cacheWidth+x; x<=xCache0+lineRadius[y]; x++, iCache++) { float v = cache[iCache]; if (v > guess) { aboveBuf[nAbove] = v; nAbove++; } else if (v < guess) { belowBuf[nBelow] = v; nBelow++; } } } int half = kNPoints/2; if (nAbove>half) return findNthLowestNumber(aboveBuf, nAbove, nAbove-half-1); else if (nBelow>half) return findNthLowestNumber(belowBuf, nBelow, half); else return guess; } private float getNaNAwareMedian(float[] cache, int cacheWidth, int xCache0, int[] lineRadius, int kSize, float[] aboveBuf, float[]belowBuf, int kNPoints, float guess) { int nAbove = 0, nBelow = 0; for (int y=0; y<kSize; y++) {		 for (int x=xCache0-lineRadius[y], iCache=y*cacheWidth+x; x<=xCache0+lineRadius[y]; x++, iCache++) { float v = cache[iCache]; if (Float.isNaN(v)) { kNPoints--; } else if (v > guess) { aboveBuf[nAbove] = v; nAbove++; } else if (v < guess) { belowBuf[nBelow] = v; nBelow++; } } } if (kNPoints == 0) return Float.NaN;	 int half = kNPoints/2; if (nAbove>half) return findNthLowestNumber(aboveBuf, nAbove, nAbove-half-1); else if (nBelow>half) return findNthLowestNumber(belowBuf, nBelow, half); else return guess; } public static float findNthLowestNumber(float[] buf, int bufLength, int n) { int i,j; int l=0; int m=bufLength-1; float med=buf[n]; float dum ; while (l<m) { i=l ; j=m ; do { while (buf[i]<med) i++ ; while (med<buf[j]) j-- ; dum=buf[j]; buf[j]=buf[i]; buf[i]=dum; i++ ; j-- ; } while ((j>=n) && (i<=n)) ; if (j<n) l=i ; if (n<i) m=j ; med=buf[n] ; } return med ; } public synchronized void makeKernel(double radius) { if (radius>=1.5 && radius<1.75)  radius = 1.75; else if (radius>=2.5 && radius<2.85) radius = 2.85; int r2 = (int) (radius*radius) + 1; kRadius = (int)(Math.sqrt(r2+1e-10)); lineRadius = new int[2*kRadius+1]; lineRadius[kRadius] = kRadius; kNPoints = 2*kRadius + 1; for (int y=1; y<=kRadius; y++) { int dx = (int)(Math.sqrt(r2-y*y+1e-10)); lineRadius[kRadius+y] = dx; lineRadius[kRadius-y] = dx; kNPoints += 4*dx + 2; } } void showMasks() { int w=150, h=150; ImageStack stack = new ImageStack(w, h); for (double r=0.5; r<50; r+=0.5) { ImageProcessor ip = new FloatProcessor(w,h,new int[w*h]); float[] pixels = (float[])ip.getPixels(); makeKernel(r); for (int i = 0, y = h/2-kRadius; i < (2*kRadius+1); i++, y++) for (int x = w/2-lineRadius[i], p = x+y*w; x <= w/2+lineRadius[i]; x++, p++) pixels[p] = 1f; stack.addSlice(""radius=""+r+"", size=""+(2*kRadius+1), ip); } new ImagePlus(""Masks"", stack).show(); } public void setNPasses (int nPasses) { this.nPasses = nPasses; pass = 0; } private void showProgress(double percent) { percent = (double)(pass-1)/nPasses + percent/nPasses; IJ.showProgress(percent); } }ename Parameter
Android: Allow viewing/editing the actual codes,"public int trySet(@NonNull String name, @NonNull String code)",public int trySet(@NonNull String name),KEEP KEEP KEEP KEEP ADD ADD ADD REP,Add Parameter
Preserving detail URI on orientation change,private void setupContactDetailFragment(Uri contactLookupUri) {,private void setupContactDetailFragment() {,KEEP KEEP ADD REP KEEP,Add Parameter
Clarify a field name in FileUtil,public static boolean hasReadWriteAccess(Path dirPath) {,public static boolean hasReadWriteAccess(Path path) {,KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Cleaned up some stuff and made things not public api,"private static HasCommentStatus getCommentProperty(List<ContentTag> tags, CorrelationAttributeInstance attribute) {","private static Pair<String, HasCommentStatus> getCommentProperty(List<ContentTag> tags, CorrelationAttributeInstance attribute) {",KEEP KEEP REP DEL KEEP KEEP KEEP KEEP KEEP,Change Return Type
Page-Sort-Filter support for frozen columns.,"protected void encodeScrollBody(FacesContext context, DataTable table, String tableStyle, String tableStyleClass, int columnStart, int columnEnd, String tbodyId) throws IOException {","protected void encodeScrollBody(FacesContext context, DataTable table, String tableStyle, String tableStyleClass, int columnStart, int columnEnd) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Move accessibility checking to use version 2.1 of the,"public static void assertAccessibilityForViewIfEnabled(View view, boolean forceRunChecks) {",public static boolean passesAccessibilityChecksIfEnabled(View view) {,KEEP KEEP ADD ADD ADD KEEP REP DEL KEEP,Change Return Type
ZLTextWord optimization (?),"protected final void addWord(String data, int from, int to) { myElements.add(new ZLTextWord(data, from, to - from));","protected void addWord(String s, int offset, int len) { myElements.add(new ZLTextWord(s, (short) len, offset));",KEEP ADD KEEP KEEP REP KEEP REP KEEP REP KEEP KEEP ADD REP REP REP REP,Rename Parameter
"Added INode, IFolder, ILayoutFolder, etc. Made appropriate changes",public INode getNextSiblingNode() {,public ILayoutNode getNextSiblingNode() {,KEEP REP KEEP KEEP,Change Return Type
Initial cleanup.,private List<KeywordHit> createKeywordHits(SolrDocument solrDoc) throws TskException {,private List<KeywordHit> createKeywordtHits(SolrDocument solrDoc) throws TskException {,KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
get the context path from an application setting.,public PrependContextPathHandler(Application application),public PrependContextPathHandler(final String virtualContextPath),KEEP REP REP DEL,Rename Parameter
Remove dead code,"public MediaItemViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {","public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
return javax.ws.rs.core.Response object from IM service,public javax.ws.rs.core.Response startDownload(Request request) { return handleInstallationManagerResponse(facade.startDownload(request));,public String startDownload(Request request) { return facade.startDownload(request);,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
NetworkSearch service implementation,protected void runSearch(final String pattern) {,protected boolean runSearch(final String pattern) {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
BookCollection implementation,void loadLists(BooksDatabase database) {,private void loadLists() { final BooksDatabase database = BooksDatabase.Instance();,REP REP REP KEEP DEL DEL DEL DEL DEL,Add Parameter
fix for translation of serch property of extension item,public static String getItemDefinitionDisplayName(ItemDefinition def) {,"public static String getItemDefinitionDisplayNameOrName(ItemDefinition def, Component component) {",KEEP KEEP KEEP REP REP DEL DEL KEEP,Remove Parameter
Add time-fields to top reports,private StringValueData formatBooleanValue(ValueData valueData) {,"private void formatAndAddBooleanValue(ValueData valueData, List<ValueData> singleValue) {",KEEP REP REP REP DEL DEL KEEP,Change Return Type
Use HTML extract from summary,public CharSequence getExtract() {,public String getExtract() {,KEEP REP KEEP KEEP,Change Return Type
Seems to be a gap in method reference support,private MethodNode handleMainMethodIfPresent(final List<MethodNode> methods) {,private void handleMainMethodIfPresent(final List<MethodNode> methods) {,KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
"Issue #959: Naming & Util: Tidying refactor, removing some methods from Util",private String getErasedMethodName(Method decl) { if (decl.isClassOrInterfaceMember()) { String name = decl.getName(); if ("hash".equals(name)) { return "hashCode"; } else if ("string".equals(name)) { return "toString"; } else if ("equals".equals(name)) { return "equals"; } else if ("clone".equals(name)) { return "clone"; } else { return getMethodName(decl); },public static String getErasedMethodName(String name) { if ("hash".equals(name)) { return "hashCode"; } else if ("string".equals(name)) { return "toString"; } else if ("equals".equals(name)) { return "equals"; } else if ("clone".equals(name)) { return "clone";,REP DEL KEEP REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD,Rename Parameter
"cleanup: parameters pair (tree, tree.getUniqueKey()) is replaced by one parameter tree","public void tryResumeLoading(NetworkBaseActivity activity, NetworkCatalogTree tree, Runnable expandRunnable) { final ItemsLoadingRunnable runnable = getItemsLoadingRunnable(tree.getUniqueKey());","public void tryResumeLoading(NetworkBaseActivity activity, NetworkCatalogTree tree, NetworkTree.Key key, Runnable expandRunnable) { final ItemsLoadingRunnable runnable = getItemsLoadingRunnable(key);",KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Remove Parameter
Cleanup for pending resource EUCA-7233,"private VmRunCallback makeRunCallback( final ResourceToken childToken, final VmTypeInfo vmInfo, final String networkName ) {","private Request makeRunRequest( final ResourceToken childToken, final VmTypeInfo vmInfo, final String networkName ) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Update LayoutOutput to be ref-counted,public LayoutOutput acquireRef() {,public void incrementRefCount() {,KEEP REP REP KEEP,Change Return Type
Fix batchlog to account for CF truncation records,"private void replayMutations(List<RowMutation> mutations, long writtenAt, RateLimiter rateLimiter) throws IOException","private void replaySerializedMutation(RowMutation mutation, long writtenAt, RateLimiter rateLimiter) throws IOException",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Fix ChatArguments render.,public ChatArguments getText() {,public String getText() {,KEEP REP KEEP KEEP,Change Return Type
Add Stop Location index to transit model,private AccessEgresses getAccessEgresses() { var accessEgressMapper = new AccessEgressMapper();,private AccessEgresses getAccessEgresses(TransitLayer transitLayer) { var accessEgressMapper = new AccessEgressMapper(transitLayer.getStopIndex());,KEEP KEEP REP DEL KEEP KEEP KEEP KEEP KEEP REP,Remove Parameter
Add context menu for extension browsing,private int getTypeAccordingToItem(int type) { switch (type) {,private int getTypeAccordingToItem(int iconType) { switch (iconType) {,KEEP KEEP KEEP REP KEEP KEEP REP KEEP,Rename Parameter
fixes,int fp3(Object x) {,"int fp3(Object x, boolean b) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
[TE] clean up and fix bugs in notification pipeline (#4908),"static DetectionAlertFilterNotification makeEmailNotifications(DetectionAlertConfigDTO config) { return makeEmailNotifications(config, new HashSet<String>());",static DetectionAlertFilterNotification makeEmailNotifications() { return makeEmailNotifications(new HashSet<String>());,KEEP KEEP ADD REP KEEP KEEP ADD REP KEEP,Add Parameter
"Revert D6520077, D6520076, D6519451",ImmutableList<String> cachedPropNames) { final Set<PropModel> props = new LinkedHashSet<>(); int propIndex = 0;,private static ImmutableList<PropModel> getRawProps(,ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP,Add Parameter
Make makeTidyParser() public,"public static Tidy makeTidyParser(boolean quiet, boolean showWarnings, boolean isXml, StringWriter sw) { Tidy tidy = new Tidy(); tidy.setCharEncoding(org.w3c.tidy.Configuration.UTF8); tidy.setQuiet(quiet); tidy.setShowWarnings(showWarnings); tidy.setMakeClean(true); tidy.setXmlTags(isXml); if (sw != null) { tidy.setErrout(new PrintWriter(sw)); } return tidy; }","private static Tidy makeTidyParser(boolean quiet, boolean showWarnings, boolean isXml) { Tidy tidy = new Tidy(); tidy.setCharEncoding(org.w3c.tidy.Configuration.UTF8); tidy.setQuiet(quiet); tidy.setShowWarnings(showWarnings); tidy.setMakeClean(true); tidy.setXmlTags(isXml); return tidy; }",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP,Add Parameter
Generate the log line with pattern/args to give more flexibility downstream as to what happens with the message.,static Format ncsaFormat() { return NcsaRequestLogFormat.INSTANCE;,static Formatter ncsaFormatter() { return NcsaRequestLogFormatter.INSTANCE;,KEEP REP REP KEEP KEEP REP,Change Return Type
Support for Nexus Swiches (Cisco Vswitches),public ManagedObjectReference getDvSwitchMor(ManagedObjectReference dvPortGroupMor) throws Exception {,"public ManagedObjectReference getDvSwitchMor(ManagedObjectReference morDatacenter, ManagedObjectReference dvPortGroupMor) throws Exception {",KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
More tweaking of TypeQualifierDataflowAnalysis.,"private void checkParameterAnnotations(TypeQualifierValueSet fact, Location location)","private void checkParameterAnnotations(InstructionHandle handle, TypeQualifierValueSet fact, Location location)",KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Remove Parameter
Log list of languages at start of search,public void searchStart(String languageCodes) {,public void searchStart(String languageCode) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Videos grouping: pass context from fragments,"public static List<MediaGroup> group(MediaWrapper[] mediaList, int minGroupLengthValue) {",public static List<MediaGroup> group(MediaWrapper[] mediaList) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Use vanilla JNI experiment setup,public static YogaConfig createYogaConfig(boolean useVanillaJNI) { YogaConfig yogaConfig = YogaConfigFactory.create(useVanillaJNI); yogaConfig.setUseVanillaJNI(useVanillaJNI);,public static YogaConfig createYogaConfig() { YogaConfig yogaConfig = YogaConfigFactory.create();,KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
NullCheck & SC: set direct target on exception constructor,"public static ThrowStatement makeThrowStmt(final String variableName) { ConstructorCallExpression newException = ctorX(EXCEPTION, constX(variableName + "" cannot be null"")); newException.putNodeMetaData(DIRECT_METHOD_CALL_TARGET, EXCEPTION_STRING_CTOR);  return throwS(newException);","public static ThrowStatement makeThrowStmt(String name) { return throwS(ctorX(EXCEPTION, constX(name + "" cannot be null"")));",KEEP KEEP KEEP ADD REP REP KEEP ADD ADD REP REP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD REP,Rename Parameter
SONARJAVA-2064 Rely on SonarComponents to get file content for parser,"public JavaAstScanner(ActionParser<Tree> parser, @Nullable SonarComponents sonarComponents) {",public JavaAstScanner(ActionParser<Tree> parser) {,KEEP KEEP ADD ADD ADD REP KEEP,Add Parameter
converted sprokets to 2.0,public Class< ? extends Page> getHomePage(),public Class getHomePage(),KEEP ADD ADD ADD REP KEEP,Change Return Type
Adds some Nullable annotations.,"ComponentContext c, @Nullable TreeProps treeProps) { return treeProps;","protected TreeProps getTreePropsForChildren(ComponentContext c, TreeProps previousTreeProps) { return previousTreeProps;",REP REP REP DEL KEEP REP KEEP KEEP REP,Rename Parameter
HADOOP-9287. Parallel-testing hadoop-common. Contributed by Andrey Klochkov,"private boolean containsTestRootPath(Path path, FileStatus[] filteredPaths)","private boolean containsPath(Path path, FileStatus[] filteredPaths)",KEEP KEEP REP KEEP KEEP KEEP,Rename Method
HDFS-6482. Use block ID-based block layout on datanodes (James Thomas via Colin Patrick McCabe),public static long getBlockId(String metaOrBlockFile) { Matcher m = metaOrBlockFilePattern.matcher(metaOrBlockFile);,public static long getBlockId(String metaFile) { Matcher m = metaFilePattern.matcher(metaFile);,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Create Time-Line view in BAM,"protected void retainData(SectionConfiguration sectionConfiguration, List<List<ValueData>> sectionData)","protected void retain(SectionConfiguration sectionConfiguration, List<List<ValueData>> sectionData)",KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Asynchronous catalogs loading,"private void afterUpdateCatalogChildren(NetworkCatalogTree tree, ArrayList<NetworkLibraryItem> children, String errorMessage) { tree.ChildrenItems.clear(); tree.ChildrenItems.addAll(children);","private void updateCatalogChildren(NetworkCatalogTree tree) { tree.clear(); ArrayList<NetworkLibraryItem> children = tree.ChildrenItems; children.clear(); LoadSubCatalogRunnable loader = new LoadSubCatalogRunnable(tree.Item, children); loader.executeWithUI(); if (loader.hasErrors()) { loader.showErrorMessage(this); } else if (children.isEmpty()) {",KEEP KEEP REP REP DEL DEL KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP REP DEL DEL DEL DEL,Add Parameter
plugi images in DataServer,"DataServer(DataService service, int port) {",DataServer(int port) {,ADD ADD REP KEEP KEEP,Add Parameter
Rename tracksCount variable in Album,public int getTracksCount() { return mTracksCount;,public int getNbTracks() { return nbTracks;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Avoid ClassCastException in ArrayForVarArgCheck,"private static Type getMethodType(Symbol.MethodSymbol methodSymbol, Tree methodName) { if (!JUtils.isParametrizedMethod(methodSymbol)) {","private static MethodJavaType getMethodType(JavaSymbol.MethodJavaSymbol methodSymbol, Tree methodName) { if (!methodSymbol.isParametrized()) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
Make execution management more efficient by reducing a check on the hot path to just a pointer comparison.,private void exec(final Iterator<? extends ExecInterceptor> interceptors) throws Exception {,private void intercept(final Iterator<? extends ExecInterceptor> interceptors) throws Exception {,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
resolve merge conflict,"public ConcretizeCells(ConfigurationInfo configurationInfo, LabelInfo labelInfo, SortInfo sortInfo, Module module) {","public ConcretizeCells(ConfigurationInfo configurationInfo, LabelInfo labelInfo, SortInfo sortInfo, Module module, KExceptionManager kem) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
OC-6701,"public ResponseEntity<Object> createNewSites(HttpServletRequest request, @RequestBody ArrayList sites, @PathVariable(""uniqueProtocolID"") String uniqueProtocolID) throws Exception {","public ResponseEntity<Object> createNewSites(HttpServletRequest request, @RequestBody HashMap<String, Object> map, @PathVariable(""uniqueProtocolID"") String uniqueProtocolID) throws Exception { ArrayList sites = (ArrayList) map.get(""sites"");",KEEP KEEP KEEP KEEP KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Parameter
Fix dropping collection column when it's the last regular column,private ColumnDefinition addDefaultValueAlias(ColumnDefinition compactValueDef),"private ColumnDefinition addDefaultValueAlias(ColumnDefinition compactValueDef, boolean isDense)",KEEP KEEP KEEP REP DEL DEL,Remove Parameter
"Fix bug 6479405 On tablet, sometimes, QC -> full contact...","private Result(Uri requestedUri, Result from) { mRequestedUri = requestedUri;",private Result(Result from) {,KEEP ADD ADD REP KEEP KEEP ADD ADD ADD,Add Parameter
AIC: place local variable references above super ctor call,"private static boolean extractImplicitThis$0StmtFromExpression(final List<Statement> stmts, final Statement exprStmt) { Expression expr = ((ExpressionStatement) exprStmt).getExpression();","private static boolean extractImplicitThis$0StmtIfInnerClassFromExpression(final List<Statement> stmts, final Statement bstmt) { Expression expr = ((ExpressionStatement) bstmt).getExpression();",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
"YARN-1008. MiniYARNCluster with multiple nodemanagers, all nodes have same key for allocations. (tucu)","public FiCaSchedulerNode(RMNode node, boolean usePortForNodeName) {",public FiCaSchedulerNode(RMNode node) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
GG-33016 [IGNITE-14402] Java thin client: Continuous queries support,"ClientCacheEntryListenersRegistry lsnrsRegistry) { this(name, ch, marsh, transactions, lsnrsRegistry, false, null);","TcpClientCache(String name, ReliableChannel ch, ClientBinaryMarshaller marsh, TcpClientTransactions transactions) { this(name, ch, marsh, transactions, false, null);",REP REP DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP,Add Parameter
Added read only and known status to central repo.,public HashDbManager.HashDb.KnownFilesType getKnownStatus(){ if(fileKnownStatus.equals(TskData.FileKnown.BAD)){ return HashDbManager.HashDb.KnownFilesType.KNOWN_BAD; } return HashDbManager.HashDb.KnownFilesType.KNOWN;,public TskData.FileKnown getKnownStatus() { return knownStatus;,KEEP REP REP REP KEEP ADD ADD ADD REP,Change Return Type
Adding type parameter to delete segments logic (#979),"private boolean deleteSegment(String tablename, String segmentName) throws IOException { boolean deleteSuccessful = false;","private String deleteSegment(String tablename, String segmentName) throws IOException { String response = null;",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP REP,Change Return Type
Fix strict checking of --link-at-build-time arguments for jar-files on classpath,"protected void handleClassFileName(URI container, Object module, String fileName, char fileSystemSeparatorChar) {","protected void handleClassFileName(URI location, Object module, String fileName, char fileSystemSeparatorChar) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
SC: match functional interface to variadic method reference,"private MethodNode addSyntheticMethodForConstructorReference(final String methodName, final ClassNode returnType, final Parameter[] parametersWithExactType) { ArgumentListExpression ctorArgs = new ArgumentListExpression(parametersWithExactType);","private MethodNode addSyntheticMethodForConstructorReference(final String syntheticMethodName, final ClassNode returnType, final Parameter[] parametersWithExactType) { ArgumentListExpression ctorArgs = args(parametersWithExactType);",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Rename Parameter
Revert "Add improved support for external directories in ShadowEnvironment. (#3140)",public static String getStorageState(File path) { return externalStorageState;,"public static String getStorageState(File directory) { Path directoryPath = directory.toPath(); for (Map.Entry<Path, String> entry : storageState.entrySet()) { if (directoryPath.startsWith(entry.getKey())) { return entry.getValue(); } } return null;",KEEP KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL,Rename Parameter
new label-oriented interface in IBookCollection,public synchronized List<Book> booksForLabel(String label) {,public synchronized List<Book> favorites() {,KEEP KEEP KEEP ADD REP KEEP,Add Parameter
STC: consistent parameter (aka target) type for functional expression,default String createMethodDescriptor(final MethodNode method) { Class<?> returnType = method.getReturnType().getTypeClass(); Class<?>[] parameterTypes = Arrays.stream(method.getParameters()) .map(p -> p.getType().getTypeClass()).toArray(Class[]::new);,"default String createMethodDescriptor(final MethodNode abstractMethodNode) { return BytecodeHelper.getMethodDescriptor( abstractMethodNode.getReturnType().getTypeClass(), Arrays.stream(abstractMethodNode.getParameters()) .map(e -> e.getType().getTypeClass()) .toArray(Class[]::new) );",KEEP KEEP KEEP KEEP REP KEEP ADD ADD REP REP REP REP REP REP REP REP REP,Rename Parameter
HDFS-6930. Improve replica eviction from RAM disk. (Arpit Agarwal),synchronized void reenqueueReplicaNotPersisted(final ReplicaState replicaState) {,synchronized void reenqueueReplica(final ReplicaState replicaState) {,KEEP KEEP REP KEEP KEEP KEEP,Rename Method
reload button does reload again,private void setError(final String error) {,private void setErrorText(final String errorText) {,KEEP KEEP REP KEEP REP KEEP,Rename Parameter
Code cleanup,"private List<Column> getArtifactTableColumnHeaders(int artifactTypeId, Set<BlackboardAttribute.Type> types) { ArrayList<Column> columnHeaders = new ArrayList<>();","private List<Cell> getArtifactTableColumnHeaders(int artifactTypeId, Set<BlackboardAttribute.Type> types) { ArrayList<Cell> columnHeaders = new ArrayList<>();",KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Allow chaining of RecyclerBinderConfiguration setters,public RecyclerBinderConfiguration setHasDynamicItemHeight(boolean hasDynamicItemHeight) {,public void setHasDynamicItemHeight(boolean hasDynamicItemHeight) {,KEEP REP KEEP KEEP KEEP,Change Return Type
merge conflicts,"private void countAndAddCommonAttributes(String md5Value, int resultId) {","private void countAndAddCommonAttributes(String md5Value, int resultId, String correlationCaseDisplayName) {",KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
SONAR-17564 Add statistics on imported sarif files/issues count,public SarifImportResults importSarif(Sarif210 sarif210) { int successFullyImportedIssues = 0; int successFullyImportedRuns = 0; int failedRuns = 0;,public void importSarif(Sarif210 sarif210) {,KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
MockMethodParamModel uses TypeSpec,"TypeSpec typeSpec,","TypeName type,",REP REP,Rename Parameter
Remove unused variables,private void createContextMenuInfo(int position) {,"private void createContextMenuInfo(int position, long id) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
[TE] remove static event provider manager (#2631),"public HolidayEventsPipeline(String outputName, Set<String> inputNames, EventManager eventDAO, StrategyType strategy, int k) {","public HolidayEventsPipeline(String outputName, Set<String> inputNames, EventDataProviderManager eventDataProvider, StrategyType strategy, int k) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
SONAR-17524 using new config property to set default main branch,"public BranchLoader(MutableAnalysisMetadataHolder metadataHolder, DefaultBranchNameResolver defaultBranchNameResolver) { this(metadataHolder, null, defaultBranchNameResolver);","public BranchLoader(MutableAnalysisMetadataHolder metadataHolder) { this(metadataHolder, null);",KEEP KEEP ADD ADD REP KEEP KEEP ADD REP,Add Parameter
Add support for fake map controller,public FakeMapView(MapView mapView) { super(mapView);,public FakeMapView(ViewGroup viewGroup) { super(viewGroup); mapController = mock(MapController.class);,KEEP REP REP KEEP REP DEL DEL DEL,Rename Parameter
#8128 Unified authentication UI,"protected void createPasswordControls(Composite parent, Runnable propertyChangeListener) { Label passwordLabel = UIUtils.createLabel(parent, UIConnectionMessages.dialog_connection_auth_label_password); passwordLabel.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING)); Composite passPH = UIUtils.createComposite(parent, 2); passPH.setLayoutData(new GridData(GridData.FILL_HORIZONTAL)); createPasswordText(passPH, null); passwordText.addModifyListener(e -> propertyChangeListener.run());","protected void createPasswordControls(Composite parent, int hSpan) {",KEEP KEEP KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Using constant layouts,protected GetFixedAttributeNode createPckgAttrAccess() { return GetFixedAttributeNode.create(RRuntime.PCKG_ATTR_KEY);,protected FixedAttributeGetter createPckgAttrAccess() { return FixedAttributeGetter.create(RRuntime.PCKG_ATTR_KEY);,KEEP REP KEEP KEEP KEEP REP,Change Return Type
"regenerified abstractchoice to make it more flexible, and more generification",public List<E> getChoices(),public List<V> getChoices(),KEEP REP KEEP,Change Return Type
Administrative roles EUCA-8164,void removeCertificate( String certificateId ) throws AuthException;,public void removeCertificate( String certficateId ) throws AuthException;,DEL KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Create Time-Line view in BAM,"private void executeSpecificPeriod(Job job, String runCondition) throws Exception {","private void executeSpecificPeriod(Job job, String forceRunCondition) throws Exception {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Remove dual panel code from ActionBarAdapter,"public ActionBarAdapter(Context context, Listener listener, ActionBar actionBar) {",boolean isUsingTwoPanes) {,ADD ADD ADD ADD ADD REP REP KEEP,Remove Parameter
#7459,"default boolean forEachColumn(FacesContext context, UIComponent root, boolean unwrapDynamicColumns, boolean skipUnrendered, boolean visitColumnGroups,","default boolean forEachColumn(FacesContext context, UIComponent root, boolean unwrapDynamicColumns, boolean skipUnrendered,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD,Add Parameter
4652 working selection of data source,void selectDataSource(Long dataSourceId) { dataSourcesPanel.selectDataSource(dataSourceId);,void selectDataSource(Long dataSourceID) {,KEEP KEEP REP KEEP ADD,Rename Parameter
Fix recommendations on TV,private static void buildRecommendation(MediaWrapper movie),"private static Notification buildRecommendation(Context context, MediaWrapper movie)",KEEP KEEP REP REP DEL DEL KEEP,Change Return Type
SONARJAVA-3919 Add quick fixes for S5786 (JUnit5DefaultPackageClassAndMethodCheck),"protected abstract boolean isNonCompliantModifier(Modifier modifier, boolean isMethod); protected abstract void raiseIssueOnNonCompliantReturnType(MethodTree methodTree); protected void raiseIssueOnNonCompliantModifier(ModifierKeywordTree modifier) { reportIssue(modifier, String.format(WRONG_MODIFIER_ISSUE_MESSAGE, modifier.keyword().text())); }","protected abstract boolean isNotCompliantModifier(Modifier modifier, boolean isMethod);",KEEP KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Method
Get written value for immutable updates,public static <T> WrittenValue<T> writeValueThatIsNotAField(,public static @Nullable <T> Boolean writeValueThatIsNotAField(,KEEP KEEP DEL KEEP REP KEEP,Change Return Type
Improve code for modify/delete shadow operations,"void checkAddAccess(ProvisioningContext ctx, ShadowType shadow, OperationResult parentResult)","void checkAdd(ProvisioningContext ctx, ShadowType shadow, OperationResult parentResult)",KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Method
Compare willRender base contexts when using cached layout,InternalNode consumeLayoutCreatedInWillRender(ComponentContext context) {,InternalNode consumeLayoutCreatedInWillRender() {,KEEP ADD REP KEEP,Add Parameter
feature: Rename config parameter 'netexFeedId' to 'feedId',"String feedId,","String netexFeedId,",KEEP REP,Rename Parameter
HDFS-6222. Remove background token renewer from webhdfs. Contributed by Rushabh Shah and Daryn Sharp.,protected Text getTokenKind() { return TOKEN_KIND;,"protected synchronized void initializeTokenAspect() { tokenAspect = new TokenAspect<SWebHdfsFileSystem>(this, tokenServiceName, TOKEN_KIND);",KEEP REP REP DEL KEEP REP REP DEL DEL DEL DEL,Change Return Type
"Create `YogaValue` instances in Java, not C++",static native long jni_YGNodeStyleGetFlexBasis(long nativePointer);,static native Object jni_YGNodeStyleGetFlexBasis(long nativePointer);,KEEP KEEP REP KEEP KEEP,Change Return Type
SONARJAVA-1489 XmlCheckContext provide ways to compile and evaluate xpath expression separately,"public XmlCheckContextImpl(Document document, File file, XPath xPath, SonarComponents sonarComponents) {","public XmlCheckContextImpl(Document document, File file, SonarComponents sonarComponents) {",KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Back out "Process visibility events without turning on incremental mount",private void maybePerformIncrementalMountOnOffsetOrTranslationChange() { if (mComponentTree == null || !mComponentTree.isIncrementalMountEnabled() || !(getParent() instanceof View)) {,private void onOffsetOrTranslationChange() { if (mComponentTree == null || !(getParent() instanceof View)) {,KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Rename Method
Added support for argument "exact" for container accesses.,"private RNode createPositions(List<ArgNode> argList, int argLength, boolean isSubset, RNode castContainer, RNode dropDim, RNode tmpVarAccess, RNode rhsAccess, CoerceVector coerceVector, boolean isAssignment) {","private RNode createPositions(List<ArgNode> argList, int argLength, boolean isSubset, boolean isAssignment) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP,Add Parameter
refactor: Rename SpeedTest config parameter to maxWalkDurationSeconds from maxWalkDistanceMeters,public double getAccessEgressMaxWalkDurationSeconds() { return config.maxWalkDurationSeconds;,public double getAccessEgressMaxWalkDistanceMeters() { return config.maxWalkDistanceMeters;,KEEP KEEP REP KEEP KEEP REP,Rename Method
ER diagram collector: exclude views and partitions from object containers,"public static List<ERDEntity> generateEntityList(final EntityDiagram diagram, Collection<DBPNamedObject> objects, boolean forceShowViews)","public static List<ERDEntity> generateEntityList(final EntityDiagram diagram, Collection<DBPNamedObject> objects, boolean showViews)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Allow creation of duplicates of empty system groups,private String getSelection() { final StringBuilder builder = new StringBuilder(); builder.append(Groups.ACCOUNT_NAME).append("=? AND ") .append(Groups.ACCOUNT_TYPE).append("=? AND ") .append(Groups.DELETED).append("=?"); if (mAccount.dataSet != null) { builder.append(" AND ").append(Groups.DATA_SET).append("=?"); } return builder.toString(); } private String[] getSelectionArgs() { final int len = mAccount.dataSet == null ? 3 : 4; final String[] args = new String[len]; args[0] = mAccount.name; args[1] = mAccount.type; args[2] = "0";  if (mAccount.dataSet != null) { args[3] = mAccount.dataSet; } return args; },public static String getSelection(AccountWithDataSet account) { final StringBuilder builder = new StringBuilder(); builder.append(ContactsContract.Groups.ACCOUNT_NAME).append("=? AND ") .append(ContactsContract.Groups.ACCOUNT_TYPE).append("=?"); if (account.dataSet != null) { builder.append(" AND ").append(ContactsContract.Groups.DATA_SET).append("=?"); } return builder.toString(); } public static String[] getSelectionArgs(AccountWithDataSet account) { final int len = account.dataSet == null ? 2 : 3; final String[] args = new String[len]; args[0] = account.name; args[1] = account.type; if (account.dataSet != null) { args[2] = account.dataSet; } return args; } },REP DEL KEEP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD REP KEEP REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP DEL KEEP REP DEL KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD REP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP DEL KEEP,Remove Parameter
Fix for #1784: Compiler always adds checkNull() for rhs of 'else' operation,"public JCExpression transform(Tree.DefaultOp op, ProducedType expectedType) {",public JCTree transform(Tree.DefaultOp op) {,KEEP REP KEEP ADD ADD REP KEEP,Change Return Type
Fix issues with reading lists.,"public void addToReadingList(@NonNull PageTitle title, @NonNull AddToReadingListDialog.InvokeSource source) {",public void addToReadingList(@NonNull AddToReadingListDialog.InvokeSource source) {,KEEP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP,Add Parameter
Refactor ShadowWrangler to delegate to a ShadowMatcher for making SDK-level decisions.,"public ShadowInfo getShadowInfo(Class<?> clazz, ShadowMatcher shadowMatcher) {","public ShadowInfo getShadowInfo(Class<?> clazz, int apiLevel) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Removed obsolete code for "..." handling,"public static EvaluatedArguments create(Object[] args, String[] names) {","public static EvaluatedArguments create(Object[] evaluatedArgs, String[] names) { int trailingNullsCount = 0; for (int i = 0; i < evaluatedArgs.length; i++) { if (evaluatedArgs[i] == null) { trailingNullsCount++; } else { trailingNullsCount = 0; } }",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Added ARTIFACT-TYPE to type class,"public ModuleDataEvent(String moduleName, BlackboardArtifact.Type blackboardArtifactType) { super(ARTIFACT_TYPE.fromID(blackboardArtifactType.getTypeID())); this.blackboardArtifactType = blackboardArtifactType;","public ModuleDataEvent(String moduleName, BlackboardArtifact.Type artifactTypeId) { super(ARTIFACT_TYPE.fromID(artifactTypeId.getTypeID())); this.artifactTypeId = artifactTypeId;",KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP REP,Rename Parameter
CallableBuilder: Refactor CallableBuilder to remove a lot of copy and pasted code and generally make it less crazy.,"private JCExpression makeParameterExpr(Parameter param, int argIndex, ProducedType paramType, boolean ellipsis){","private JCExpression makeParameterExpr(Parameter param, int argIndex, ProducedType paramType, boolean varargs){",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Exception when trying to set query for the report #1534,"public FakeFilterSupport(FrameOwner frameOwner, MetaClass metaClass) {","public FakeFilterSupport(Frame frame, MetaClass metaClass) {",KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Add column update delta histogram (2.1),"public Pair<Long, Long> addAllWithSizeDelta(final ColumnFamily cm, MemtableAllocator allocator, OpOrder.Group writeOp, Updater indexer)","public long addAllWithSizeDelta(final ColumnFamily cm, MemtableAllocator allocator, OpOrder.Group writeOp, Updater indexer)",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
minor edits,"public static ClassNode getNextSuperClass(final ClassNode source, final ClassNode target) { if (source.isArray()) { if (!target.isArray()) return null;","public static ClassNode getNextSuperClass(final ClassNode clazz, final ClassNode goalClazz) { if (clazz.isArray()) { if (!goalClazz.isArray()) return null;",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP,Rename Parameter
Event validation takes into account PARAMETERS,"public static Map<String, String> fetchEncodedPairs(String data, boolean keyToLowerCase) throws UnsupportedEncodingException {","public static Map<String, String> fetchEncodedPairs(String data) throws UnsupportedEncodingException {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
fix view of RuntimeConfigurationType in wicket-jmx,public String getConfigurationType(),public RuntimeConfigurationType getConfigurationType(),KEEP REP KEEP,Change Return Type
Imrove mapping of fare transfer rules,public Collection<FareTransferRule> map(,public Collection<FareLegRule> map(,KEEP REP KEEP,Change Return Type
Added comments,"static boolean upgradeSolrIndexVersion4to5(String solr4IndexPath, String tempResultsDir) {","static boolean upgradeSolrIndex4to5(String solr4IndexPath, String tempResultsDir) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
[hotfix] fix limit pushdown only keep 10_000 rows (#10224),"int defaultHolderCapacity, long requestId, int stageId) {","int maxHolderCapacity, long requestId, int stageId) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Adds handling of setting extensions from the RenderState.,public @Nullable LayoutResultVisitor getLayoutVisitor() { return mLayoutResultVisitor; } @Nullable,public @Nullable LayoutResultVisitor<List<LayoutResult<?>>> getLayoutVisitor() { return new TestLayoutResultVisitor();,KEEP KEEP REP KEEP KEEP KEEP ADD REP REP,Change Return Type
Address IDE hints for DeleteDataSourceAction.java,public DeleteDataSourceAction(Long dataSourceID) {,public DeleteDataSourceAction(Long dataSourceId) {,KEEP KEEP REP KEEP,Rename Parameter
`@Immutable(specialNamedArgHandling=false)` for `Map` prop,"private void doMakeImmutable(final ClassNode cNode, final AnnotationNode anno, final PropertyHandler handler) {","private void doMakeImmutable(final ClassNode cNode, final AnnotationNode node, final PropertyHandler handler) { List<PropertyNode> newProperties = new ArrayList<>();",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Rename Parameter
WICKET-215,"public final void mountBookmarkablePage(final String path, final String pageMapName,","public final void mountBookmarkablePage(final String path, final IPageMap pageMap,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP,Rename Parameter
Changed SelfCalls to use a CallGraph to represent the calls.,private void scan(CallGraphNode node) throws CFGBuilderException { Method method = node.getMethod(); CFG cfg = classContext.getCFG(method);,"private void scan(Method method, MethodGen mg, CFG cfg) {",KEEP KEEP ADD ADD ADD ADD ADD REP REP REP REP KEEP ADD REP REP,Add Parameter
ensure frame is created and device initialized already on open page and ,private void disposeGraphics2DDevice() {,private void disposeImageDevice() {,KEEP KEEP REP KEEP,Rename Method
Fix validation of empty column names for compact tables,public static void validateColumnNames(Iterable<ByteBuffer> columnNames) throws InvalidRequestException,public static void validateColumnNames(Iterable<ByteBuffer> columns) throws InvalidRequestException,KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Parameter
understand 'px' and 'pt' as described in standard,"public ZLTextMetrics(int dpi, int fullWidth, int fullHeight) {","public ZLTextMetrics(int dpi, int defaultFontSize, int fullWidth, int fullHeight) {",KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP,Remove Parameter
[TE] Enable speedup for backfill (#1655),"public void synchronousBackFill(List<Long> functionIds, DateTime backfillStartTime, DateTime backfillEndTime, boolean force) { Map<Long, Long> jobExecutionIdFunctionIdMap = new HashMap<>(); for (long functionId : functionIds) { Long jobExecutionId = runBackfill(functionId, backfillStartTime, backfillEndTime, force); if (jobExecutionId == null) { LOG.warn(""Unable to perform backfill on function Id {} between {} and {}"", functionId, backfillStartTime, backfillEndTime); } else { jobExecutionIdFunctionIdMap.put(jobExecutionId, functionId); }","public void synchronousBackFill(long functionId, DateTime backfillStartTime, DateTime backfillEndTime, boolean force) { Long jobExecutionId = runBackfill(functionId, backfillStartTime, backfillEndTime, force); if (jobExecutionId == null) { LOG.warn(""Unable to perform backfill on function Id {} between {} and {}"", functionId, backfillStartTime, backfillEndTime); return;",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD REP,Rename Parameter
Update SubscriptionManager API as per API council.,private static List<SubscriptionInfo> getAllSubInfoList() { final List<SubscriptionInfo> subInfoRecords0 = SubscriptionManager.getSubscriptionInfoUsingSlotId(0); final List<SubscriptionInfo> subInfoRecords1 = SubscriptionManager.getSubscriptionInfoUsingSlotId(1);,private static List<SubInfoRecord> getAllSubInfoList() { final List<SubInfoRecord> subInfoRecords0 = SubscriptionManager.getSubInfoUsingSlotId(0); final List<SubInfoRecord> subInfoRecords1 = SubscriptionManager.getSubInfoUsingSlotId(1);,KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP REP KEEP REP KEEP KEEP REP,Change Return Type
2019.09.13 (1.52q; Release version),public Roi convertToPolygon() {,public Roi toArea() { if (!isLine()) return this;,KEEP KEEP REP KEEP DEL DEL DEL DEL,Rename Method
Add support for outgoing calls to ShadowTelecomManager,"public List<IncomingCallRecord> getAllIncomingCalls() { return ImmutableList.copyOf(incomingCalls); } public IncomingCallRecord getLastIncomingCall() { return Iterables.getLast(incomingCalls); } public IncomingCallRecord getOnlyIncomingCall() { return Iterables.getOnlyElement(incomingCalls); } @Implementation(minSdk = M) protected void placeCall(Uri address, Bundle extras) { outgoingCalls.add(new OutgoingCallRecord(address, extras)); } public List<OutgoingCallRecord> getAllOutgoingCalls() { return ImmutableList.copyOf(outgoingCalls); } public OutgoingCallRecord getLastOutgoingCall() { return Iterables.getLast(outgoingCalls);",public List<CallRecord> getAllIncomingCalls() { return incomingCalls;,KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
Formatting fixes to the generators,"private static void makeOres(Chunk source, Random random, int originX, int originY, int originZ, int amount, int type) { for (int i = 0; i < amount; i++) { int x = originX + random.nextInt(amount / 2) - amount / 4; int y = originY + random.nextInt(amount / 4) - amount / 8; int z = originZ + random.nextInt(amount / 2) - amount / 4; x &= 0xf; z &= 0xf; if (y > 127 || y < 0) { continue; } Block block = source.getBlock(x, y, z); if (block.getTypeId() == STONE) { block.setTypeId(type, false); } } }","private static void internal(Chunk source, Random random, int originX, int originY, int originZ, int amount, int type) { for (int i = 0; i < amount; i++) { int x = originX + random.nextInt(amount / 2) - amount / 4; int y = originY + random.nextInt(amount / 4) - amount / 8; int z = originZ + random.nextInt(amount / 2) - amount / 4; x &= 0xf; z &= 0xf; if (y > 127 || y < 0) { continue; } Block block = source.getBlock(x, y, z); if (block.getTypeId() == STONE) { block.setTypeId(type, false); } } }",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Trivial refactoring: rename method name and extract common checks,private void loadEnclosingClassInstance(boolean accessingInstanceMembers) {,private void loadEnclosingClassInstance(MethodNode syntheticLambdaMethodNode) {,KEEP KEEP REP REP KEEP,Rename Parameter
Avoid double unmount when using extensions,private static int getInternalMountItems(LithoView lithoView) { return lithoView.getMountDelegateTarget().getMountItemCount();,"private static long[] getInternalMountItems(LithoView lithoView) { MountState mountState = Whitebox.getInternalState(lithoView, ""mMountState""); return Whitebox.getInternalState(mountState, ""mLayoutOutputsIds"");",KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL KEEP REP DEL,Change Return Type
Network code changes,public static String getUserAgent() { return "FBReader/" + ZLibrary.Instance().getVersionName() + "(java)";,public static String getUserAgent(String versionName) { return "FBReader/" + versionName + "(java)";,KEEP KEEP KEEP REP DEL KEEP KEEP KEEP KEEP REP KEEP KEEP,Remove Parameter
Add support for GATT BLE devices on Android,"public static AndroidPort connect(Context context, String address) {",public static AndroidPort connect(String address) {,KEEP KEEP KEEP ADD ADD REP KEEP KEEP,Add Parameter
Hunspell: avoid slow dictionary lookup if the word's hash isn't there (#2405),"private int writeNormalizedWordEntry(StringBuilder reuse, ByteSequencesWriter writer, String line) throws IOException {","private void writeNormalizedWordEntry( StringBuilder reuse, ByteSequencesWriter writer, String line) throws IOException {",KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add client-side API to iterate on results of listStatus,"private synchronized <V> V retryRPCInternal(RetryPolicy retryPolicy, RpcCallable<V> rpc, Supplier<Void> onRetry) throws AlluxioStatusException {","private synchronized <V> V retryRPCInternal(RpcCallable<V> rpc, Supplier<Void> onRetry) throws AlluxioStatusException { RetryPolicy retryPolicy = mRetryPolicySupplier.get();",KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL,Add Parameter
EUCA-13318 s3 multi-part upload fails when using signature v4,"static void buildCanonicalQueryString(Map<String,String> parameters, StringBuilder sb) {","static void buildCanonicalQueryString(MappingHttpRequest request, StringBuilder sb) {",KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
5092 fix accidently reverted check of datasource id,"void refresh(long dataSourceId, IngestJobInfo.IngestJobStatusType newStatus) {","void refresh(content datasource, IngestJobInfo.IngestJobStatusType newStatus) {",KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Refactor PlaybackService,public boolean isValidIndex(int positionInPlaylist) { return playlistManager.isValidPosition(positionInPlaylist); } public Media.Stats getLastStats() { return playlistManager.getPlayer().getPreviousMediaStats();,public boolean isValidIndex(int position) { return position >= 0 && position < mMediaList.size();,KEEP KEEP KEEP REP KEEP KEEP ADD REP REP REP REP REP REP REP,Rename Parameter
"WICKET-4593 bi-directional model second try, more tests for TabbedPanel",public TabbedPanel<T> setSelectedTab(final int index),public TabbedPanel setSelectedTab(final int index),KEEP REP KEEP KEEP KEEP,Change Return Type
Read max slope from default routing request,"public TileRendererManager(Graph graph, RoutingRequest routingRequest) {",public TileRendererManager(Graph graph) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
[QueryContext] Refactor PlanMaker to use QueryContext (#5568),"public Plan makeInstancePlan(List<IndexSegment> indexSegments, QueryContext queryContext, ExecutorService executorService, long timeOutMs) { List<PlanNode> planNodes = new ArrayList<>(indexSegments.size()); for (IndexSegment indexSegment : indexSegments) { planNodes.add(makeSegmentPlanNode(indexSegment, queryContext)); } CombinePlanNode combinePlanNode = new CombinePlanNode(planNodes, queryContext.getBrokerRequest(), executorService, timeOutMs, _numGroupsLimit); return new GlobalPlanImplV0(new InstanceResponsePlanNode(combinePlanNode)); } @Override public PlanNode makeSegmentPlanNode(IndexSegment indexSegment, QueryContext queryContext) { BrokerRequest brokerRequest = queryContext.getBrokerRequest(); if (QueryContextUtils.isAggregationQuery(queryContext)) { List<ExpressionContext> groupByExpressions = queryContext.getGroupByExpressions(); if (groupByExpressions != null) { QueryOptions queryOptions = new QueryOptions(queryContext.getQueryOptions());","@Override public Plan makeInterSegmentPlan(List<SegmentDataManager> segmentDataManagers, BrokerRequest brokerRequest, ExecutorService executorService, long timeOutMs) { List<IndexSegment> indexSegments = new ArrayList<>(segmentDataManagers.size()); for (SegmentDataManager segmentDataManager : segmentDataManagers) { indexSegments.add(segmentDataManager.getSegment()); } List<PlanNode> planNodes = new ArrayList<>(); for (IndexSegment indexSegment : indexSegments) { planNodes.add(makeInnerSegmentPlan(indexSegment, brokerRequest)); } CombinePlanNode combinePlanNode = new CombinePlanNode(planNodes, brokerRequest, executorService, timeOutMs, _numGroupsLimit); return new GlobalPlanImplV0(new InstanceResponsePlanNode(combinePlanNode));",DEL KEEP KEEP REP REP REP REP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP REP KEEP REP REP KEEP REP KEEP ADD REP KEEP REP REP KEEP KEEP REP REP REP REP REP REP REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP KEEP REP DEL,Add Parameter
Added 2 points for defining the range of effect for dynamic blocks,public Vector3[] maxRange();,public Vector3 maxRange();,KEEP REP KEEP,Change Return Type
Code cleanup: removed tiger substitutes and fixed places where this class was used,private static boolean isClassLoaderCreation(ClassInstanceCreation node) { return isClassLoader(node.getType());,private boolean isClassLoaderCreation(ClassInstanceCreation classLoaderCreation) { return isClassLoader(classLoaderCreation.getType());,KEEP ADD KEEP KEEP REP KEEP KEEP REP,Rename Parameter
Working on support for exhaustive type qualifiers.  Need to write some test cases.,"private static void determineIfQualifierIsExclusiveOrExhaustive(ClassDescriptor desc, TypeQualifierValue result) {","private static void determineIfQualifierIsExclusive(ClassDescriptor desc, TypeQualifierValue result) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Changing metadata field name (#2272),"public Map<String, String> getTaskSegmentModificationTime() { return _taskSegmentModificationTime;","public Map<String, String> getCustomFields() { return _customFields;",KEEP KEEP KEEP REP KEEP KEEP REP,Rename Method
android/BluetoothGattClientPort: fold startConnect() into constructor,"public BluetoothGattClientPort(Context context, BluetoothDevice device) throws IOException {",public void startConnect(Context context) throws IOException { shutdown = false;,KEEP ADD REP REP REP KEEP KEEP KEEP DEL DEL DEL,Add Parameter
Fix&refactor viewport invalidation logic in RecyclerBinder,"private ViewportManager getViewportManager(int firstVisiblePosition, int lastVisiblePosition) {","int firstFullyVisiblePosition, int lastFullyVisiblePosition) {",ADD ADD REP REP KEEP REP KEEP,Rename Parameter
Implemented ContextMenuActionProvider interface in HashDatabase module,AddContentToHashDbMenu(String menuText) { super(menuText);,AddContentToHashDbMenu() {,ADD REP KEEP ADD,Add Parameter
"Issue #1200: ClassTransformer: Rename initParam() -> makeAttributeForValueParameter(), mirroring makeMethodForFunctionalParameter(), and push the if for the functional parameter inside makeMethodForFunctionalParameter().","private void makeAttributeForValueParameter(ClassDefinitionBuilder classBuilder, Parameter decl) {","private void initParam(ClassDefinitionBuilder classBuilder, Parameter decl) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
feature: add config param to determine if moving abi while starting fullnode,public void doWork() {,public void doWork(boolean isOut) {,KEEP KEEP REP DEL KEEP,Remove Parameter
Fixed #2340,"protected void encodeLabel(FacesContext context, SelectCheckboxMenu menu, List<SelectItem> selectItems, boolean valid) throws IOException {","protected void encodeLabel(FacesContext context, SelectCheckboxMenu menu, List<SelectItem> selectItems) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Use ItemDecoration for the headers. They are now sticky.,"public AudioBrowserAdapter(int type, IEventsHandler eventsHandler, boolean sections) {","public AudioBrowserAdapter(int type, IEventsHandler eventsHandler, MLPagedModel model, boolean sections) {",KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP KEEP,Remove Parameter
SONARJAVA-3370 Avoid raising issues in S5411 when Boolean methods are annotated with @Nonnull or similar,private static boolean isValidMethodInvocation(ExpressionTree tree) {,private static boolean isOptionalInvocation(ExpressionTree tree) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
TupleConstructor should allow a mechanism to switch off automatic parameter defaults,"private static Parameter createParam(FieldNode fNode, String name, boolean defaults, AbstractASTTransformation xform) {","private static Parameter createParam(FieldNode fNode, String name) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
WICKET-6129 let requestcycle execute scheduled and replaced handlers,public IRequestHandler execute(final IRequestHandler handler),public void execute(final IRequestHandler handler),KEEP REP KEEP KEEP KEEP,Change Return Type
fix the previous hack: kore test assume tty.stdin true,"public KRun(KExceptionManager kem, FileUtil files, boolean ttyStdin) {","public KRun(KExceptionManager kem, FileUtil files, TTYInfo tty) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Redo ShadowMotionEvent to mirror Android native code.,"int nativePtr, int deviceId, int source, int action, int flags, int edgeFlags, int metaState, int buttonState, float xOffset, float yOffset, float xPrecision, float yPrecision, long downTimeNanos, long eventTimeNanos, int pointerCount, PointerProperties[] pointerIds, PointerCoords[] pointerCoords) { return (int) nativeInitialize( (long) nativePtr, deviceId, source, action, flags, edgeFlags, metaState, buttonState, xOffset, yOffset, xPrecision, yPrecision, downTimeNanos, eventTimeNanos, pointerCount, pointerIds, pointerCoords);",@Implementation public final int getPointerCount() { return pointerCount;,ADD REP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Add Parameter
Interim commit,private void updateView(ResultsTableArtifact resultsTableArtifact) {,private void updateView(ViewUpdate viewUpdate) {,KEEP KEEP REP REP KEEP,Rename Parameter
Rewrite from Mike run in seperate JVM.,public void setDebug(boolean flag) { this.debug = flag; },public void setDebug(boolean debug) { this.debug = debug; },KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
3964: Functional test include testing flag for zip bomb,public void testEncryptionAndZipBomb() {,public void testEncryption() {,KEEP KEEP REP KEEP,Rename Method
"Added content to ArtifactData to optimize getting time, source file.",private String getFileUniquePath(Content content) {,private String getFileUniquePath(long objId) {,KEEP KEEP REP REP KEEP,Rename Parameter
Changed Graph.addVertex() so that it takes the vertex to,"public CallGraphEdge createEdge(CallGraphNode source, CallGraphNode target, CallSite callSite) { CallGraphEdge edge = createEdge(source, target);","public CallGraphEdge addEdge(CallGraphNode source, CallGraphNode target, CallSite callSite) { CallGraphEdge edge = addEdge(source, target);",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Method
Remote: Allow disk cache with remote exec,"private ListenableFuture<CachedActionResult> handleStatus( ListenableFuture<ActionResult> download) { ListenableFuture<CachedActionResult> cachedActionResult = Futures.transform(download, CachedActionResult::remote, MoreExecutors.directExecutor());",private ListenableFuture<ActionResult> handleStatus(ListenableFuture<ActionResult> download) {,KEEP ADD ADD KEEP DEL KEEP KEEP ADD ADD ADD ADD ADD ADD,Change Return Type
Refactor #addToCache method to return Map instead of List,public static Collection<String> resolveRedSymbols(,public static List<String> resolveRedSymbols(,KEEP KEEP REP KEEP,Change Return Type
Fixed issue with character-wise reading from a text-mode connection.,protected void initDecoder(int bufSize) throws IOException {,private void initDecoder() throws IOException {,REP KEEP ADD REP KEEP KEEP KEEP,Add Parameter
bp: Move Snapshot Status Related Method to Appropriate Places,RepositoriesService repositoriesService) {,SnapshotsService snapshotsService) {,REP REP KEEP,Rename Parameter
WICKET-4356,public final <T> T to(final Class<T> type) throws StringValueConversionException,public final Object to(final Class<?> type) throws StringValueConversionException,KEEP KEEP ADD REP KEEP REP KEEP KEEP KEEP,Change Return Type
IAM OpenID Connect provider persistence EUCA-12574,"public static boolean allowListOpenIdConnectProviders( AuthContext requestUser, EuareAccount account, String url) throws AuthException {","public static boolean allowListOpenIdConnectProviders( AuthContext requestUser, EuareAccount account, String providerArn) throws AuthException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Handle errors properly in R_tryEval,"public static Object R_tryEval(Object expr, Object env, boolean silent) {","public static TryEvalResult R_tryEval(Object expr, Object env, boolean silent) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Better error logging for ModuleActionContextRegistry.java,private String getMissingIdentifierErrorMessage(Sets.SetView<Class<?>> unusedRestrictions) {,private StringBuilder getMissingIdentifierErrorMessage( Sets.SetView<Class<?>> unusedRestrictions) {,KEEP REP REP DEL KEEP KEEP,Change Return Type
more comments and cleanup,synchronized public boolean cancel(boolean mayInterrupt) {,synchronized void cancel(Boolean mayInterrupt) {,KEEP ADD REP REP KEEP KEEP,Change Return Type
updated jdialog format,DeleteOrphanCaseNodesDialog(Collection<String> zNodeCases) {,"DeleteOrphanCaseNodesDialog(Map<String, List<String>> znodes) {",REP REP DEL KEEP,Rename Parameter
Switch from overriding `when` to using `whenOrElse`,"default Chain whenOrElse(Predicate<? super Context> test, Action<? super Chain> ifAction, Action<? super Chain> elseAction) throws Exception { return all(Handlers.whenOrElse(test, chain(ifAction), chain(elseAction))); } default Chain whenOrElse(Predicate<? super Context> test, Class<? extends Action<? super Chain>> ifAction, Class<? extends Action<? super Chain>> elseAction) throws Exception { return all(Handlers.whenOrElse(test, chain(ifAction), chain(elseAction))); }","default Chain when(Predicate<? super Context> test, Action<? super Chain> ifAction, Action<? super Chain> elseAction) throws Exception { return all(Handlers.when(test, chain(ifAction), chain(elseAction))); }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP,Rename Method
use json array format instead of json map format to represent view  data returned by Analytics API,private JsonArrayImpl transform(ViewData data) { List result = new ArrayList(data.size());,"private JsonStringMapImpl transform(ViewData data) { Map<String, Object> result = new LinkedHashMap<>(data.size());",KEEP REP KEEP KEEP KEEP REP DEL KEEP KEEP KEEP REP,Change Return Type
finished new search expressions framework,"public AjaxRequestBuilder process(UIComponent component, String expressions) { addExpressions(component, expressions, ""process"");","public AjaxRequestBuilder process(UIComponent component, String ids) { addIds(component, ids, ""process"", ""processSelector"");",KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP REP DEL,Rename Parameter
sync with premium version,"private void drawShadowVertical(Canvas canvas, int top, int bottom, int dX) {","private void drawShadow(Canvas canvas, int top, int bottom, int dX) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
unify the crc algorithm in c.o.t.r.library.utils.Crc64 and c.o.t.r.nodes.builtin.base.CRC64,public String crc64(RAbstractStringVector x) { return crc(x); } public static String crc(RAbstractStringVector x) { final String string = x.getDataAt(0); byte[] bytes = string.getBytes(); bytes = crc64(bytes); long l = 0; for (int i = 0; i < bytes.length; i++) { l += (bytes[i] & 0xffL) << (8 * i);,protected String crc64(RAbstractStringVector input) { try { MessageDigest md = MessageDigest.getInstance("MD5"); byte[] digest = md.digest(input.getDataAt(0).getBytes()); StringBuffer sb = new StringBuffer(); for (int i = 0; i < digest.length; i++) { sb.append(Integer.toHexString(digest[i] & 0xFF)); } return sb.toString(); } catch (NoSuchAlgorithmException ex) { throw RInternalError.shouldNotReachHere(ex);,REP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD REP KEEP ADD REP REP KEEP REP KEEP REP KEEP ADD ADD ADD REP REP REP KEEP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP REP REP REP REP REP REP REP REP DEL DEL DEL DEL,Rename Parameter
GG-31908 [IGNITE-13792] Reconnecting clients trigger failure handler,public void removeGroupHolders() {,@Override public void onDisconnected(IgniteFuture<?> reconnectFut) {,DEL KEEP KEEP REP DEL KEEP,Remove Parameter
Avoid boxing in ShardDMLExecutor.ROW_COUNT_COLLECTOR,private static void maybeRaiseFailure(ShardResponse shardResponse) {,"private static <A> A processResponse(ShardResponse shardResponse, Function<ShardResponse, A> f) {",KEEP KEEP REP REP REP DEL DEL DEL DEL KEEP,Change Return Type
selection UI improvements,"private int distanceToCursor(int x, int y, Point cursorPoint) {","private int distance2ToCursor(int x, int y, Point cursorPoint) {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
codacy stuff,public void insertUpdate(DocumentEvent event) {,public void insertUpdate(DocumentEvent e) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
Scale the costs with how much the max slope was exceeded,"WheelchairAccessibilityRequest wheelchair,","RoutingRequest options,",REP REP,Rename Parameter
Provide additional XmlUtil variants for more options when disabling doctypes,"private static void serialize(Source source, OutputStream os, boolean allowDocTypeDeclaration) { serialize(source, new StreamResult(new OutputStreamWriter(os, StandardCharsets.UTF_8)), allowDocTypeDeclaration);","private static void serialize(Source source, OutputStream os) { serialize(source, new StreamResult(new OutputStreamWriter(os, StandardCharsets.UTF_8)));",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP ADD REP,Add Parameter
Adding support for Beam Schema Rows with BQ DIRECT_READ (#22926),"PBegin input, Coder<T> outputCoder, Schema beamSchema) {","private PCollection<T> expandForDirectRead(PBegin input, Coder<T> outputCoder) {",REP REP REP REP REP REP KEEP,Add Parameter
Uses the latest ComponentContext being resuming layout pass,"static void resume(final LayoutStateContext c, final InternalNode root) {",static void resume(final InternalNode root) {,KEEP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP,Add Parameter
gigabyte ram hour calculations are not bad times,"public void testBuilds(String factoryId, Double expected) throws Exception {","public void testBuilds(String factoryId, Double result) throws Exception {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Proxy SSL recording does not handle external embedded resources well,"private KeyManager[] getKeyManagers(String host) throws GeneralSecurityException, IOException { final KeyStore ks; final String serverAlias; String keyPass; switch(keystoreType) { case JMETER_KEYSTORE: ks = getJMeterKeyStore(getPassword(), (String) null); keyPass = getPassword();  serverAlias = JMETER_SERVER_ALIAS; break; case DYNAMIC_KEYSTORE: ks = getJMeterKeyStore(getPassword(), host); keyPass = getPassword();  serverAlias = host; break; case USER_KEYSTORE: default:  String keyStorePass = JMeterUtils.getPropDefault(""proxy.cert.keystorepass"", DEFAULT_PASSWORD);  ks = getKeyStore(keyStorePass.toCharArray()); keyPass = JMeterUtils.getPropDefault(""proxy.cert.keypassword"", DEFAULT_PASSWORD);  serverAlias = CERT_ALIAS; break; }","private KeyManager[] getKeyManagers(String serverAlias) throws GeneralSecurityException, IOException {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
"Clean code: Extract DiffTool from Speed tests, this will enable us to use the diff in logging later.","Result(String testCaseId, Integer transfers, Integer duration, Integer cost, Integer walkDistance, Integer startTime, Integer endTime, String details) {","Result(String testCaseId, Integer transfers, Integer duration, Integer cost, Integer walkDistance, Integer startTime, Integer endTime, String details, boolean skipCost) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Fixed regression in interaction dialog where getPadding() != setPadding() due to units,Component getErrorMessage() { return (Component)errorMessageImpl;,Label getErrorMessage() { return errorMessage;,REP KEEP KEEP KEEP REP,Change Return Type
YARN-2559. Fixed NPE in SystemMetricsPublisher when retrieving FinalApplicationStatus. Contributed by Zhijie Shen,"RMAppAttemptState appAttemtpState, RMApp app, long finishedTime) {","RMAppAttemptState state, long finishedTime) {",KEEP ADD ADD REP KEEP KEEP KEEP,Rename Parameter
[GR-42036] Fixed AbstractPolyglotHostService patching.,"void ensureClosed(boolean force, boolean inShutdownHook, boolean initiatedByContext, boolean failedPatch) {","void ensureClosed(boolean force, boolean inShutdownHook, boolean initiatedByContext) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
track "in closure" and other minor edits,"private void declare(final Variable variable, final ASTNode context) {","private void declare(final Variable variable, final ASTNode expression) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
BUG 57346 Summariser : The + (difference) reports show wrong elapsed time and throughput,public SummariserRunningSample(String label) {,"public SummariserRunningSample(String label, int index) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Add plumbing for fine-grained ingest cancellation,"DataSourceIngestPipeline(IngestJob job, List<IngestModuleTemplate> moduleTemplates) { this.job = job;","DataSourceIngestPipeline(IngestJobContext context, List<IngestModuleTemplate> moduleTemplates) { this.context = context;",REP REP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
"Implement a shadow for Context.bindService(Intent, int, Executor, ServiceConnection)",private TestServiceConnection buildServiceConnection() { return new TestServiceConnection(); } private static class TestServiceConnection implements ServiceConnection { boolean isConnected;,"private ServiceConnection buildServiceConnection() { return new ServiceConnection() { @Override public void onServiceConnected(ComponentName name, IBinder service) {}",KEEP REP KEEP KEEP KEEP KEEP ADD REP REP REP REP REP REP REP REP REP REP,Change Return Type
Lighting is less wrong,"public byte getSkyLight(int x, int y, int z) {","public short getSkyLight(int x, int y, int z) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
updated 31.07.2009 23:38,void addButtons(GenericDialog gd) {,void addTestButton(GenericDialog gd) {,KEEP REP KEEP KEEP,Rename Method
Rename valueType to storedType in ForwardIndexReader (#9004),FieldSpec.DataType storedType) {,FieldSpec.DataType valueType) {,KEEP REP KEEP,Rename Parameter
Stream reading each TypedAst from the TypedAst.List in TypedAstDeserializer,private void deserializeTypedAst(TypedAst typedAstProto) {,private void deserializeSingleTypedAst(TypedAst typedAstProto) {,KEEP KEEP REP KEEP KEEP,Rename Method
UpdateComment should use VectorReuse node.,"@Cached(""createNonShared(container)"") VectorReuse vectorReuse,",@Specialization,ADD ADD REP,Add Parameter
Refactoring to convert Position and Rotation into bukkit.Location,public void setLocation(Location location) { this.location = location;,public void setRotation(Rotation rotation) { this.rotation = rotation;,KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
fix for get with unknown mode,"protected void unknownObject(String x, RType modeType, String modeString) throws RError {","protected void unknownObject(String x, RType modeType) throws RError {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
add UnaryCopyAttributesNode and use in TrigExpFunctions,protected RAbstractVector trigOp(RIntVector vector) {,protected RDoubleVector trigOp(RIntVector vector) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Fixed #2884,"protected void encodeFacet(FacesContext context, TreeTable tt, String name, String styleClass, String tag) throws IOException {","protected void encodeFacet(FacesContext context, TreeTable tt, String name, String styleClass) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
UP-3702 Fix comparison bug,public List<JsonEntityBean> getChildren() {,public List getChildren() {,KEEP REP KEEP KEEP,Change Return Type
3599:  comment out 7th test for file filter tests.,public void willTestEmbeddedModule() {,public void testEmbeddedModule() { closeCase();,KEEP KEEP REP KEEP DEL,Rename Method
Enabled additional test.,"@Test public void TestSimpleAttributes_testBuiltinPropagation_74dc4cc35dbb11bd44bd7b1feaf36e6c() { assertEval(""{ x<-1:8; dim(x)<-c(2, 2, 2); names(x)<-101:108; attr(x, \""dimnames\"")<-list(201:202, 203:204, 205:206); attr(x, \""foo\"")<-\""foo\""; y<-x; attributes(x>y) }""); }","@Test public void TestSimpleAttributes_testBuiltinPropagationIgnore_74dc4cc35dbb11bd44bd7b1feaf36e6c() { assertEval(""{ x<-1:8; dim(x)<-c(2, 2, 2); names(x)<-101:108; attr(x, \""dimnames\"")<-list(201:202, 203:204, 205:206); attr(x, \""foo\"")<-\""foo\""; y<-x; attributes(x>y) }""); }",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
"Cleanup CommonFilesMetaData, add in dedup optimization changes","CommonFilesMetaData(String md5, List<AbstractFile> childNodes, String dataSourcesString, Map<Long,String> dataSourcesMap) throws TskCoreException, SQLException, NoCurrentCaseException {","CommonFilesMetaData(String md5, List<AbstractFile> childNodes) throws TskCoreException, SQLException, NoCurrentCaseException {",KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Cleanup: Remove ProjectionColumnBlock class. (#960),"public BlockValSet getBlockValueSet(String column) { return new ProjectionBlockValSet(_dataBlockCache, column);","public Block getDataBlock(String column) { return new ProjectionColumnBlock(_dataBlockCache, column);",KEEP REP REP KEEP KEEP KEEP KEEP REP KEEP,Change Return Type
MAPREDUCE-5481. Enable uber jobs to have multiple reducers (Sandy Ryza),"private MapOutputFile renameMapOutputForReduce(JobConf conf, TaskAttemptId mapId, MapOutputFile subMapOutputFile) throws IOException {","private void renameMapOutputForReduce(JobConf conf, TaskAttemptId mapId, MapOutputFile subMapOutputFile) throws IOException {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Changed to maximise use of real Android. Changed so that BG tasks run on BG thread(s).,"public AsyncTask<Params, Progress, Result> executeOnExecutor(Executor exec, Params... params) { if (aborted.get()) { return realAsyncTask;","public AsyncTask<Params, Progress, Result> executeOnExecutor(Executor executor, Params... params) { status = AsyncTask.Status.RUNNING; getBridge().onPreExecute();",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP ADD REP REP REP REP,Rename Parameter
Fix base dir in UFS IO bench,"private String getFilePath(int idx) { return PathUtils.concatPath(mDataDir, String.format(""io-benchmark-%s-%d"", mTaskId, idx));","private String getFilePathStr(int idx) { return mParameters.mPath + String.format(""io-benchmark-%s-%d"", mTaskId.toString(), idx);",KEEP KEEP REP KEEP KEEP KEEP REP DEL KEEP REP REP,Rename Method
- redo timeline layout with gui builder and push entire swing layout there,private void runJavaFxThread() {,private void runJavaFxThread(final JPanel chartJPanel) {,KEEP KEEP REP DEL DEL KEEP,Remove Parameter
fixes for RContext.Kind renaming,"public static RContext createShareParentReadOnly(RContext parent, String[] commandArgs, ConsoleHandler consoleHandler) { RContext context = RContext.createShareParentReadOnly(parent, commandArgs, consoleHandler);","public static RContext createSharedPackages(RContext parent, String[] commandArgs, ConsoleHandler consoleHandler) { RContext context = RContext.createSharedPackages(parent, commandArgs, consoleHandler);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP,Rename Method
Further cleanups,public static void initThread() {,public static TimedOperation initThread() {,KEEP KEEP REP KEEP KEEP,Change Return Type
Removed throw of exception from getPassword method.  Moved declaration of password constant to a local variable.,private String getPassword(IPerson person) { String password = null; ISecurityContext ic = (ISecurityContext) person.getSecurityContext(); IOpaqueCredentials oc = ic.getOpaqueCredentials(); if (oc instanceof NotSoOpaqueCredentials) { NotSoOpaqueCredentials nsoc = (NotSoOpaqueCredentials)oc; password = nsoc.getCredentials(); },private String getPassword (IPerson p) throws Exception { String sPassword = null; try { ISecurityContext ic = (ISecurityContext) p.getSecurityContext(); IOpaqueCredentials oc = ic.getOpaqueCredentials(); if (oc instanceof NotSoOpaqueCredentials) { NotSoOpaqueCredentials nsoc = (NotSoOpaqueCredentials)oc; sPassword = nsoc.getCredentials(); },KEEP KEEP REP REP DEL DEL DEL KEEP KEEP REP KEEP KEEP DEL DEL KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Expose Leg.serviceDate in trip end-point,public static GraphQLScalarType createDateScalar() {,public static GraphQLScalarType createSecondsSinceEpochAsDateStringScalar(TimeZone timeZone) {,KEEP KEEP KEEP REP DEL KEEP,Remove Parameter
svn merge -c 1516594 FIXES: Revert MAPREDUCE-5475,boolean modifyAccess) throws IOException {,JobACL accessType) throws IOException {,REP REP KEEP KEEP KEEP,Rename Parameter
support changing allowMarketTransaction in config,public void saveAllowTransactionFeePool(long value) {,public void saveAllowTransactionFeePool(long limit) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
AltrepRFFI.SumNode returns int,"@Cached AltrepRFFI.SumNode sumNode) { return sumNode.execute(altIntVec, naRm);","@Cached AltrepRFFI.SumNode altIntSumNode) { return altIntSumNode.execute(altIntVec, naRm);",KEEP KEEP REP KEEP KEEP REP KEEP,Rename Parameter
Rewrite non-aggregate group by query to distinct query (#5671),"public static Set<String> extractIdentifiers(List<Expression> expressions, boolean excludeAs) {",public static Set<String> extractIdentifiers(List<Expression> expressions) {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
LayoutState#getMountableOutputAt returns RenderTreeNode,RenderTreeNode getMountableOutputAt(int index) { return mMountableOutputs.get(index);,LayoutOutput getMountableOutputAt(int index) { return (LayoutOutput) mMountableOutputs.get(index).getLayoutData();,REP KEEP KEEP KEEP KEEP REP DEL,Change Return Type
DSKCLI-258 Generic wildcard types should not be used in return parameters,Request<BuilderStatus> build(Project project);,Request<? extends BuilderStatus> build(Project project);,REP DEL DEL KEEP KEEP,Change Return Type
Fix #multiViewState: add component reset option,"private MVSKey createMVSKey(String viewId, String clientId) { return new MVSKey(viewId, clientId);","private String createMVSKey(String viewId, String clientId) { return new MVSKey(viewId, clientId).value();",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Change Return Type
proper parsing and printing of escape sequences,"private State(int widthCutOff, boolean backtick, int maxlines, int opts, boolean needVector) {","private State(int widthCutOff, boolean backtick, int maxlines, int opts, boolean needVector, boolean parseable) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Backwards compat.,public Config getConfig(Method method) {,public final Configuration getConfig(Method method) {,KEEP REP DEL KEEP KEEP KEEP,Change Return Type
Changed file selector styling in workplace to be more similar to the,protected CssLayout initContent() {,protected HorizontalLayout initContent() {,KEEP REP KEEP KEEP,Change Return Type
Add working toString for Effects,public void add(SimpleEffect effect) { add((Effect) effect);,"public void add(String name, SimpleEffect effect) { add(name, (Effect) effect);",KEEP KEEP REP DEL DEL KEEP KEEP REP DEL KEEP,Remove Parameter
Push flags into the Overloaded.,protected final List<JCExpression> makeTypeArguments() {,protected final List<JCExpression> makeTypeArguments(int flags) {,KEEP KEEP KEEP REP DEL KEEP,Remove Parameter
Issue #1013: Fix the optimized range iteration assertion exception to be the same as the one thrown by Iterable,"private AssertionExceptionMessageBuilder appendCondition(String state, String sourceCode) { JCExpression m = cat(newline(), make().Literal(""\t"" + state+ "" ""));","public AssertionExceptionMessageBuilder appendViolatedCondition(String state, Tree.Condition condition) {",REP KEEP REP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Reduce the number of operation invariant specializations in CastToVectorNode.,protected Object castNull(@SuppressWarnings("unused") RNull rnull) { if (isNonVectorPreserved()) { return RNull.instance; } else { return RDataFactory.createList(); },protected RNull castNull(@SuppressWarnings("unused") RNull rnull) { return RNull.instance; } @Specialization(guards = "!isNonVectorPreserved()") protected RAbstractVector cast(@SuppressWarnings("unused") RNull rnull) { return RDataFactory.createList(); } @Specialization(guards = "isNonVectorPreserved()") protected RFunction castFunction(RFunction f) { return f;,KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
ceylon/ceylon.language#493: Rename Range -> Span and range() -> span(),"private boolean isSpanOf(Tree.RangeOp range, ProducedType ofType) {","private boolean isRangeOf(Tree.RangeOp range, ProducedType ofType) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
Implement RAltStringVectorData.,@Cached("create()") AltrepRFFI.EltNode eltNode) {,@Cached("create()") AltrepRFFI.EltNode altIntEltNode) {,KEEP KEEP REP KEEP,Rename Parameter
connect placeholder from context with method generic params,"public static boolean hasNonPlaceHolders(final ClassNode type) { return checkPlaceHolders(type, gt -> !gt.isPlaceholder());","public static boolean hasNonPlaceHolders(ClassNode parameterizedType) { return checkPlaceHolders(parameterizedType, genericsType -> !genericsType.isPlaceholder());",KEEP KEEP KEEP ADD REP REP KEEP KEEP REP REP KEEP REP,Rename Parameter
"Updated Solr/Lucene to 8.0.0, added necessary additional dependencies.",public ScoreMode scoreMode() {,public boolean needsScores() { return false; } @Override public void setScorer(Scorer arg0) {,KEEP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Change Return Type
Fixed use of static field to record when String.intern() is seen,"RefComparisonTypeFrameModelingVisitor visitor, TypeDataflow typeDataflow) throws DataflowAnalysisException {","private void checkRefComparison(Location location, JavaClass jclass, MethodGen methodGen, TypeDataflow typeDataflow) throws DataflowAnalysisException {",REP REP DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP,Add Parameter
"work on quote, more RLanguage refactoring","private static RPromise createRLanguagePromise(MaterializedFrame callerFrame, RLanguage lang) { return RDataFactory.createPromise(PromiseState.Supplied, RPromise.Closure.create(RASTUtils.cloneNode(lang.getRep())), callerFrame); }","private static RPromise createArgPromise(MaterializedFrame frame, RBaseNode rep) { return RDataFactory.createPromise(PromiseState.Supplied, RPromise.Closure.create(rep), frame); }",KEEP KEEP KEEP REP REP REP REP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Always use RobolectricContext.Factory for test runner bootstrapping.,private void setRobolectricContextField(Class<?> testRunnerClass) { Class<?> clazz = testRunnerClass;,private void setRobolectricContextField(Class<?> instrumentedTestRunnerClass) { Class<?> clazz = instrumentedTestRunnerClass;,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Videogroups: Add id,"public VideoGroup(long id, String name, int count) { super(id, name);","public VideoGroup(String name, int count) { super(0L, name);",KEEP ADD ADD REP KEEP KEEP KEEP KEEP REP KEEP,Add Parameter
"SONARJAVA-1357/Support of ""&"", ""|"" and ""^"" operator","public Pair<List<ProgramState>, List<ProgramState>> assumeDual(ProgramState programState) {","public Pair<ProgramState, ProgramState> assumeDual(ProgramState programState) {",KEEP REP REP KEEP KEEP KEEP,Change Return Type
added files sets to standard sets,"boolean standardSet, int versionNumber) {","boolean readOnly, int versionNumber) {",KEEP REP KEEP KEEP KEEP,Rename Parameter
Inital pass of completed thread code,"void pruneEmptyContainers(Set<Container> containerSet) { containerSet.forEach((container) -> { if(!container.hasMessage() && !container.hasChildren()) { containerSet.remove(container); } else { pruneChildren(container); } }); } void pruneChildren(Container parent) { if(parent == null) { return; } Set<Container> children = parent.getChildren(); Container grandParent = parent.getParent(); if (children == null) { return; } children.stream().map((child) -> { if (!parent.hasMessage() && grandParent != null) { child.setParent(grandParent); grandParent.addChild(child); grandParent.removeChild(parent); parent.setParent(null); parent.clearChildren(); } return child; }).forEachOrdered((child) -> { pruneChildren(child); }); } Set<Container> groupBySubject(Set<Container> rootSet) { HashMap<String, Container> subject_table = createSubjectTable(rootSet); Set<Container> finalSet = new HashSet<>(); for (Container rootSetContainer : rootSet) { String rootSubject = rootSetContainer.getSimplifiedSubject(); Container tableContainer = subject_table.get(rootSubject); if(tableContainer == null || tableContainer == rootSetContainer) { finalSet.add(rootSetContainer); continue; } if(tableContainer.getMessage() == null && rootSetContainer.getMessage() == null) { tableContainer.addChildren(rootSetContainer.getChildren()); rootSetContainer.clearChildren(); continue; } if( (tableContainer.getMessage() == null && rootSetContainer.getMessage() != null) || (tableContainer.getMessage() != null && rootSetContainer.getMessage() == null)){ if(tableContainer.getMessage() == null) { tableContainer.addChild(rootSetContainer);",void pruneEmptyContainers(Set<Container> rootSet) { for(Container container: rootSet) { if(!container.hasMessage()) {  if(!container.hasChild()) { rootSet.remove(containerename Parameter
Now all values are stored and reload after next run. Fields is updated not only after press enter but just after change value.,"private void updateSave(java.awt.event.ActionEvent evt) { try { String lat = latitude.getText(); String lon = longitude.getText(); final Double la = new Double(lat); final Double lo = new Double(lon); Platform.runLater(new Runnable() { public void run() { Preferences p = Preferences.userNodeForPackage(com.codename1.ui.Component.class); p.putFloat(""accuracy"", getAccuracy()); p.putFloat(""velocity"", getVelocity()); p.putDouble(""Altitude"", getAltitude()); p.putFloat(""direction"", getDirection()); webView.getEngine().executeScript(""moveToLocation("" + la.toString() + "","" + lo.toString() + "");""); } }); } catch (Exception e) { e.printStackTrace(); } }","private void moveMap(java.awt.event.ActionEvent evt) { try { String lat = latitude.getText(); String lon = longitude.getText(); final Double la = new Double(lat); final Double lo = new Double(lon); Platform.runLater(new Runnable() { public void run() { webView.getEngine().executeScript(""moveToLocation("" + la.toString() + "","" + lo.toString() + "");""); } }); } catch (Exception e) { e.printStackTrace(); } }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
refactoring and cleanup of DataResultViewerTable,"private String getColumnPositionKey(String keyBase, String propName) { return getColumnKeyBase(keyBase, propName) + "".column"";","private String getColumnPositionKey(String type, String propName) { return getColumnKeyBase(type, propName) + "".column"";",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
WICKET-4203 Wicket fails to start when deployed filenames contain space characters,"private void loadResources(Enumeration<URL> resources, Set<String> loadedResources)","private void loadResources(Enumeration<URL> resources, Set<URI> loadedFiles) throws URISyntaxException",KEEP KEEP KEEP KEEP REP REP DEL DEL,Rename Parameter
Mor3e work on AutoIngestSettingsPanel,private void enableUI(boolean state) { enableOptionsBasedOnMode(OptionsUiMode.DOWNLOADING_CONFIGURATION); downloadButton.setEnabled(state); uploadButton.setEnabled(state); browseSharedSettingsButton.setEnabled(state); sharedConfigCheckbox.setEnabled(state); masterNodeCheckBox.setEnabled(state); sharedSettingsTextField.setEnabled(state); bnSave.setEnabled(state); bnCancel.setEnabled(state);,private void disableUI() { enableOptionsBasedOnMode(OptionsUiMode.DOWNLOADING_CONFIGURATION); downloadButton.setEnabled(false); uploadButton.setEnabled(false); browseSharedSettingsButton.setEnabled(false); sharedConfigCheckbox.setEnabled(false); masterNodeCheckBox.setEnabled(false); sharedSettingsTextField.setEnabled(false);,KEEP KEEP ADD REP KEEP KEEP ADD ADD REP REP REP REP REP REP,Add Parameter
[java] UseCollectionIsEmpty can not detect the case this.foo.size() (2543),"private ASTClassOrInterfaceType getTypeOfVariable(ASTPrimarySuffix primarySuffix) { ASTPrimaryExpression primaryExpression = primarySuffix.getFirstParentOfType(ASTPrimaryExpression.class); ASTPrimaryPrefix varPrefix = primaryExpression.getFirstChildOfType(ASTPrimaryPrefix.class); if (prefixWithNoModifiers(varPrefix)) { return varPrefix.getFirstDescendantOfType(ASTClassOrInterfaceType.class); } String varName = getVariableNameBySuffix(primaryExpression); return varName != null ? getTypeOfVariableByName(varName, primaryExpression) : null; } private boolean prefixWithNoModifiers(ASTPrimaryPrefix primaryPrefix) { return !primaryPrefix.usesSuperModifier() && !primaryPrefix.usesThisModifier(); } private String getVariableNameBySuffix(ASTPrimaryExpression primaryExpression) { ASTPrimarySuffix varSuffix = primaryExpression .getFirstChildOfType(ASTPrimarySuffix.class); return varSuffix.getImage(); } private ASTClassOrInterfaceType getTypeOfVariableByName(String varName, ASTPrimaryExpression expr) { ASTClassOrInterfaceBody classBody = expr.getFirstParentOfType(ASTClassOrInterfaceBody.class); List<ASTVariableDeclarator> varDeclarators = classBody.findDescendantsOfType(ASTVariableDeclarator.class); for (ASTVariableDeclarator varDeclarator : varDeclarators) { if (varDeclarator.getName().equals(varName)) { return varDeclarator.getFirstDescendantOfType(ASTClassOrInterfaceType.class);",private ASTClassOrInterfaceType getTypeOfPrimaryPrefix(ASTPrimarySuffix node) { return node.getParent().getFirstChildOfType(ASTPrimaryPrefix.class) .getFirstDescendantOfType(ASTClassOrInterfaceType.class); },KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
- fixed typo in javadoc,"public static <T> T notNull(final T argument, final String name)","public static Object notNull(final Object argument, final String name)",KEEP KEEP ADD REP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
allocate fixed index summary memory pool and resample cold index summaries to use less memory,"public IndexSummary(IPartitioner partitioner, Memory memory, int summarySize, int sizeAtFullSampling, int indexInterval, int samplingLevel)","public IndexSummary(IPartitioner partitioner, Memory memory, int summary_size, int indexInterval)",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD REP,Add Parameter
"Allow tests to be run in shards, with results still collected.",void dontIncludeVariantMarkersInTestName() { includeVariantMarkersInTestName = false;,void dontIncludeVariantMarkersInName() { includeVariantMarkersInName = false;,KEEP REP KEEP REP KEEP KEEP,Rename Method
3815 Aid now refreshes without losing selection and scroll location,"AutoIngestJobsNode(AutoIngestMonitor autoIngestMonitor, AutoIngestJobStatus status) { super(Children.create(new AutoIngestNodeChildren(autoIngestMonitor, status), false)); } void refresh() { refreshChildrenEventBus.post(REFRESH_EVENT);","AutoIngestJobsNode(JobsSnapshot jobsSnapshot, AutoIngestJobStatus status) { super(Children.create(new AutoIngestNodeChildren(jobsSnapshot, status), false));",REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD,Rename Parameter
Use parameterized tests to lessen repetitive assertions,"void testInvalidJsonData(String postData) throws JsonProcessingException, UnsupportedEncodingException {","@Test void testInvalidJsonData() throws JsonProcessingException, UnsupportedEncodingException { assertThrows(IllegalArgumentException.class, () -> GraphQLRequestParamUtils.toGraphQLRequestParams("""".getBytes(StandardCharsets.UTF_8), null));",REP REP REP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL,Add Parameter
Save UUID with world data.,"public SpoutWorld(String name, Engine server, long seed, WorldGenerator generator, UUID uid, StringMap itemMap, DatatableMap extraData) {","public SpoutWorld(String name, Engine server, long seed, WorldGenerator generator, StringMap itemMap, DatatableMap extraData) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
first level of options dialog has been rewritten,"public void run(int index) { final ZLAndroidDialogContent tab = (ZLAndroidDialogContent)myTabs.get(index); runDialog(myMainActivity, tab);","public void run() { runDialog(myMainActivity, this);",KEEP KEEP ADD REP KEEP ADD ADD ADD ADD ADD KEEP REP,Add Parameter
"Remove usages of useAsyncMutations, rename to useBackgroundChangeSets",public void setUseBackgroundChangeSets(boolean useBackgroundChangeSets) { mUseBackgroundChangeSets = useBackgroundChangeSets;,public void setUseAsyncMutations(boolean useAsyncMutations) { mUseAsyncMutations = useAsyncMutations;,KEEP KEEP REP REP KEEP REP KEEP REP,Rename Parameter
Log stats for individual mount items in draw,private static String getMountItemName(MountItem mountItem) { String traceName = mountItem.getComponent().getSimpleName();,private static String getTraceName(MountItem mountItem) { String traceName = "draw: " + mountItem.getComponent().getSimpleName();,KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL KEEP,Rename Method
Switch to using real Android LayoutInflater code!,public ComponentState getComponentState(ComponentName componentName) {,public RobolectricPackageManager.ComponentState getComponentState(ComponentName componentName) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Apply some review suggestions,public static VehicleParkingGroupBuilder of(FeedScopedId id) { return new VehicleParkingGroupBuilder(id);,public static VehicleParkingGroupBuilder builder() { return new VehicleParkingGroupBuilder();,KEEP KEEP KEEP ADD REP KEEP KEEP KEEP REP,Add Parameter
More efficient fillViewport for VerticalScroll,"ComponentContext c,","ComponentContext context,",KEEP REP,Rename Parameter
Almost complete. Only command-line option handling missing.,public void setFilter(Filter filter) { this.m_Filter = filter; },public void setFilter(Filter m_Filter) { this.m_Filter = m_Filter; },KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
Fix for #625: Make ant tasks work with remote repos,protected String getOut() {,protected File getOut() {,KEEP REP KEEP KEEP,Change Return Type
Optimize accounting of direct deps by deduplicating them as they are requested in `SkyFunctionEnvironment` instead of as a post-processing step.,public ImmutableList<T> get(int i) {,public List<T> get(int i) {,KEEP REP KEEP KEEP KEEP,Change Return Type
SONAR-16541 Ensure issues pull action response contains correct issue data,"private void retrieveAndSendIssues(DbSession dbSession, String componentUuid, IssueQueryParams queryParams, OutputStream outputStream)","private void retrieveAndSendIssues(DbSession dbSession, IssueQueryParams queryParams, OutputStream outputStream)",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
generics cleanup,"protected Map<String, Object> variablesMap(IValidatable validatable)",protected Map variablesMap(IValidatable validatable),KEEP ADD REP KEEP KEEP,Change Return Type
reduce allocation rate in LookupTransformFunction (#8204),"private void lookup(ProjectionBlock projectionBlock, ValueAcceptor valueAcceptor) {",private Object[] lookup(ProjectionBlock projectionBlock) {,KEEP REP KEEP ADD ADD REP KEEP,Change Return Type
Use common thread pool for EUCA-12658,"private static Executor getDispatchExecutor( ) { if ( COMMON_THREAD_POOL_SIZE > 0 ) { return getCommonExecutor( ); } else { return Threads.lookup( Empyrean.class, ServiceContext.class, ""dispatch"" ).limitTo( DISPATCH_THREAD_POOL_SIZE ); }","private static Executor getExecutor( ) { return Threads.lookup( Empyrean.class, ServiceContext.class, ""dispatch"" ).limitTo( DISPATCH_POOL_SIZE ).getExecutorService( );",KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP REP REP REP,Rename Method
HDFS-6362. Merge r1595056 from trunk to branch-2.,private int invalidateWorkForOneNode(DatanodeInfo dn) {,private int invalidateWorkForOneNode(String nodeId) {,KEEP KEEP REP REP KEEP,Rename Parameter
Add playlist append method with list,"public boolean append(Medialibrary ml, long[] mediaIds) { return nativePlaylistAppendGroup(ml, mId, mediaIds); } public boolean append(Medialibrary ml, List<Long> mediaIds) { long[] ids = new long[mediaIds.size()]; for (int i = 0; i < ids.length; ++i) ids[i] = mediaIds.get(i).longValue(); return nativePlaylistAppendGroup(ml, mId, ids);","public boolean append(Medialibrary ml, long[] mediaId) { return nativePlaylistAppendGroup(ml, mId, mediaId);",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
SC: fix implicit-this access to non-static member of outer,private static boolean isAccessingInstanceMembersOfEnclosingClass(final MethodNode lambdaMethod) {,private static boolean isAccessingInstanceMembersOfEnclosingClass(final MethodNode syntheticLambdaMethodNode) {,KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Merging r1605145 from trunk to branch-2.,private void buildACL(String[] userGroupStrings) {,private void buildACL(String aclString) {,KEEP KEEP REP REP KEEP,Rename Parameter
And finally comes the fully functional frustum,"public void update(Matrix projection, Matrix view, Vector3 paramPosition) { position = paramPosition;","public void update(Matrix projection, Matrix view) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP ADD ADD ADD,Add Parameter
no ZLFile reference in IBookCollection,public synchronized Book getBookByFile(String path) {,public synchronized Book getBookByFile(ZLFile file) {,KEEP KEEP KEEP REP REP KEEP,Rename Parameter
add auth token for segment replace rest APIs (#8146),@Nullable String authToken) {,"private static HttpUriRequest getStartReplaceSegmentsRequest(URI uri, String jsonRequestBody, int socketTimeoutMs) {",REP DEL DEL DEL DEL KEEP REP DEL DEL KEEP,Add Parameter
Views properly namespaced with android:X/Y,"protected void processResourceXml(File xmlFile, Document document, boolean isSystem) throws Exception { ViewNode topLevelNode = new ViewNode(""top-level"", new HashMap<String, String>(), isSystem);","protected void processResourceXml(File xmlFile, Document document, boolean ignored) throws Exception { ViewNode topLevelNode = new ViewNode(""top-level"", new HashMap<String, String>());",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP,Rename Parameter
Index upgrade code now mimics TSK.updateDatabaseSchema(),"double upgradeSolrIndexVersion4to5(double currentIndexVersion, String solr4IndexPath, String tempResultsDir) throws AutopsyService.AutopsyServiceException, SecurityException, IOException {","void upgradeSolrIndexVersion4to5(String solr4IndexPath, String tempResultsDir) throws AutopsyService.AutopsyServiceException, SecurityException, IOException {",ADD ADD REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Made Fonts work,"public void drawText(String text, ClientFont font, float x, float y, Color color) {","public void drawText(String text, ClientFont font, float x, float y, Color color, float size){",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP DEL,Remove Parameter
"Configuration refactor, MemoryConfiguration, ConfigurationNode, and relocated some things.",public String getString(String def) { if (value instanceof String) { return (String) value;,public String getString(String path) { Object o = getProperty(path); if (o == null) { return null;,KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL KEEP REP REP REP KEEP KEEP ADD REP,Rename Parameter
Implement <requestFocus/> element; recursive hasFocus() and clearFocus() for ViewGroup,"public View inflate(Context context, View parent) throws Exception { View view = create(context, (ViewGroup) parent);",public View inflate(Context context) throws Exception { View view = create(context);,KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
put proper source descriptions into SourceSections,"public Object parseAndEval(String sourceDesc, String rscript, VirtualFrame frame, REnvironment envForFrame, boolean printResult, boolean allowIncompleteSource) { return parseAndEvalImpl(new ANTLRStringStream(rscript), Source.asPseudoFile(rscript, sourceDesc), frame, printResult, allowIncompleteSource);","public Object parseAndEval(String rscript, VirtualFrame frame, REnvironment envForFrame, boolean printResult, boolean allowIncompleteSource) { return parseAndEvalImpl(new ANTLRStringStream(rscript), Source.asPseudoFile(rscript, ""<shell_input>""), frame, printResult, allowIncompleteSource);",KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Add Parameter
Updated to support GeoArtifactHelper changes,"private GeoTrackPointList getPointsList(Map<BlackboardAttribute.ATTRIBUTE_TYPE, BlackboardAttribute> attributeMap) {","private GeoTrackPoints getPointsList(Map<BlackboardAttribute.ATTRIBUTE_TYPE, BlackboardAttribute> attributeMap) {",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Clean up PinotDataBuffer,"static PinotDataBuffer loadFromFile(File file, long startPosition, long length, String context)","static PinotDataBuffer loadFromFile(File file, long startPosition, long length, FileChannel.MapMode openMode, String context)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL DEL KEEP KEEP,Remove Parameter
fix for inherits on function/environment,"protected Object doesInherit(VirtualFrame frame, REnvironment x, RAbstractStringVector what, @SuppressWarnings(""unused"") byte which) {","protected byte doInherits(VirtualFrame frame, RAbstractContainer x, RAbstractStringVector what, @SuppressWarnings(""unused"") byte which) {",KEEP REP REP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Changed the stream and metadata interface (#5542),public String getStartOffset() {,public long getStartOffset() {,KEEP REP KEEP KEEP,Change Return Type
"Refactor: Use sandboxedness from WorkerKey instead of as a parameter for WorkerFactory, rename `proxied` to `multiplex`.",public WorkerFactory(Path workerBaseDir) {,"public WorkerFactory(Path workerBaseDir, boolean workerSandboxing) {",KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Always associate a shadow with an android object during instantiation to prevent race conditions.,@Test public void becauseShadowsMustBeCreatedDuringInstantiation_shouldAddDefaultConstructorIfMissingWhichCallsShadow() throws Exception {,@Test public void shouldAddDefaultConstructorIfMissing() throws Exception {,KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Method
FastR Grid: honor fill color + GUI framework independent color representation,public GridColor getColor() { return getGridColor(GP_COL);,public String getColor() { return getHexColor(GP_COL);,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Allow create_linking_context_from_compilation_outputs to create an empty archive,"Object starlarkLooseIncludes,","Object starlarkIncludes,",KEEP REP,Rename Parameter
HDFS-4206. Merge change r1410996 from trunk,"INodeDirectory addToParent(INodeDirectory parentINode,","INodeDirectory addToParent(byte[] src, INodeDirectory parentINode,",KEEP REP DEL DEL KEEP,Remove Parameter
Fix play as audio to actually play as audio,"public void load(List<String> mediaPathList, int position, boolean libvlcBacked, boolean noVideo) {","public void load(List<String> mediaPathList, int position, boolean libvlcBacked) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
UnnecessaryCaseChangeRule: nested expressions traversing fix,private int getEqualsMethodCallIndex(ASTPrimaryExpression expr) { for (int callIndex = 0; callIndex < expr.getNumChildren(); callIndex++) {,private int getCaseChangingMethodCallIndex(ASTPrimaryExpression expr) { for (int callArgsIndex = 1; callArgsIndex < expr.getNumChildren(); callArgsIndex++) { JavaNode methodCallArgs = expr.getChild(callArgsIndex); int callIndex = callArgsIndex - 1;,KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP REP REP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Method
Cleaned up code.,public Class<?> getColumnClass(int column) {,public Class getColumnClass(int column) {,KEEP REP KEEP KEEP KEEP,Change Return Type
ResourceLoader doesn't handle inflation of views.,"public ViewNode getLayoutViewNode(ResName resName, String qualifiers) { init(); return viewNodes.get(resName, qualifiers);","ViewNode getLayoutViewNode(String layoutName, String qualifiers) { return viewNodes.get(new ResName(layoutName), qualifiers);",ADD KEEP REP REP KEEP KEEP KEEP ADD KEEP REP DEL KEEP,Rename Parameter
Extracting contents of archive to case output folder,"AddArchiveTask(String deviceId, String archivePath, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {","AddArchiveTask(String deviceId, String imagePath, DataSourceProcessorProgressMonitor progressMonitor, DataSourceProcessorCallback callback) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Rename Layout.update -> Layout.createScopedContext,static ComponentContext createScopedContext(,static ComponentContext update(,KEEP KEEP REP,Rename Method
Tweak; handle case where one of the registers hasn't been changed since method entry,"private boolean isConstant(Item item0, BackwardsBranch bb) {","private boolean isConstant(Item item0, Collection<Integer> invariantRegisters) {",KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Refactor LayoutResult measure to reduce object allocation,"MeasureResult measure(final int widthSpec, final int heightSpec) {","long measure(final int widthSpec, final int heightSpec) {",REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
code simplification,"private static void collectOpenDictionaries(Context context) { final SortedSet<Dictionary> dictionariesTreeSet = new TreeSet<Dictionary>(new Comparator<Dictionary>() { @Override public int compare(Dictionary lhs, Dictionary rhs) { return lhs.toString().compareTo(rhs.toString());","static void read(OpenDictionaryAPI api) { final Set<Dictionary> dictionaries = api.getDictionaries(); if (dictionaries.isEmpty()) { return; } final SortedSet<Dictionary> dictionariesTreeSet = new TreeSet<Dictionary>(new Comparator<Dictionary>() { @Override public int compare(Dictionary lhs, Dictionary rhs) { return lhs.toString().compareTo(rhs.toString()); }",ADD KEEP KEEP REP REP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL,Rename Parameter
added filter parameter 'time_interval',"public static Context initDateInterval(Calendar toDate, Parameters.TimeUnit timeUnit, Context.Builder builder) throws ParseException { return initDateInterval(toDate, timeUnit, 0, builder);","public static Context initDateInterval(Calendar date, Context.Builder builder) throws ParseException { Parameters.TimeUnit timeUnit = builder.getTimeUnit(); switch (timeUnit) { case DAY: initByDay(date, builder); break; case WEEK: initByWeek(date, builder); break; case MONTH: initByMonth(date, builder); break; case LIFETIME: initByLifeTime(builder); break; } return builder.build();",KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
"UP-1068, new fragment owners now have their layout generated during DLM loading rather than defering to RDBMUserIdentityStore later on at log in time.",private IPerson bindToOwner( FragmentDefinition fragment ),private void bindToOwner( FragmentDefinition fragment ),KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
Make incremental analysis work in Eclipse plugin.,"public void work(Collection files, boolean incremental) throws CoreException {","public void work(Collection files, IResource resource) throws CoreException {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP,Rename Parameter
Make JsonToPinotSchema consistent with AvroSchemaToPinotSchema (#7366),private List<String> buildFieldsToUnnest() {,private List<String> buildfieldsToUnnest() { List<String> fieldsToUnnest = new ArrayList<>();,KEEP KEEP REP KEEP DEL DEL DEL DEL DEL,Rename Method
Set the transform when a SpoutPlayer goes to connect.,"public boolean connect(SpoutSession<?> session, Transform newTransform) {","public boolean connect(SpoutSession<?> session, Transform newPosition) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
GG-35281 [IGNITE-16946] .NET: Thin client: Add AtomicLong (#2436),protected GridCacheAtomicLongImpl atomicLong(ClientConnectionContext ctx) {,protected IgniteAtomicLong atomicLong(ClientConnectionContext ctx) {,KEEP REP KEEP KEEP KEEP,Change Return Type
various fixups,"private void pushByIntMath(DismantleBytecode dbc, int seen, Item lhs, Item rhs) {","private void pushByIntMath(int seen, Item lhs, Item rhs) {",KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
IDEX-1129 : Apply changes on the refactoring due to Factory 2.0 format,"@JsonProperty(""permissions"") List<String> permissions,","@JsonProperty(""currentUserPermissions"") List<String> userPermissions,",REP KEEP REP,Rename Parameter
GG-33275 fix multiple results bug when query parallelism is enabled (#1966),"public int segmentForPartition(int part) { return calculateSegment(segmentsCount(), part); } public static int calculateSegment(int segmentCnt, int part) { return segmentCnt == 1 ? 0 : (part % segmentCnt);",public int segmentForPartition(int partition) { return segmentsCount() == 1 ? 0 : (partition % segmentsCount());,KEEP KEEP KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
fix bug in iterative opcode stack analysis,"private boolean mergeLists(List<Item> mergeInto, List<Item> mergeFrom, boolean errorIfSizesDoNotMatch) {","private void mergeLists(List<Item> mergeInto, List<Item> mergeFrom, boolean errorIfSizesDoNotMatch) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Automated g4 rollback of changelist 222103549.,@Test public void shouldAcquireDistinguishedNameParser_Issue1864() throws Exception {,@Test  public void shouldAcquireDistinguishedNameParser() throws Exception {,KEEP DEL KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Added basic version of A_CmsJspCustomContextBean and the API extension,"public static CmsJspResourceWrapper convertResource(CmsObject cms, Object input) throws CmsException { return new CmsJspResourceWrapper(cms, convertRawResource(cms, input));","public static CmsResource convertResource(CmsObject cms, Object input) throws CmsException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Change Return Type
TupleConstructor should provide pre and post annotation attributes like MapConstructor,private static ClassCodeExpressionTransformer makeMapTypedArgsTransformer() {,private static ClassCodeExpressionTransformer makeTransformer() {,KEEP KEEP KEEP REP KEEP,Rename Method
Added viewdistance option to the player connect event.  Is reduced if larger than the max value,"public Player addPlayer(String playerName, SpoutSession session, int viewDistance) {","public Player addPlayer(String playerName, SpoutSession session) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
svn merge -c 1481084. Merging from trunk to branch-2 to fix HDFS-4799.,"private boolean invalidateBlock(BlockToMarkCorrupt b, DatanodeInfo dn","private void invalidateBlock(BlockToMarkCorrupt b, DatanodeInfo dn",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
"Issue #1522: Because we erase c.l.Error to j.l.Error, which doesn't implement ReifiedType, we need a parameter to determine whether $ should be @Override or not when subclassing c.l.Error.","public ClassDefinitionBuilder addGetTypeMethod(ProducedType type, boolean isOverride){",public ClassDefinitionBuilder addGetTypeMethod(ProducedType type){,KEEP KEEP KEEP ADD ADD REP,Add Parameter
Added a variant of the events system from my Bukkit events pull,public abstract HandlerList getHandlers();,public abstract HandlerList<TEvent> getHandlers();,KEEP KEEP REP KEEP,Change Return Type
OC-7154,"public ResponseEntity<ArrayList<HashMap<String, Object>>> getLdapModule(HttpServletRequest request) throws Exception {",public ResponseEntity<HashMap> getLdapModule(HttpServletRequest request) throws Exception {,KEEP ADD REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Remove unused field JavaTree.grammarRuleKey,public ListTreeImpl(List<T> list) {,"public ListTreeImpl(GrammarRuleKey grammarRuleKey, List<T> list) { super(grammarRuleKey);",KEEP REP DEL DEL KEEP KEEP DEL,Remove Parameter
network data structure refactoring: url map is moved into NetworkItem,"Map<UrlType,String> urls,","String cover,",REP REP,Rename Parameter
Workarounds for Square tests.,private Application newApplicationInstance() {,"private Application newApplicationInstance(String packageName, String applicationName) {",KEEP KEEP REP DEL DEL DEL KEEP,Remove Parameter
return list of time series,"public List<Result> getTimeSeries(@PathParam(""collection"") String collection, @PathParam(""metric"") String metric, @PathParam(""start"") Long start, @PathParam(""end"") Long end, @Context UriInfo uriInfo)","public Result getTimeSeries(@PathParam(""collection"") String collection, @PathParam(""metric"") String metric, @PathParam(""start"") Long start, @PathParam(""end"") Long end, @Context UriInfo uriInfo)",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
"Fixed MapView Projection: latitude increases northward, not southward (unlike pixel coordinates).","private int scalePixel(int pixel, int minPixel, int maxPixel, int centerDegree, int spanDegrees) {","private int scalePixel(int pixel, int minPixel, int maxPixel, int centerLl, int spanLl) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP KEEP,Add Parameter
2014.03.05 (1.48s32),"private static Rectangle getLeftMostMonitor(GraphicsEnvironment ge, Rectangle bounds) {","private static Rectangle getPrimaryMonitor(GraphicsEnvironment ge, Rectangle bounds) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
SONAR-17288 Add ITs,public Collection<ParsedFlow> getFlows(int issueId) { return Optional.ofNullable(flowsByIssueId.get(issueId)).map(IssueFlows::getFlows).orElse(Collections.emptyList());,public IssueFlows getFlows(int issueId) { return flowsByIssueId.get(issueId);,KEEP REP KEEP KEEP KEEP KEEP REP,Change Return Type
Make export wizard work!,private void showLicensePopup() {,private void showLicensePopup(ActionEvent event) {,KEEP KEEP REP DEL KEEP,Remove Parameter
[java] ExcessiveParameterListRule must ignore a private constructor,"public Object visit(ASTFormalParameter param, Object data) { return COUNT;","public Object visit(ASTFormalParameter node, Object data) { return NumericConstants.ONE;",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Fix PEGraphDecoder SVM exception edge logic.,boolean unwindExceptions) {,"public PEAppendGraphBuilderContext(PEMethodScope inlineScope, FixedWithNextNode lastInstr, InvokeKind invokeKind, JavaType invokeReturnType, boolean parsingInvocationPlugin) {",DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP,Add Parameter
improvements,"private Object getResultFromQuery(ScriptType scriptType, Map<String, String> params) throws IOException { ScriptExecutor executor = new ScriptExecutor(scriptType); executor.setParams(params); LOG.info(""Execution "" + scriptType.getScriptFileName() + "" is started"");","private Object doExecuteScript(ScriptType scriptType, ScriptExecutor executor) throws IOException",KEEP KEEP REP KEEP ADD REP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
AbstractTransformer #162: Support functionOrValue TypeDescriptor for TypedDeclaration containers,private java.util.List<ProducedType> getTypeArguments(,private Collection<ProducedType> getTypeArguments(,KEEP REP KEEP,Change Return Type
SONARJAVA-3054 Remove SQ API deprecated calls to NewExternalIssue#forRule(RuleKey),"public static void saveIssue(SensorContext context, ExternalRuleLoader ruleLoader, InputFile inputFile, String engineId, String ruleId, String line, String message) {","public static void saveIssue(SensorContext context, ExternalRuleLoader ruleLoader, InputFile inputFile, RuleKey ruleKey, String line, String message) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP REP KEEP KEEP KEEP KEEP KEEP,Add Parameter
"Added normalize method, fixed dlllist",private Set<String> parse_DllList(File PluginFile) { Set<String> fileSet = new HashSet<>();,"private Map<String, Map> Parse_Dlllist(File PluginFile) { List<String> fileNames = new ArrayList<>(); String line; String line_type; String file_path; Map<String, Map> fileMap = new HashMap<>(); String filePath; String fileName;",KEEP REP REP DEL KEEP KEEP REP REP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Added support for S4 slot update operator. Moved slot operator implementations to the "access" package.,"private static RCallNode createFieldUpdate(SourceSection source, RSyntaxNode receiver, RSyntaxNode rhs, String fieldName, boolean at) { ReadVariableNode function = ReadVariableNode.createForced(source, at ? ""@<-"" : ""$<-"", RType.Function);","private static RCallNode createFieldUpdate(SourceSection source, RSyntaxNode receiver, RSyntaxNode rhs, String fieldName) { ReadVariableNode function = ReadVariableNode.createForced(source, ""$<-"", RType.Function);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD KEEP KEEP,Add Parameter
Issue #1173: Add a visitor for adding errors to nodes which we don't support in some way,static String checkForBannedJavaAnnotation(Tree.InvocationExpression invocation) { if (invocation.getPrimary() instanceof Tree.BaseMemberExpression && ((Tree.BaseMemberExpression)invocation.getPrimary()).getDeclaration() != null) {,"private static boolean checkForBannedJavaAnnotation( ExpressionTransformer exprGen, Tree.InvocationExpression invocation) { if (invocation.getPrimary() instanceof Tree.BaseMemberExpression) {",DEL KEEP REP REP DEL DEL DEL KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Change Return Type
Rectify errors. Adjust logic since Instance more often than not should have details. Account for List<> instances.,public CorrelationAttributeInstance getCorrelationAttribute() { return correlationAttributeInstance;,public CorrelationAttribute getCorrelationAttribute() { return correlationAttributeInstances;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
More refactor on datatable feature set,"public boolean shouldDecode(FacesContext context, DataTable table) { return table.isDraggableColumns(); }","public boolean isEnabled(FacesContext context, DataTable table) { return table.isDraggableColumns(); }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Fix enterprise contacts APIs naming and docs,public static boolean isRemoteDirectoryId(long directoryId) {,public static boolean isRemoteDirectory(long directoryId) {,KEEP KEEP KEEP REP KEEP KEEP,Rename Method
SC: prefer accessible field over inaccessible getter method,"public static boolean isFieldDirectlyAccessible(final FieldNode field, final ClassNode accessingClass) { return field != null && isMemberDirectlyAccessible(field.getModifiers(), field.getDeclaringClass(), accessingClass); }","public static boolean isFieldDirectlyAccessible(final FieldNode field, final ClassNode clazz) { if (field == null) return false; if (field.isPublic()) return true;",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP REP REP REP REP REP REP REP REP DEL,Rename Parameter
Multiple changes to thirdeye-reporting,"private List<TableReportRow> getGroupBy(Map<String, List<ReportRow>> metricTableRows, List<String> metrics) {","private List<TableReportRow> getGroupBy(Map<String, List<ReportRow>> metricTableRows) {",KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Use a builder to create injectors.,"protected static Injector.Builder defaultInjector() { return new Injector.Builder() .bind(Properties.class, System.getProperties());","protected static Injector defaultInjector() { return new Injector() .register(Properties.class, System.getProperties()) .registerDefault(ApkLoader.class, ApkLoader.class) .registerDefault(SandboxFactory.class, SandboxFactory.class) .registerDefault(SdkCollection.class, SdkCollection.class) .registerDefault(Ctx.class, Ctx.class);",KEEP KEEP REP KEEP KEEP KEEP KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
MAPREDUCE-6174. Combine common stream code into parent class for InMemoryMapOutput and OnDiskMapOutput. (Eric Payne via gera),"protected void doShuffle(MapHost host, IFileInputStream iFin,","public void shuffle(MapHost host, InputStream input,",REP KEEP REP KEEP REP REP,Rename Parameter
The "as.call" function now returns correctly structured RLanguage object.,"protected static RLanguage makeCall(SourceSection src, RFunction function, RArgsValuesAndNames args) {","protected static RLanguage makeCall(SourceSection callSource, RFunction function, RArgsValuesAndNames args) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
TypeFactory #1052: Added methods to get Boolean decls from the TypeFactory rather than from the model loader directly,"private ProducedType javacCeylonTypeToProducedType(com.sun.tools.javac.code.Type t) { return loader().getType(getLanguageModule(), t.tsym.packge().getQualifiedName().toString(), t.tsym.getQualifiedName().toString(), null);","private ProducedType toPType(com.sun.tools.javac.code.Type t) { return loader().getType(t.tsym.packge().getQualifiedName().toString(), t.tsym.getQualifiedName().toString(), null);",KEEP KEEP REP KEEP KEEP KEEP ADD REP KEEP KEEP,Rename Method
All wrappers of "empty data address" must be "external",public void setExternalDataAddress(long address) {,public long setExternalDataAddress(long address) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Add 'edit here' as a new text selection option for title descriptions,"public static Intent newIntent(@NonNull Context context, @NonNull PageTitle title, @Nullable String highlightText, boolean reviewEnabled) {","public static Intent newIntent(@NonNull Context context, @NonNull PageTitle title, boolean reviewEnabled) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD KEEP KEEP KEEP,Add Parameter
Clean up public/private address handling for EUCA-8499,final String publicIp,"final Function<? super VmInstance, String> publicIpSupplier",KEEP REP REP DEL DEL DEL,Rename Parameter
SONARJAVA-2631 check type of fields to avoid FP on S4275 (#1911),"private static boolean hasNoPrivateFieldMatchingNameAndType(String fieldName, Type fieldType, Symbol.TypeSymbol accessorOwner) {","private static boolean hasPrivateFieldWithName(String fieldName, Symbol.TypeSymbol accessorOwner) {",KEEP KEEP KEEP REP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Improve tablet portrait and phone visuals for contact details,boolean isLast) {,"protected void bindView(View view, ViewEntry entry, boolean isFirstOfItsKind) {",DEL DEL DEL DEL DEL DEL KEEP REP KEEP,Add Parameter
Support possessive quantifiers in Ruby,"Quantifier(int lower, int upper, boolean greedy, boolean possessive) {","Quantifier(int lower, int upper, boolean greedy) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Notification groundwork: update and expand client structures.,"@Nullable public NotificationList notifications() { return notifications; } @Nullable public Map<String, Notification.UnreadNotificationWikiItem> unreadNotificationWikis() { return unreadnotificationpages;",@Nullable public List<Notification> notifications() { return notifications != null ? notifications.list() : null;,KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD REP REP REP REP REP REP REP,Change Return Type
CDEC-55 : The parameter 'accountId' was removed in LoginCommand. The parameter 'accountName' was added in LoginCommand.,"protected AccountReference getAccountReferenceWhereUserIsOwner() throws IOException { String json = installationManagerProxy.getAccountReferenceWhereUserIsOwner(getCredentialsRep()); return json == null ? null : createDtoFromJson(json, AccountReference.class);",protected String getAccountIdWhereUserIsOwner() throws IOException { return installationManagerProxy.getAccountIdWhereUserIsOwner(getCredentialsRep());,KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD REP,Change Return Type
fix AccountsText and bring it inline with HighlightedText,"AccountsText(String solrDocumentId, Set<String> keywords) {","AccountsText(String objectId, Set<String> keywords) { this.solrDocumentId = objectId; this.keywords.addAll(keywords); this.queryString = HIGHLIGHT_FIELD + "":"" + keywords.stream() .map(keyword -> ""/.*?"" + KeywordSearchUtil.escapeLuceneQuery(keyword) + "".*?/"") .collect(Collectors.joining("" "")); ",KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Rename Parameter
Fix assorted docs to eliminate doxygen warnings,private String createQuery(String mimeType) {,private String createQuery(String mime_type) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
updated 16.04.2009 00:08,public synchronized void setSlice(int n) { if (stack==null || n==currentSlice) {,public synchronized void setSlice(int index) { if (stack==null || index==currentSlice) {,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Add tests for logical 'and' in WPS,private P2<Integer> computeANDScore(OSMWithTags way) {,private P2<Integer> computeANDScore(OSMWithTags match) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
"Java: Cosmetics (remove tabs), release audio track","public void init(int sampleRateInHz, int channels, int samples) { Log.d(TAG, sampleRateInHz + "", "" + channels + "", "" + samples + ""=>"" + channels*samples); mAudioTrack = new AudioTrack(AudioManager.STREAM_MUSIC, sampleRateInHz, AudioFormat.CHANNEL_CONFIGURATION_STEREO, AudioFormat.ENCODING_PCM_16BIT, channels * samples * 2, AudioTrack.MODE_STREAM); } public void release() { Log.d(TAG, ""Stopping audio playback""); mAudioTrack.release(); mAudioTrack = null; } public void playBuffer(byte[] audioData, int bufferSize, int nbSamples) { Log.d(TAG, ""Buffer size: "" + bufferSize + "" nb samples: "" + nbSamples); if (mAudioTrack.write(audioData, 0, bufferSize) != bufferSize) { Log.w(TAG, ""Could not write all the samples to the audio device""); } mAudioTrack.play(); }","public void Init(int sampleRateInHz, int channels, int samples) { Log.d(TAG, sampleRateInHz + "", "" + channels + "", "" + samples + ""=>"" + channels*samples); mAudioTrack = new AudioTrack(AudioManager.STREAM_MUSIC, sampleRateInHz, AudioFormat.CHANNEL_CONFIGURATION_STEREO, AudioFormat.ENCODING_PCM_16BIT, channels * samples * 2, AudioTrack.MODE_STREAM); } public void playAudio(byte[] audioData, int bufferSize, int nbSamples) { Log.d(TAG, ""Buffer size: "" + bufferSize + "" nb samples: "" + nbSamples); Log.d(TAG, ""Write audio data in Java: "" + mAudioTrack.write(audioData, 0, bufferSize)); mAudioTrack.play(); }",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP REP REP REP REP REP REP REP KEEP KEEP,Rename Method
typo,"public Credentials createCredentials(String scheme, AuthScope scope, boolean quietly) {","public Credentials createCredentials(String scheme, AuthScope scope, boolean quitely) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Added a percent threshold to consider startup of services (#4011),double minResourcesStartPercent) {,"public IdealStateMatchServiceStatusCallback(HelixManager helixManager, String clusterName, String instanceName) {",REP REP DEL DEL DEL DEL DEL KEEP,Add Parameter
Use more appropriate butterknife annotation for image dimming switch.,void onToggleDimImages(boolean enabled) { if (enabled == Prefs.shouldDimDarkModeImages()) { return; } Prefs.setDimDarkModeImages(enabled);,@OnClick(R.id.theme_chooser_dark_mode_dim_images_switch) void onToggleDimImages() { boolean enabled = Prefs.shouldDimDarkModeImages(); Prefs.setDimDarkModeImages(!enabled);,REP REP REP KEEP ADD ADD ADD REP REP REP REP REP,Add Parameter
network link type has been introduced,"protected INetworkLink createLink(int id, INetworkLink.Type type, String predefinedId, String siteName, String title, String summary, String language, UrlInfoCollection<UrlInfoWithDate> infos) {","protected INetworkLink createLink(int id, String predefinedId, String siteName, String title, String summary, String language, UrlInfoCollection<UrlInfoWithDate> infos) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
kafka consumer: custom serializer can't be configured after it's instantiation (#12960) (#13097),"private static Deserializer getKafkaDeserializer(Properties properties, String kafkaConfigKey, boolean isKey)","private static Deserializer getKafkaDeserializer(Properties properties, String kafkaConfigKey)",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
HDFS-8143. Mover should exit after some retry when failed to move blocks.  Contributed by surendra singh lilhore,"Mover(NameNodeConnector nnc, Configuration conf, AtomicInteger retryCount) {","Mover(NameNodeConnector nnc, Configuration conf) {",KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Bug Counter now uses long rather than int to increase the range,public long getStart() { return getPropertyAsLong(START);,public int getStart() { return getPropertyAsInt(START);,KEEP REP KEEP KEEP KEEP REP,Change Return Type
Support for external books in the Library,"BookDeleter(Book book, int removeMode) {",BookDeleter(Book book) {,KEEP ADD ADD REP KEEP,Add Parameter
IAM authorization cache refresh EUCA-10446,"private static Cache<PrincipalCacheKey,PrincipalCacheValue> cache( ) { Cache<PrincipalCacheKey,PrincipalCacheValue> cache; final Pair<String,Cache<PrincipalCacheKey,PrincipalCacheValue>> cachePair = cacheReference.get( );","private static Cache<PrincipalCacheKey,UserPrincipal> cache( ) { Cache<PrincipalCacheKey,UserPrincipal> cache; final Pair<String,Cache<PrincipalCacheKey,UserPrincipal>> cachePair = cacheReference.get( );",KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
WICKET-1660,public IModel<String> getTitle(),public IModel getTitle(),KEEP REP KEEP,Change Return Type
2022.05.01 (1.53s10; ClassChecker),void log(String path) { IJ.log("Duplicate plugin: "+path);,void write(String path) { IJ.log("Deleting duplicate plugin: "+path);,KEEP REP KEEP KEEP REP DEL KEEP KEEP,Rename Method
support for calling methods through host interop for specified jni names where a subclass changes the return type of an overridden method,private static MethodInfo methodInfo(Method m) { return new MethodInfo(m); } private static class MethodInfo { private final boolean isStatic; private final String name; private final Class<?>[] parameterTypes; private final Class<?> returnType;  MethodInfo(Method m) { this.isStatic = Modifier.isStatic(m.getModifiers()); this.name = m.getName(); this.parameterTypes = m.getParameterTypes(); this.returnType = m.getReturnType(); },"private static Object methodInfo(Method m) { class MethodInfo { private final boolean isStatic = Modifier.isStatic(m.getModifiers()); private final String name = m.getName(); private final Class<?>[] parameterTypes = m.getParameterTypes(); @Override public boolean equals(Object obj) { if (obj instanceof MethodInfo) { MethodInfo other = (MethodInfo) obj; return isStatic == other.isStatic && name.equals(other.name) && Arrays.equals(parameterTypes, other.parameterTypes); } else { return false; } }",KEEP KEEP REP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP REP REP REP REP REP REP REP REP KEEP REP REP REP REP REP REP REP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP,Change Return Type
Implement call and SMS shortcuts.,"private void returnPickerResult(Cursor c, String name, Uri uri, long id) {","private void returnPickerResult(String name, Uri uri) {",KEEP KEEP ADD ADD REP KEEP KEEP ADD ADD REP KEEP,Add Parameter
fix api main,"public static CompiledDefinition run(Definition parsedDef, KompileOptions kompileOptions, Function<Definition, Definition> pipeline) {","public static CompiledDefinition run(Definition parsedDef, KompileOptions kompileOptions, KExceptionManager kem) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD REP REP KEEP,Rename Parameter
UP-3477 Working on event aggregation,"public List<LoginAggregationImpl> getLoginAggregations(DateMidnight start, DateMidnight end, AggregationInterval interval, AggregatedGroupMapping... aggregatedGroupMapping) {","public List<LoginAggregation> getLoginAggregations(DateMidnight start, DateMidnight end, AggregationInterval interval, AggregatedGroupMapping... aggregatedGroupMapping) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
peeling initial iteration in lapply,"protected static FrameSlot createIndexSlot(Frame frame) { return frame.getFrameDescriptor().findOrAddFrameSlot(INDEX_NAME, FrameSlotKind.Int); } protected static FrameSlot createVectorSlot(Frame frame) { return frame.getFrameDescriptor().findOrAddFrameSlot(VECTOR_NAME, FrameSlotKind.Object);","protected static FrameSlot createSlot(Frame frame, String name) { return frame.getFrameDescriptor().findOrAddFrameSlot(name);",KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP REP REP REP KEEP KEEP ADD REP,Remove Parameter
Adds shadow offset support to CardShadowDrawable (#628),"public static int getShadowRight(float shadowSize, float shadowDx) { return (int) Math.ceil(toEven(shadowSize) + shadowDx); }",public static int getShadowHorizontal(float shadowSize) { return (int) Math.ceil(toEven(shadowSize));,KEEP KEEP KEEP ADD ADD REP REP KEEP KEEP KEEP ADD ADD ADD REP,Add Parameter
AppWidgetManager should replace widget view if RemoteView's layout is different.,"public int[] createWidgets(Class<? extends AppWidgetProvider> appWidgetProviderClass, int widgetLayoutId, int howManyToCreate) {","public List<Integer> createWidgets(int howManyToCreate, Class<? extends AppWidgetProvider> appWidgetProviderClass, int widgetLayoutId) {",KEEP REP REP DEL DEL KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Change Return Type
Update getStateContainerWithLazyStateUpdatesApplied to use clone instead of transferState,public StateContainer applyLazyStateUpdatesForContainer(StateContainer container) {,public void applyLazyStateUpdatesForContainer(StateContainer container) {,KEEP REP KEEP KEEP KEEP,Change Return Type
WICKET-1084,private List getBehaviorsImpl(),private List getBehaviorsIntern(),KEEP KEEP REP,Rename Method
Automated rollback of commit 7b923862c5d8d16c84c50dd1a3b8c6584b729b21.,public ProtoCompileActionBuilder setLangPlugin(FilesToRunProvider langPlugin) {,"FilesToRunProvider langPlugin, String langPluginFormat) {",REP REP REP REP KEEP,Remove Parameter
bp: Extract recovery files details to its own class,public RecoveryFilesDetails fileDetails() { return fileDetails; },"public synchronized Map<String, File> fileDetails() { return fileDetails; }",KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP,Change Return Type
Fix #5288: Dock reimplemented using CSS (#5652),"public int getAnimationDuration() { return (Integer) getStateHelper().eval(PropertyKeys.animationDuration, 1600);","public int getItemWidth() { return (Integer) getStateHelper().eval(PropertyKeys.itemWidth, 40);",KEEP KEEP REP KEEP KEEP KEEP REP REP,Rename Method
git-svn-id: https://only.mawhrin.net/repos/FBReaderJ/trunk@113 6a642e6f-84f6-412e-ac94-c4a38d5a04b0,public Toolbar getToolbar() {,public Toolbar toolbar() {,KEEP KEEP REP KEEP,Rename Method
Implement PendingIntent.getActivities.,"private static PendingIntent create(Context context, Intent[] intents, boolean isActivity, boolean isBroadcast, boolean isService, int requestCode, int flags) {","private static PendingIntent create(Context context, Intent intent, boolean isActivity, boolean isBroadcast, boolean isService, int requestCode, int flags) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
2197 fixed formatting in all files which were modified,public List<IngestProfile> getIngestProfiles() { if (profileList == null) {,"public Map<String, IngestProfile> getIngestProfileMap() { if (profileMap == null) {",KEEP REP REP DEL KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
2018.06.08 (1.52d24),"public ImagePlus(String title, Image image) {","public ImagePlus(String title, Image img) {",KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
A new test and other minor changes,public String doConcat3DoNotReport( String[] tokens ),public String doConcat3( String[] tokens ),KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Improving segment replacement/revert protocol (#7995),private void manageRetentionForTable(TableConfig tableConfig) { String tableNameWithType = tableConfig.getTableName();,private void manageRetentionForTable(String tableNameWithType) {,KEEP KEEP REP REP KEEP ADD ADD ADD ADD,Rename Parameter
Thread hardening for the Datatable system.,"private AbstractData setRaw(int key, AbstractData value) { value.setKey(key); return map.put(key, value); }","private void setRaw(int key, AbstractData value) {",KEEP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Change Return Type
OC-6496 OnSchedule should run with item based rules & rule assignments,"public void triggerJob() throws NumberFormatException, ParseException {","public void triggerJob(int serverTime) throws NumberFormatException, ParseException { TimeZone serverZone = TimeZone.getDefault(); SimpleDateFormat dateFormat = new SimpleDateFormat(""HH""); uadao = new UserAccountDAO(ds); ssdao = new StudySubjectDAO(ds); sdao = new StudyDAO(ds); TimeZone ssZone; int runTime = 23;",KEEP KEEP REP DEL KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
2015.10.25 (1.50d27),"void rotateRoi(int sx, int sy){","void rotateRoi(ImagePlus imp, int sx, int sy){ if (imp == null || ic == null) return; roi = imp.getRoi(); if (roi == null) return; boolean imageRoi = roi instanceof ImageRoi; if (imageRoi) ((ImageRoi)roi).setZeroTransparent(true);",KEEP REP DEL DEL KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Remove Parameter
backported multiline/ text area variant of editable label,protected final FormComponent getEditor(),protected final TextField getEditor(),KEEP KEEP REP KEEP,Change Return Type
Selection of default options is missing in data object on content create #8738,"private void processFormItems( final Iterable<FormItem> formItems, final PropertySet dataSet )","private void processFormItems( final Iterable<FormItem> formItems, final PropertyTree data, final PropertyPath parentPath, final Occurrences parentOccurrences )",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP DEL DEL DEL DEL DEL DEL KEEP,Add Parameter
returns results from fastr.context.eval,"protected Object eval(RAbstractIntVector contexts, RAbstractStringVector exprs, byte par) { Object[] results = new Object[contexts.getLength()];","protected RNull eval(RAbstractIntVector contexts, RAbstractStringVector exprs, byte par) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Change Return Type
"When upserting new record, index the record before updating the upsert metadata (#7860)","private PartitionUpsertMetadataManager.RecordInfo getRecordInfo(GenericRow row, int docId) {","private GenericRow handleUpsert(GenericRow row, int docId) {",KEEP REP REP KEEP KEEP KEEP KEEP,Change Return Type
CommandLink support for Dialog Framework,"protected String getEventBehaviors(FacesContext context, ClientBehaviorHolder cbh, String event) { List<ClientBehavior> behaviors = cbh.getClientBehaviors().get(event);","protected String getOnclickBehaviors(FacesContext context, ClientBehaviorHolder cbh) { List<ClientBehavior> behaviors = cbh.getClientBehaviors().get(""click"");",KEEP KEEP REP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP REP,Add Parameter
Indicate what fields are getting ignored when adding configs (#8514),public ConfigSuccessResponse addTable(,public SuccessResponse addTable(,KEEP REP KEEP,Change Return Type
method moved from FBReader to NavigationButtonPanel,public void navigate() { ourNavigatePanel.runNavigation();,public boolean navigate() { if (ourNavigatePanel.getVisibility()) { return false; } ourNavigatePanel.NavigateDragging = false; ourNavigatePanel.initPosition(); ourNavigatePanel.show(true); return true;,KEEP REP KEEP KEEP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Fixed a couple cases of a type parameter name shadowing a,public Analysis getAnalysis(Method method) {,public AnalysisResult getAnalysis(Method method) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Update UI element variable names. Add filtering by mime_type based on check box selection. Needs Brian's changes to use executeQuery instead.,"public AllDataSources(Map<Long, String> dataSourceIdMap, boolean filterByMediaMimeType, boolean filterByDocMimeType) { super(dataSourceIdMap, filterByMediaMimeType, filterByDocMimeType);","public AllDataSources(Map<Long, String> dataSourceIdMap) { super(dataSourceIdMap);",KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP ADD ADD REP,Add Parameter
fixed some 'unchecked assignment' warnings,"protected Map<AnalysisLocal<T>, T> getMap() { AnalysisContext t = AnalysisContext.currentAnalysisContext(); return  t.analysisLocals; } public T get() { Map<AnalysisLocal<T>, T> m = getMap(); if (m.containsKey(this)) { return m.get(this); }",protected Map getMap() { AnalysisContext t = AnalysisContext.currentAnalysisContext(); return  t.analysisLocals;,KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
add versions of doDialog that take a owner window as a paramater and use them to show the tagging dialogs over IG without bringing the main autopsy window to the front.,"private GetTagNameAndCommentDialog(Window owner) { super(owner,","private GetTagNameAndCommentDialog() { super((JFrame) WindowManager.getDefault().getMainWindow(),",KEEP ADD REP KEEP REP DEL,Add Parameter
"For Analysis CSV output, add method modifiers and use same time stamp in all file names.","private static void toCsvFile(String description, String reportsPath, String prefix, String reportName, String timeStamp, Consumer<PrintWriter> reporter) {","private static void toCsvFile(String description, String reportsPath, String prefix, String reportName, Consumer<PrintWriter> reporter) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
Rename flexible to flexibleTrip and document,public boolean isFlexibleTrip() { return flexibleTrip;,public boolean isFlexible() { return flexible;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Added light buffer snapshot functionality to SpoutChunk,"public SpoutChunkSnapshot(SpoutChunk chunk, short[] blockIds, short[] blockData, byte[] blockLight, byte[] skyLight, CuboidLightBuffer[] lightBuffers, EntityType type, ExtraData data) { this(chunk, blockIds, blockData, null, 0, null, blockLight, skyLight, lightBuffers, type, data);","public SpoutChunkSnapshot(SpoutChunk chunk, short[] blockIds, short[] blockData, byte[] blockLight, byte[] skyLight, EntityType type, ExtraData data) { this(chunk, blockIds, blockData, null, 0, null, blockLight, skyLight, type, data);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP,Add Parameter
Clean up redundant error checking in message replacement,private static MsgOptions getOptions(@Nullable Node optionsNode) throws MalformedException {,"private static MsgOptions getOptions(JsMessage message, @Nullable Node optionsNode) throws MalformedException {",KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Fix SandboxClassLoader to obey parent-first contract.,protected void finallyAfterTest(FrameworkMethod method) {,protected void finallyAfterTest() {,KEEP KEEP ADD REP KEEP,Add Parameter
Fix perf: refactor flowFromLearnedConstraints in order to avoid  to 'Collect' stream (#1203),"private Stream<Constraint> flowFromLearnedConstraints(ExplodedGraph.Node currentNode) { ExplodedGraph.Node parent = currentNode.parent(); if (parent == null) { return Stream.empty(); } MethodYield selectedYield = getMethodYieldFromParent(currentNode, parent); return currentNode.getLearnedConstraints().stream() .filter(learnedConstraint -> learnedConstraint.getSv().equals(symbolicValue))",private List<Constraint> flowFromLearnedConstraints(ExplodedGraph.Node currentNode) { List<Constraint> learnedConstraints = currentNode.getLearnedConstraints().stream() .filter(lc -> lc.getSv().equals(symbolicValue)),KEEP REP KEEP KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP KEEP REP,Change Return Type
local variable renaming,"ZLNetworkRequest createNetworkData(String url, MimeType mime, final OPDSCatalogItem.State state) {","ZLNetworkRequest createNetworkData(String url, MimeType mime, final OPDSCatalogItem.State result) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
THIRDEYE-228 Adds support for disjunctive queries,"public Map<String, List<String>> getDimensions() {","public Map<String, String> getDimensions() {",KEEP KEEP REP KEEP KEEP,Change Return Type
Remove multi account grouping of data in compact editor,"public void setState(KindSectionData kindSectionData,","public void setState(KindSectionDataList kindSectionDataList,",KEEP KEEP REP REP,Rename Parameter
Changes according to git refactoring (#1090),"private void listBranches(final ProjectConfig project, final BranchListMode listMode, final AsyncCallback<List<Branch>> callback) {","private void listBranches(final ProjectConfig project, final String whichBranches, final AsyncCallback<List<Branch>> callback) {",KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP,Rename Parameter
Update the `windowConfiguration` bounds when updating the display metrics,"int apiLevel, Configuration configuration, DisplayMetrics displayMetrics) {","private static void setDimensions(Configuration configuration, DisplayMetrics displayMetrics) {",REP REP REP DEL KEEP KEEP KEEP KEEP,Add Parameter
refactoring: ItemsLoadingRunnable and ItemsLoadingHandler are merged,"ItemsLoadingRunnable(Activity activity) { this(activity, 1000);","ItemsLoadingRunnable(Activity activity, ItemsLoadingHandler handler) { this(activity, handler, 1000);",KEEP REP DEL DEL KEEP KEEP DEL KEEP,Remove Parameter
"Move block physics to a synchronized int hash set per region, process during tick stage 1","public SpoutRegion getRegionFromBlock(int x, int y, int z) {","public Region getRegionFromBlock(int x, int y, int z) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add optional comment to __log() function,"static void logDetails(Logger l, String s, String prio, Throwable t, String c) {","static void logDetails(Logger l, String s, String prio, Throwable t) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"drop JavaExecutionOptions from GlobalContext, KItemOperations, EqualityOperations, InitializeRewriter","boolean deterministicFunctions,","JavaExecutionOptions javaOptions,",REP REP,Rename Parameter
STC: outer closure parameter reference,private ClassNode getTypeFromClosureArguments(final Parameter parameter) { for (TypeCheckingContext.EnclosingClosure enclosingClosure : typeCheckingContext.getEnclosingClosureStack()) { ClosureExpression closureExpression = enclosingClosure.getClosureExpression(); ClassNode[] closureParamTypes = closureExpression.getNodeMetaData(CLOSURE_ARGUMENTS); if (closureParamTypes != null) { Parameter[] parameters = closureExpression.getParameters(); if (parameters != null) { final int n = parameters.length; String parameterName = parameter.getName(); if (n == 0 && parameterName.equals("it")) { return closureParamTypes.length > 0 ? closureParamTypes[0] : null; } for (int i = 0; i < n; i += 1) { if (parameterName.equals(parameters[i].getName())) { return closureParamTypes.length > i ? closureParamTypes[i] : null; } },"private ClassNode getTypeFromClosureArguments(final Parameter parameter, final TypeCheckingContext.EnclosingClosure enclosingClosure) { ClosureExpression closureExpression = enclosingClosure.getClosureExpression(); ClassNode[] closureParamTypes = closureExpression.getNodeMetaData(CLOSURE_ARGUMENTS); if (closureParamTypes == null) return null; Parameter[] parameters = closureExpression.getParameters(); String name = parameter.getName(); if (parameters != null) { if (parameters.length == 0) { return ""it"".equals(name) && closureParamTypes.length != 0 ? closureParamTypes[0] : null; } for (int index = 0; index < parameters.length; index++) { if (name.equals(parameters[index].getName())) { return closureParamTypes.length > index ? closureParamTypes[index] : null;",KEEP KEEP KEEP KEEP ADD ADD ADD REP REP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP DEL KEEP KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP REP KEEP ADD ADD REP KEEP KEEP DEL DEL KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP ADD ADD REP REP KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP REP KEEP KEEP ADD ADD,Remove Parameter
CODENVY-552 Add paging to Organization API,"public Page<OrganizationImpl> getByParent(String parent, int maxItems, int skipCount) throws ServerException {",public List<OrganizationImpl> getByParent(String parent) throws ServerException {,KEEP REP KEEP ADD ADD ADD ADD REP KEEP KEEP KEEP,Change Return Type
Restore DataMaps,"public SpoutEntity(Transform transform, int viewDistance, UUID uid, boolean load, byte[] dataMap, Class<? extends Component> ...components) {","public SpoutEntity(Transform transform, int viewDistance, UUID uid, boolean load, Class<? extends Component> ...components) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
Revert "Use scan mode introduced in VCardParser.","private boolean doActuallyReadOneVCard(String canonicalPath, Account account,","private boolean doActuallyReadOneVCardFile(String canonicalPath, Account account,",KEEP KEEP REP KEEP KEEP KEEP,Rename Method
Remove more doxygen warnings,public <T> T accept(AutopsyItemVisitor<T> v) { return v.visit(this);,public Object accept(AutopsyItemVisitor v) { return v.visit(this); ,KEEP ADD REP REP KEEP KEEP KEEP KEEP,Change Return Type
Use long bit offsets when reading/writing fixed bit width files,"private long computeBitOffset(int row, int col) {","private int computeBitOffset(int row, int col) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Correctly infer type parameters on generic impls in test specs,private static TypeName getEnclosedImplClassName(final SpecModel enclosedSpecModel) {,private static ClassName getEnclosedImplClassName(final SpecModel enclosedSpecModel) {,KEEP KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
string list as book path (only first element can be set from preferences),"private static String defaultBookDirectory() { return cardDirectory() + ""/Books""; } public static ZLStringListOption BookPathOption() { return new ZLStringListOption(""Files"", ""BooksDirectory"", defaultBookDirectory(), ""\n"");","public static ZLStringOption BooksDirectoryOption() { return new ZLStringOption(""Files"", ""BooksDirectory"", cardDirectory() + ""/Books"");",ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP REP REP KEEP KEEP KEEP REP KEEP REP REP DEL,Change Return Type
fix some warnings,public final Page< ? > startPage(final ITestPageSource testPageSource),public final Page startPage(final ITestPageSource testPageSource),KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Change Return Type
Darn signatures,"protected Element createChannelNode(Connection con, DocumentImpl doc, int chanId, String idTag) throws java.sql.SQLException","protected Element createChannelNode(Statement stmt, DocumentImpl doc, int chanId, String idTag) throws java.sql.SQLException",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Refactored geocode,public String getAddress() {,public List<String> getAddress() {,KEEP REP KEEP KEEP,Change Return Type
use static initializer for RPerfAnalysis,public static boolean register(Handler handler) { if (enabled(handler.getName())) { handlers.add(handler); return true; } else { return false;,public static void registerHandler(Handler handler) { handlers.add(handler); },KEEP KEEP REP REP KEEP KEEP ADD ADD ADD KEEP ADD ADD KEEP ADD ADD ADD ADD,Change Return Type
Add ramAccounting to percentile agg / fix out-of-memory errors,"private void initState(TDigestState state, Object argValue, RamAccounting ramAccounting) {","private void initState(TDigestState state, Object argValue) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Changes in the group management,"private String analyzeParameters( XSLT xslt, ContentHandler out ) throws PortalException {",private String analyzeParameters( XSLT xslt ) throws PortalException {,KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
Make commitlog archive+restore more robust,public void maybeArchive(final CommitLogSegment segment),"public void maybeArchive(final String path, final String name)",KEEP KEEP KEEP REP REP DEL DEL DEL,Add Parameter
fix setPluginList,private List<URL> determineInstalledPlugins() { if (this.pluginList != null) return Arrays.asList(this.pluginList);,private ArrayList<URL> determineInstalledPlugins() { ArrayList<URL> plugins = new ArrayList<URL>();,KEEP REP KEEP KEEP ADD REP REP REP REP REP,Change Return Type
Fix pmd warnings,"private Map<VariableNameDeclaration, VarLocalInfo> copyTable() {","private HashMap<VariableNameDeclaration, VarLocalInfo> copyTable() {",KEEP REP KEEP KEEP KEEP,Change Return Type
minimize use of Java interop,"static ContextInfo createContextInfoFromCommandLine(RCmdOptions options, boolean embedded, boolean initial, InputStream inStream, OutputStream outStream, String[] env) {","static PolyglotEngine createPolyglotEngineFromCommandLine(RCmdOptions options, boolean embedded, boolean initial, InputStream inStream, OutputStream outStream, String[] env) {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Rework INSERT OR REPLACE in DrawableDB to be compatible with cascading deletes,"public void insertOrUpdateDataSource(long dataSourceObjectID, DrawableDbBuildStatusEnum status) {","public void insertOrUpdateDataSource(long dsObjectId, DrawableDbBuildStatusEnum status) {",KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
SONAR-17352 Refactor component keys to not include branch suffix,"private void addSettings(Settings settings, String componentUuid) {","private void addSettings(Settings settings, String componentDbKey) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
generification,public IModel<String> getDisplayModel(),public IModel getDisplayModel(),KEEP REP KEEP,Change Return Type
Refactor on sort-filter to use dynamicColumn apis,"public Map<String,UIColumn> populateFilterMap(FacesContext context, DataTable table) {","public Map<String,Column> populateFilterMap(FacesContext context, DataTable table) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
test sequencing of transformations,"private Set<Sentence> createParser(Module mod, Module disambM, Set<Sentence> disambProds) {","private Set<Sentence> createParser(Module mod, Set<Sentence> disambProds) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP,Add Parameter
remove LayoutState.mIsTransitionKeySet flag,"InternalNode node, LayoutState layoutState, boolean matchHostBounds) {","InternalNode node, LayoutState layoutState, boolean matchHostBoundsTransitions) {",KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
OC-7133,"private List<CrfBean> listOfHiddenCrfs(Integer siteId, Integer parentStudyId, List<EventDefinitionCrf> edcs, EventCrf ecrf) { boolean found = false; int crfId = ecrf.getCrfVersion().getCrf().getCrfId(); List<CrfBean> hiddenCrfs = new ArrayList<CrfBean>(); LOGGER.info(""The study subject is at the site/study "" + siteId); for (EventDefinitionCrf eventDefCrf : edcs) { if (eventDefCrf.getCrf().getCrfId() == crfId && eventDefCrf.getStudy().getStudyId() == siteId) { found = true; if (eventDefCrf.getHideCrf()) { hiddenCrfs.add(eventDefCrf.getCrf()); } } } if (!found) { for (EventDefinitionCrf eventDefCrf : edcs) { if (eventDefCrf.getCrf().getCrfId() == crfId && eventDefCrf.getStudy().getStudyId() == parentStudyId && eventDefCrf.getHideCrf()) { hiddenCrfs.add(eventDefCrf.getCrf()); } } } return hiddenCrfs; } private String fetchEventCRFStatus(EventCrf ecrf) { String stage = null; Status status = Status.getByCode(ecrf.getStatusId()); if (ecrf.getEventCrfId()<=0 || status.getCode()<=0) { stage =EventCRFStatus.UNCOMPLETED.getI18nDescription(getLocale()); } if (status.equals(Status.AVAILABLE)) { stage = EventCRFStatus.INITIAL_DATA_ENTRY.getI18nDescription(getLocale()); } if (status.equals(Status.PENDING)) { if (ecrf.getValidatorId()!= 0) { stage = EventCRFStatus.DOUBLE_DATA_ENTRY.getI18nDescription(getLocale()); } else { stage = EventCRFStatus.INITIAL_DATA_ENTRY_COMPLETE.getI18nDescription(getLocale()); } } if (status.equals(Status.UNAVAILABLE)) { stage = EventCRFStatus.DOUBLE_DATA_ENTRY_COMPLETE.getI18nDescription(getLocale()); } if (status.equals(Status.LOCKED)) { stage = EventCRFStatus.LOCKED.getI18nDescription(getLocale()); } if (status.equals(Status.DELETED)) { stage = EventCRFStatus.INVALID.getI18nDescription(getLocale()); } if (status.equals(Status.AUTO_DELETED)) { stage = EventCRFStatus.INVALID.getI18nDescription(getLocale()); } return stage; } private ArrayList<ImportItemGroupDataBean> fetchItemData( Set<ItemGroupMetadata> set, int eventCrfId, List<VersioningMap> vms, EventCrf eventCrf) { String groupOID, itemOID; String itemValue = null; String itemDataValue; HashMap<String, ArrayList<String>> oidMap = new HashMap<String, ArrayList<String>>(); HashMap<String, List<ItemData>> oidDNAuditMap = new HashMap<String, List<ItemData>>(); List<ItemData> itds =  eventCrf.getItemDatas(); for (ItemData itemData : itds) { List<ItemGroupMetadata> igmetadatas = itemData.getItem().getItemGroupMetadatas(); for (ItemGroupMetadata igGrpMetadata : igmetadatas) { groupOID = igGrpMetadata.getItemGroup().getOcOid(); if (!oidMap.containsKey(groupOID)) { String groupOIDOrdnl = groupOID; ArrayList<String> itemsValues = new ArrayList<String>(); ArrayList<ItemData> itemDatas = new ArrayList<ItemData>(); List<ItemGroupMetadata> allItemsInAGroup = igGrpMetadata .getItemGroup().getItemGroupMetadatas(); for (ItemGroupMetadata itemGrpMetada : allItemsInAGroup) { itemOID = itemGrpMetada.getItem().getOcOid(); itemsValues = new ArrayList<String>(); itemsValues = new ArrayList<String>(); itemDataValue = fetchItemDataValue(itemData, itemData.getItem()); itemDatas =  new ArrayList<ItemData>(); itemValue = itemOID + DELIMITER + itemDataValue; itemsValues.add(itemValue); groupOIDOrdnl = groupOID + GROUPOID_ORDINAL_DELIM + itemData.getOrdinal(); if (itemData.getItem().getOcOid() == itemOID) { if (oidMap.containsKey(groupOIDOrdnl)) { ArrayList<String> itemgrps = oidMap .get(groupOIDOrdnl); List<ItemData>itemDataTemps = oidDNAuditMap.get(groupOIDOrdnl); if (!itemgrps.contains(itemValue)) { itemgrps.add(itemValue); oidMap.remove(groupOIDOrdnl); itemDataTemps.add(itemData); oidDNAuditMap.remove(groupOIDOrdnl); } oidMap.put(groupOIDOrdnl, itemgrps); oidDNAuditMap.put(groupOIDOrdnl, itemDataTemps); } else { oidMap.put(groupOIDOrdnl, itemsValues); itemDatas.add(itemData); oidDNAuditMap.put(groupOIDOrdnl, itemDatas); } } } } } } return populateImportItemGrpBean(oidMap,oidDNAuditMap); } private String fetchItemDataValue(ItemData itemData, Item item) { String idValue = itemData.getValue(); return idValue; } private ArrayList<ImportItemGroupDataBean> populateImportItemGrpBean( HashMap<String, ArrayList<String>> oidMap, HashMap<String, List<ItemData>> oidDNAuditMap) { Set<String> keysGrpOIDs = oidMap.keySet(); ArrayList<ImportItemGroupDataBean> iigDataBean = new ArrayList<ImportItemGroupDataBean>(); ImportItemGroupDataBean importItemGrpDataBean = new ImportItemGroupDataBean(); for (String grpOID : keysGrpOIDs) { ArrayList<String> vals = oidMap.get(grpOID); importItemGrpDataBean = new ImportItemGroupDataBean(); int groupIdx = grpOID.indexOf(GROUPOID_ORDINAL_DELIM); if (groupIdx != -1) { importItemGrpDataBean.setItemGroupOID(grpOID.substring(0, groupIdx)); importItemGrpDataBean.setItemGroupRepeatKey(grpOID.substring( groupIdx + 1, grpOID.length())); ArrayList<ImportItemDataBean> iiDList = new ArrayList<ImportItemDataBean>(); for (String value : vals) { ImportItemDataBean iiDataBean = new ImportItemDataBean(); int index = value.indexOf(DELIMITER); if (!value.trim().equalsIgnoreCase(DELIMITER)) { iiDataBean.setItemOID(value.substring(0, index)); iiDataBean.setValue(value.substring(index + 1, value.length())); if(isCollectAudits()||isCollectDns()){ iiDataBean = fetchItemDataAuditValue(oidDNAuditMap.get(grpOID),iiDataBean); } iiDList.add(iiDataBean); } } importItemGrpDataBean.setItemData(iiDList); iigDataBean.add(importItemGrpDataBean); } } return iigDataBean; } private ImportItemDataBean fetchItemDataAuditValue(List<ItemData> list, ImportItemDataBean iiDataBean) { for(ItemData id:list){ if(id.getItem().getOcOid().equals(iiDataBean.getItemOID())){ if(isCollectAudits()) iiDataBean.setAuditLogs(fetchAuditLogs(id.getItemDataId(),""item_data"", iiDataBean.getItemOID(), null)); if(isCollectDns()) iiDataBean.setDiscrepancyNotes(fetchDiscrepancyNotes(id)); return iiDataBean; } } return iiDataBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(ItemData itemData) { List<DnItemDataMap> dnItemDataMaps  = itemData.getDnItemDataMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(itemData.getItem().getOcOid()); if(isCollectDns()) { DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnItemDataMap dnItemDataMap:dnItemDataMaps){ DiscrepancyNote dn =  dnItemDataMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, null); } dnNotesBean.setDiscrepancyNotes(dnNotes); } return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(EventCrf eventCrf) { LOGGER.info(""Fetching the discrepancy notes..""); List<DnEventCrfMap> dnEventCrfMaps  = eventCrf.getDnEventCrfMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(eventCrf.getCrfVersion().getOcOid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnEventCrfMap dnItemDataMap:dnEventCrfMaps){ DiscrepancyNote dn =  dnItemDataMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnItemDataMap.getDnEventCrfMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(StudySubject studySubj) { List<DnStudySubjectMap> dnMaps  = studySubj.getDnStudySubjectMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(studySubj.getOcOid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); DiscrepancyNoteBean dnSubjBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnStudySubjectMap dnMap:dnMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnMap.getDnStudySubjectMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); List<DnSubjectMap> dnSubjMaps = studySubj.getSubject().getDnSubjectMaps(); ArrayList<DiscrepancyNoteBean> dnSubjs = new ArrayList<DiscrepancyNoteBean>(); for(DnSubjectMap dnMap:dnSubjMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnSubjBean, dnSubjs, addDN, dn, dnMap.getDnSubjectMapId().getColumnName()); } for(DiscrepancyNoteBean dnSubjMap:dnSubjs) dnNotesBean.getDiscrepancyNotes().add(dnSubjMap); return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(StudyEvent studyEvent) { List<DnStudyEventMap> dnMaps  = studyEvent.getDnStudyEventMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(studyEvent.getStudyEventDefinition().getOc_oid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnStudyEventMap dnMap:dnMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnMap.getDnStudyEventMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); return dnNotesBean; } private void fillDNObject(DiscrepancyNoteBean dnNoteBean, ArrayList<DiscrepancyNoteBean> dnNotes, boolean addDN, DiscrepancyNote dn, String columnName) { if(dn.getParentDiscrepancyNote()!=null){ } else{ dnNoteBean = new DiscrepancyNoteBean(); dnNoteBean.setStatus(dn.getResolutionStatus().getName()); dnNoteBean.setNoteType(dn.getEntityType()); dnNoteBean.setOid(""DN_""+dn.getDiscrepancyNoteId()); dnNoteBean.setNoteType(dn.getDiscrepancyNoteType().getName()); dnNoteBean.setDateUpdated(dn.getDateCreated()); dnNoteBean.setEntityName(columnName); for(DiscrepancyNote childDN:dn.getChildDiscrepancyNotes()){ ChildNoteBean childNoteBean = new ChildNoteBean(); childNoteBean.setOid(""CDN_""+childDN.getDiscrepancyNoteId()); ElementRefBean userRef =  new ElementRefBean(); childNoteBean.setDescription(childDN.getDescription()); childNoteBean.setStatus(childDN.getResolutionStatus().getName()); childNoteBean.setDetailedNote(childDN.getDetailedNotes()); childNoteBean.setDateCreated(childDN.getDateCreated()); if(childDN.getUserAccountByOwnerId()!=null) { childNoteBean.setOwnerUserName(childDN.getUserAccountByOwnerId().getUserName()); childNoteBean.setOwnerFirstName(childDN.getUserAccountByOwnerId().getFirstName()); childNoteBean.setOwnerLastName(childDN.getUserAccountByOwnerId().getLastName()); } if(childDN.getUserAccount()!=null) { userRef.setElementDefOID(""USR_""+childDN.getUserAccount().getUserId()); userRef.setUserName(childDN.getUserAccount().getUserName()); userRef.setFullName(childDN.getUserAccount().getFirstName()+"" ""+childDN.getUserAccount().getLastName()); } else { userRef.setElementDefOID(""""); userRef.setUserName(""""); userRef.setFullName(""""); } childNoteBean.setUserRef(userRef); dnNoteBean.getChildNotes().add(childNoteBean); } dnNoteBean.setNumberOfChildNotes(dnNoteBean.getChildNotes().size()); if(!dnNotes.contains(dnNoteBean)) { dnNotes.add(dnNoteBean); } } } private AuditLogsBean fetchAuditLogs(int entityID, String itemDataAuditTable, String entityValue, String anotherAuditLog) { AuditLogsBean auditLogsBean = new AuditLogsBean(); if(isCollectAudits()){ AuditLogEvent auditLog = new AuditLogEvent(); auditLog.setEntityId(new Integer(entityID)); auditLog.setAuditTable(itemDataAuditTable); auditLogsBean.setEntityID(entityValue); ArrayList<AuditLogEvent> auditLogEvent = (getAuditEventDAO().findByParam(auditLog, anotherAuditLog)); auditLogsBean= fetchODMAuditBean(auditLogEvent,auditLogsBean); } return auditLogsBean; } private AuditLogsBean fetchODMAuditBean(ArrayList<AuditLogEvent> auditLogEvents,AuditLogsBean auditLogsBean ) { for(AuditLogEvent auditLogEvent:auditLogEvents){ AuditLogBean auditBean = new AuditLogBean(); auditBean.setOid(""AL_""+auditLogEvent.getAuditId()); auditBean.setDatetimeStamp(auditLogEvent.getAuditDate()); if(auditLogEvent.getEntityName()!=null && auditLogEvent.getEntityName().equals(STATUS)) { if(auditLogEvent.getAuditTable().equals(STUDY_EVENT)){ auditBean.setNewValue(fetchStudyEventStatus(Integer.valueOf(auditLogEvent.getNewValue()))); auditBean.setOldValue(fetchStudyEventStatus(Integer.valueOf(auditLogEvent.getOldValue()))); }else if (auditLogEvent.getAuditTable().equals(SUBJECT_GROUP_MAP)){ auditBean.setNewValue(auditLogEvent.getNewValue()); auditBean.setOldValue(auditLogEvent.getOldValue()); } else{ auditBean.setNewValue(Status.getByCode(Integer.valueOf(auditLogEvent.getNewValue())).getI18nDescription(getLocale())); auditBean.setOldValue(Status.getByCode(Integer.valueOf(auditLogEvent.getOldValue())).getI18nDescription(getLocale())); } } else{ auditBean.setNewValue(auditLogEvent.getNewValue()==null?"""":auditLogEvent.getNewValue()); auditBean.setOldValue(auditLogEvent.getOldValue()==null?"""":auditLogEvent.getOldValue()); } auditBean.setReasonForChange(auditLogEvent.getReasonForChange()==null?"""":auditLogEvent.getReasonForChange()); String auditEventTypeName = auditLogEvent.getAuditLogEventType().getName(); auditEventTypeName = auditEventTypeName.replace(' ', '_'); auditEventTypeName =  auditEventTypeName.substring(0, 1).toLowerCase() + auditEventTypeName.substring(1); auditLogEvent.getAuditLogEventType().setName(auditEventTypeName); auditBean.setType(auditLogEvent.getAuditLogEventType().getI18nName(locale)); auditBean.setValueType(auditLogEvent.getEntityName()==null?"""":auditLogEvent.getEntityName()); if(auditLogEvent.getUserAccount()!=null && auditLogEvent.getUserAccount().getUserId()!=0) { auditBean.setUserId(""USR_""+auditLogEvent.getUserAccount().getUserId()); auditBean.setUserName(auditLogEvent.getUserAccount().getUserName()); auditBean.setName(auditLogEvent.getUserAccount().getFirstName()+"" ""+auditLogEvent.getUserAccount().getLastName()); } else { auditBean.setUserId(""""); auditBean.setUserName(""""); auditBean.setName(""""); } auditLogsBean.getAuditLogs().add(auditBean); } return auditLogsBean; } private String fetchStudyEventStatus(Integer valueOf) { return SubjectEventStatus.getByCode(valueOf).getI18nDescription(getLocale()); } @Override public LinkedHashMap<String, OdmClinicalDataBean> getClinicalData(String studyOID, String studySubjectOID, String studyEventOID, String formVersionOID,Boolean collectDNs,Boolean collectAudit, Locale locale, int userId) { setLocale(locale); setCollectDns(collectDNs); setCollectAudits(collectAudit); LinkedHashMap<String,OdmClinicalDataBean> clinicalDataHash = new LinkedHashMap<String, OdmClinicalDataBean>(); UserAccount userAccount = getUserAccountDao().findByColumnName(userId,""userId""); LOGGER.debug(""Entering the URL with ""+studyOID+"":""+studySubjectOID+"":""+studyEventOID+"":""+formVersionOID+"":DNS:""+collectDNs+"":Audits:""+collectAudit); LOGGER.info(""Determining the generic paramters...""); Study study = getStudyDao().findByOcOID(studyOID); if (study.getStudy()!=null){ isActiveRoleAtSite=true; }else{ isActiveRoleAtSite=false; } if(!studySubjectOID.equals(INDICATE_ALL)) { StudySubjectDao ssdao =getStudySubjectDao(); StudySubject ss = (StudySubject) getStudySubjectDao().findByColumnName( studySubjectOID, ""ocOid""); studyOID = ss.getStudy().getOc_oid(); } if(studyEventOID.equals(INDICATE_ALL) && formVersionOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL)) { LOGGER.info(""Adding all the study events,formevents as it is a *""); LOGGER.info(""study subject is not all and so is study""); clinicalDataHash.put(studyOID,  getClinicalData(studyOID, studySubjectOID)); return clinicalDataHash; } else 	if(studyEventOID.equals(INDICATE_ALL) && formVersionOID.equals(INDICATE_ALL)&& studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL)) { LOGGER.info(""At the study level.. study event,study subject and forms are *""); return getClinicalData(studyOID); } else if(!studyEventOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL) &&  formVersionOID.equals(INDICATE_ALL)) { LOGGER.info(""Obtaining the form version specific""); clinicalDataHash.put(studyOID, getClinicalDatas(studyOID,studySubjectOID,studyEventOID,null)); return clinicalDataHash; } else if(!studyEventOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL) &&  !formVersionOID.equals(INDICATE_ALL)) { clinicalDataHash.put(studyOID, getClinicalDatas(studyOID,studySubjectOID,studyEventOID,formVersionOID)); return clinicalDataHash; } return null; } private void setLocale(Locale locale) { this.locale=locale; } private Locale getLocale(){ return locale; } private OdmClinicalDataBean getClinicalDatas(String studyOID, String studySubjectOID, String studyEventOID,String formVersionOID) { int seOrdinal = 0; String temp = studyEventOID; List<StudyEvent>studyEvents = new ArrayList<StudyEvent>(); StudyEventDefinition sed = null ; Study study = getStudyDao().findByColumnName(studyOID, ""oc_oid""); List<StudySubject> ss = listStudySubjects(studySubjectOID); int idx = studyEventOID.indexOf(OPEN_ORDINAL_DELIMITER); LOGGER.info(""study event oridinal is..""+idx); if(idx>0) { studyEventOID=  studyEventOID.substring(0,idx); seOrdinal = new Integer(temp.substring(idx+1, temp.indexOf(CLOSE_ORDINAL_DELIMITER))).intValue(); } sed = getStudyEventDefDao().findByColumnName(studyEventOID, ""oc_oid""); LOGGER.info(""study event ordinal..""+seOrdinal); if(seOrdinal>0) { studyEvents = fetchSE(seOrdinal,sed.getStudyEvents(),studySubjectOID); } else { studyEvents = fetchSE(sed.getStudyEvents(),studySubjectOID); } return constructClinicalDataStudy(ss,study,studyEvents,formVersionOID)		; } private List<StudyEvent>  fetchSE(int seOrdinal, List<StudyEvent> studyEvents,String ssOID) { List<StudyEvent> sEs = new ArrayList<StudyEvent>(); LOGGER.debug(""fetching all the study events""); for(StudyEvent se:studyEvents){ if(se.getSampleOrdinal()==seOrdinal &&se.getStudySubject().getOcOid().equals(ssOID)) { sEs.add(se); } } return sEs; } private List<StudyEvent>  fetchSE( List<StudyEvent> studyEvents,String ssOID) { List<StudyEvent> sEs = new ArrayList<StudyEvent>(); for(StudyEvent se:studyEvents){ if(se.getStudySubject().getOcOid().equals(ssOID)) { sEs.add(se); } } return sEs; } public UserAccountDao getUserAccountDao() { return userAccountDao; } public void setUserAccountDao(UserAccountDao userAccountDao) { this.userAccountDao = userAccountDao; } }","private List<CrfBean> listOfHiddenCrfs(Integer siteId,Integer parentStudyId,List<EventDefinitionCrf> seds) { List<CrfBean> hiddenCrfs = new ArrayList<CrfBean>(); LOGGER.info(""The study subject is at the site/study""+siteId); for(EventDefinitionCrf eventDefCrf:seds){ if(eventDefCrf.getHideCrf()&&(eventDefCrf.getStudy().getStudyId() == siteId || eventDefCrf.getParentId()==siteId ||parentStudyId==eventDefCrf.getStudy().getStudyId() ||parentStudyId ==  eventDefCrf.getParentId())) { hiddenCrfs.add(eventDefCrf.getCrf()); } } return hiddenCrfs; } private String fetchEventCRFStatus(EventCrf ecrf) { String stage = null; Status status = Status.getByCode(ecrf.getStatusId()); if (ecrf.getEventCrfId()<=0 || status.getCode()<=0) { stage =EventCRFStatus.UNCOMPLETED.getI18nDescription(getLocale()); } if (status.equals(Status.AVAILABLE)) { stage = EventCRFStatus.INITIAL_DATA_ENTRY.getI18nDescription(getLocale()); } if (status.equals(Status.PENDING)) { if (ecrf.getValidatorId()!= 0) { stage = EventCRFStatus.DOUBLE_DATA_ENTRY.getI18nDescription(getLocale()); } else { stage = EventCRFStatus.INITIAL_DATA_ENTRY_COMPLETE.getI18nDescription(getLocale()); } } if (status.equals(Status.UNAVAILABLE)) { stage = EventCRFStatus.DOUBLE_DATA_ENTRY_COMPLETE.getI18nDescription(getLocale()); } if (status.equals(Status.LOCKED)) { stage = EventCRFStatus.LOCKED.getI18nDescription(getLocale()); } if (status.equals(Status.DELETED)) { stage = EventCRFStatus.INVALID.getI18nDescription(getLocale()); } if (status.equals(Status.AUTO_DELETED)) { stage = EventCRFStatus.INVALID.getI18nDescription(getLocale()); } return stage; } private ArrayList<ImportItemGroupDataBean> fetchItemData( Set<ItemGroupMetadata> set, int eventCrfId, List<VersioningMap> vms, EventCrf eventCrf) { String groupOID, itemOID; String itemValue = null; String itemDataValue; HashMap<String, ArrayList<String>> oidMap = new HashMap<String, ArrayList<String>>(); HashMap<String, List<ItemData>> oidDNAuditMap = new HashMap<String, List<ItemData>>(); List<ItemData> itds =  eventCrf.getItemDatas(); for (ItemData itemData : itds) { List<ItemGroupMetadata> igmetadatas = itemData.getItem().getItemGroupMetadatas(); for (ItemGroupMetadata igGrpMetadata : igmetadatas) { groupOID = igGrpMetadata.getItemGroup().getOcOid(); if (!oidMap.containsKey(groupOID)) { String groupOIDOrdnl = groupOID; ArrayList<String> itemsValues = new ArrayList<String>(); ArrayList<ItemData> itemDatas = new ArrayList<ItemData>(); List<ItemGroupMetadata> allItemsInAGroup = igGrpMetadata .getItemGroup().getItemGroupMetadatas(); for (ItemGroupMetadata itemGrpMetada : allItemsInAGroup) { itemOID = itemGrpMetada.getItem().getOcOid(); itemsValues = new ArrayList<String>(); itemsValues = new ArrayList<String>(); itemDataValue = fetchItemDataValue(itemData, itemData.getItem()); itemDatas =  new ArrayList<ItemData>(); itemValue = itemOID + DELIMITER + itemDataValue; itemsValues.add(itemValue); groupOIDOrdnl = groupOID + GROUPOID_ORDINAL_DELIM + itemData.getOrdinal(); if (itemData.getItem().getOcOid() == itemOID) { if (oidMap.containsKey(groupOIDOrdnl)) { ArrayList<String> itemgrps = oidMap .get(groupOIDOrdnl); List<ItemData>itemDataTemps = oidDNAuditMap.get(groupOIDOrdnl); if (!itemgrps.contains(itemValue)) { itemgrps.add(itemValue); oidMap.remove(groupOIDOrdnl); itemDataTemps.add(itemData); oidDNAuditMap.remove(groupOIDOrdnl); } oidMap.put(groupOIDOrdnl, itemgrps); oidDNAuditMap.put(groupOIDOrdnl, itemDataTemps); } else { oidMap.put(groupOIDOrdnl, itemsValues); itemDatas.add(itemData); oidDNAuditMap.put(groupOIDOrdnl, itemDatas); } } } } } } return populateImportItemGrpBean(oidMap,oidDNAuditMap); } private String fetchItemDataValue(ItemData itemData, Item item) { String idValue = itemData.getValue(); return idValue; } private ArrayList<ImportItemGroupDataBean> populateImportItemGrpBean( HashMap<String, ArrayList<String>> oidMap, HashMap<String, List<ItemData>> oidDNAuditMap) { Set<String> keysGrpOIDs = oidMap.keySet(); ArrayList<ImportItemGroupDataBean> iigDataBean = new ArrayList<ImportItemGroupDataBean>(); ImportItemGroupDataBean importItemGrpDataBean = new ImportItemGroupDataBean(); for (String grpOID : keysGrpOIDs) { ArrayList<String> vals = oidMap.get(grpOID); importItemGrpDataBean = new ImportItemGroupDataBean(); int groupIdx = grpOID.indexOf(GROUPOID_ORDINAL_DELIM); if (groupIdx != -1) { importItemGrpDataBean.setItemGroupOID(grpOID.substring(0, groupIdx)); importItemGrpDataBean.setItemGroupRepeatKey(grpOID.substring( groupIdx + 1, grpOID.length())); ArrayList<ImportItemDataBean> iiDList = new ArrayList<ImportItemDataBean>(); for (String value : vals) { ImportItemDataBean iiDataBean = new ImportItemDataBean(); int index = value.indexOf(DELIMITER); if (!value.trim().equalsIgnoreCase(DELIMITER)) { iiDataBean.setItemOID(value.substring(0, index)); iiDataBean.setValue(value.substring(index + 1, value.length())); if(isCollectAudits()||isCollectDns()){ iiDataBean = fetchItemDataAuditValue(oidDNAuditMap.get(grpOID),iiDataBean); } iiDList.add(iiDataBean); } } importItemGrpDataBean.setItemData(iiDList); iigDataBean.add(importItemGrpDataBean); } } return iigDataBean; } private ImportItemDataBean fetchItemDataAuditValue(List<ItemData> list, ImportItemDataBean iiDataBean) { for(ItemData id:list){ if(id.getItem().getOcOid().equals(iiDataBean.getItemOID())){ if(isCollectAudits()) iiDataBean.setAuditLogs(fetchAuditLogs(id.getItemDataId(),""item_data"", iiDataBean.getItemOID(), null)); if(isCollectDns()) iiDataBean.setDiscrepancyNotes(fetchDiscrepancyNotes(id)); return iiDataBean; } } return iiDataBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(ItemData itemData) { List<DnItemDataMap> dnItemDataMaps  = itemData.getDnItemDataMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(itemData.getItem().getOcOid()); if(isCollectDns()) { DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnItemDataMap dnItemDataMap:dnItemDataMaps){ DiscrepancyNote dn =  dnItemDataMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, null); } dnNotesBean.setDiscrepancyNotes(dnNotes); } return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(EventCrf eventCrf) { LOGGER.info(""Fetching the discrepancy notes..""); List<DnEventCrfMap> dnEventCrfMaps  = eventCrf.getDnEventCrfMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(eventCrf.getCrfVersion().getOcOid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnEventCrfMap dnItemDataMap:dnEventCrfMaps){ DiscrepancyNote dn =  dnItemDataMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnItemDataMap.getDnEventCrfMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(StudySubject studySubj) { List<DnStudySubjectMap> dnMaps  = studySubj.getDnStudySubjectMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(studySubj.getOcOid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); DiscrepancyNoteBean dnSubjBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnStudySubjectMap dnMap:dnMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnMap.getDnStudySubjectMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); List<DnSubjectMap> dnSubjMaps = studySubj.getSubject().getDnSubjectMaps(); ArrayList<DiscrepancyNoteBean> dnSubjs = new ArrayList<DiscrepancyNoteBean>(); for(DnSubjectMap dnMap:dnSubjMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnSubjBean, dnSubjs, addDN, dn, dnMap.getDnSubjectMapId().getColumnName()); } for(DiscrepancyNoteBean dnSubjMap:dnSubjs) dnNotesBean.getDiscrepancyNotes().add(dnSubjMap); return dnNotesBean; } private DiscrepancyNotesBean fetchDiscrepancyNotes(StudyEvent studyEvent) { List<DnStudyEventMap> dnMaps  = studyEvent.getDnStudyEventMaps(); DiscrepancyNotesBean dnNotesBean = new DiscrepancyNotesBean()	; dnNotesBean.setEntityID(studyEvent.getStudyEventDefinition().getOc_oid()); DiscrepancyNoteBean dnNoteBean = new DiscrepancyNoteBean(); ArrayList<DiscrepancyNoteBean> dnNotes = new ArrayList<DiscrepancyNoteBean>(); boolean addDN = true; for(DnStudyEventMap dnMap:dnMaps){ DiscrepancyNote dn =  dnMap.getDiscrepancyNote(); addDN=true; fillDNObject(dnNoteBean, dnNotes, addDN, dn, dnMap.getDnStudyEventMapId().getColumnName()); } dnNotesBean.setDiscrepancyNotes(dnNotes); return dnNotesBean; } private void fillDNObject(DiscrepancyNoteBean dnNoteBean, ArrayList<DiscrepancyNoteBean> dnNotes, boolean addDN, DiscrepancyNote dn, String columnName) { if(dn.getParentDiscrepancyNote()!=null){ } else{ dnNoteBean = new DiscrepancyNoteBean(); dnNoteBean.setStatus(dn.getResolutionStatus().getName()); dnNoteBean.setNoteType(dn.getEntityType()); dnNoteBean.setOid(""DN_""+dn.getDiscrepancyNoteId()); dnNoteBean.setNoteType(dn.getDiscrepancyNoteType().getName()); dnNoteBean.setDateUpdated(dn.getDateCreated()); dnNoteBean.setEntityName(columnName); for(DiscrepancyNote childDN:dn.getChildDiscrepancyNotes()){ ChildNoteBean childNoteBean = new ChildNoteBean(); childNoteBean.setOid(""CDN_""+childDN.getDiscrepancyNoteId()); ElementRefBean userRef =  new ElementRefBean(); childNoteBean.setDescription(childDN.getDescription()); childNoteBean.setStatus(childDN.getResolutionStatus().getName()); childNoteBean.setDetailedNote(childDN.getDetailedNotes()); childNoteBean.setDateCreated(childDN.getDateCreated()); if(childDN.getUserAccountByOwnerId()!=null) { childNoteBean.setOwnerUserName(childDN.getUserAccountByOwnerId().getUserName()); childNoteBean.setOwnerFirstName(childDN.getUserAccountByOwnerId().getFirstName()); childNoteBean.setOwnerLastName(childDN.getUserAccountByOwnerId().getLastName()); } if(childDN.getUserAccount()!=null) { userRef.setElementDefOID(""USR_""+childDN.getUserAccount().getUserId()); userRef.setUserName(childDN.getUserAccount().getUserName()); userRef.setFullName(childDN.getUserAccount().getFirstName()+"" ""+childDN.getUserAccount().getLastName()); } else { userRef.setElementDefOID(""""); userRef.setUserName(""""); userRef.setFullName(""""); } childNoteBean.setUserRef(userRef); dnNoteBean.getChildNotes().add(childNoteBean); } dnNoteBean.setNumberOfChildNotes(dnNoteBean.getChildNotes().size()); if(!dnNotes.contains(dnNoteBean)) { dnNotes.add(dnNoteBean); } } } private AuditLogsBean fetchAuditLogs(int entityID, String itemDataAuditTable, String entityValue, String anotherAuditLog) { AuditLogsBean auditLogsBean = new AuditLogsBean(); if(isCollectAudits()){ AuditLogEvent auditLog = new AuditLogEvent(); auditLog.setEntityId(new Integer(entityID)); auditLog.setAuditTable(itemDataAuditTable); auditLogsBean.setEntityID(entityValue); ArrayList<AuditLogEvent> auditLogEvent = (getAuditEventDAO().findByParam(auditLog, anotherAuditLog)); auditLogsBean= fetchODMAuditBean(auditLogEvent,auditLogsBean); } return auditLogsBean; } private AuditLogsBean fetchODMAuditBean(ArrayList<AuditLogEvent> auditLogEvents,AuditLogsBean auditLogsBean ) { for(AuditLogEvent auditLogEvent:auditLogEvents){ AuditLogBean auditBean = new AuditLogBean(); auditBean.setOid(""AL_""+auditLogEvent.getAuditId()); auditBean.setDatetimeStamp(auditLogEvent.getAuditDate()); if(auditLogEvent.getEntityName()!=null && auditLogEvent.getEntityName().equals(STATUS)) { if(auditLogEvent.getAuditTable().equals(STUDY_EVENT)){ auditBean.setNewValue(fetchStudyEventStatus(Integer.valueOf(auditLogEvent.getNewValue()))); auditBean.setOldValue(fetchStudyEventStatus(Integer.valueOf(auditLogEvent.getOldValue()))); }else if (auditLogEvent.getAuditTable().equals(SUBJECT_GROUP_MAP)){ auditBean.setNewValue(auditLogEvent.getNewValue()); auditBean.setOldValue(auditLogEvent.getOldValue()); } else{ auditBean.setNewValue(Status.getByCode(Integer.valueOf(auditLogEvent.getNewValue())).getI18nDescription(getLocale())); auditBean.setOldValue(Status.getByCode(Integer.valueOf(auditLogEvent.getOldValue())).getI18nDescription(getLocale())); } } else{ auditBean.setNewValue(auditLogEvent.getNewValue()==null?"""":auditLogEvent.getNewValue()); auditBean.setOldValue(auditLogEvent.getOldValue()==null?"""":auditLogEvent.getOldValue()); } auditBean.setReasonForChange(auditLogEvent.getReasonForChange()==null?"""":auditLogEvent.getReasonForChange()); String auditEventTypeName = auditLogEvent.getAuditLogEventType().getName(); auditEventTypeName = auditEventTypeName.replace(' ', '_'); auditEventTypeName =  auditEventTypeName.substring(0, 1).toLowerCase() + auditEventTypeName.substring(1); auditLogEvent.getAuditLogEventType().setName(auditEventTypeName); auditBean.setType(auditLogEvent.getAuditLogEventType().getI18nName(locale)); auditBean.setValueType(auditLogEvent.getEntityName()==null?"""":auditLogEvent.getEntityName()); if(auditLogEvent.getUserAccount()!=null && auditLogEvent.getUserAccount().getUserId()!=0) { auditBean.setUserId(""USR_""+auditLogEvent.getUserAccount().getUserId()); auditBean.setUserName(auditLogEvent.getUserAccount().getUserName()); auditBean.setName(auditLogEvent.getUserAccount().getFirstName()+"" ""+auditLogEvent.getUserAccount().getLastName()); } else { auditBean.setUserId(""""); auditBean.setUserName(""""); auditBean.setName(""""); } auditLogsBean.getAuditLogs().add(auditBean); } return auditLogsBean; } private String fetchStudyEventStatus(Integer valueOf) { return SubjectEventStatus.getByCode(valueOf).getI18nDescription(getLocale()); } @Override public LinkedHashMap<String, OdmClinicalDataBean> getClinicalData(String studyOID, String studySubjectOID, String studyEventOID, String formVersionOID,Boolean collectDNs,Boolean collectAudit, Locale locale, int userId) { setLocale(locale); setCollectDns(collectDNs); setCollectAudits(collectAudit); LinkedHashMap<String,OdmClinicalDataBean> clinicalDataHash = new LinkedHashMap<String, OdmClinicalDataBean>(); UserAccount userAccount = getUserAccountDao().findByColumnName(userId,""userId""); LOGGER.debug(""Entering the URL with ""+studyOID+"":""+studySubjectOID+"":""+studyEventOID+"":""+formVersionOID+"":DNS:""+collectDNs+"":Audits:""+collectAudit); LOGGER.info(""Determining the generic paramters...""); if(userAccount.getActiveStudy().getStudy()!=null){ isActiveRoleAtSite=true; } else{ isActiveRoleAtSite=false; } if(!studySubjectOID.equals(INDICATE_ALL)) { StudySubjectDao ssdao =getStudySubjectDao(); StudySubject ss = (StudySubject) getStudySubjectDao().findByColumnName( studySubjectOID, ""ocOid""); studyOID = ss.getStudy().getOc_oid(); } if(studyEventOID.equals(INDICATE_ALL) && formVersionOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL)) { LOGGER.info(""Adding all the study events,formevents as it is a *""); LOGGER.info(""study subject is not all and so is study""); clinicalDataHash.put(studyOID,  getClinicalData(studyOID, studySubjectOID)); return clinicalDataHash; } else 	if(studyEventOID.equals(INDICATE_ALL) && formVersionOID.equals(INDICATE_ALL)&& studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL)) { LOGGER.info(""At the study level.. study event,study subject and forms are *""); return getClinicalData(studyOID); } else if(!studyEventOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL) &&  formVersionOID.equals(INDICATE_ALL)) { LOGGER.info(""Obtaining the form version specific""); clinicalDataHash.put(studyOID, getClinicalDatas(studyOID,studySubjectOID,studyEventOID,null)); return clinicalDataHash; } else if(!studyEventOID.equals(INDICATE_ALL)&&!studySubjectOID.equals(INDICATE_ALL) && !studyOID.equals(INDICATE_ALL) &&  !formVersionOID.equals(INDICATE_ALL)) { clinicalDataHash.put(studyOID, getClinicalDatas(studyOID,studySubjectOID,studyEventOID,formVersionOID)); return clinicalDataHash; } return null; } private void setLocale(Locale locale) { this.locale=locale; } private Locale getLocale(){ return locale; } private OdmClinicalDataBean getClinicalDatas(String studyOID, String studySubjectOID, String studyEventOID,String formVersionOID) { int seOrdinal = 0; String temp = studyEventOID; List<StudyEvent>studyEvents = new ArrayList<StudyEvent>(); StudyEventDefinition sed = null ; Study study = getStudyDao().findByColumnName(studyOID, ""oc_oid""); List<StudySubject> ss = listStudySubjects(studySubjectOID); int idx = studyEventOID.indexOf(OPEN_ORDINAL_DELIMITER); LOGGER.info(""study event oridinal is..""+idx); if(idx>0) { studyEventOID=  studyEventOID.substring(0,idx); seOrdinal = new Integer(temp.substring(idx+1, temp.indexOf(CLOSE_ORDINAL_DELIMITER))).intValue(); } sed = getStudyEventDefDao().findByColumnName(studyEventOID, ""oc_oid""); LOGGER.info(""study event ordinal..""+seOrdinal); if(seOrdinal>0) { studyEvents = fetchSE(seOrdinal,sed.getStudyEvents(),studySubjectOID); } else { studyEvents = fetchSE(sed.getStudyEvents(),studySubjectOID); } return constructClinicalDataStudy(ss,study,studyEvents,formVersionOID)		; } private List<StudyEvent>  fetchSE(int seOrdinal, List<StudyEvent> studyEvents,String ssOID) { List<StudyEvent> sEs = new ArrayList<StudyEvent>(); LOGGER.debug(""fetching all the study events""); for(StudyEvent se:studyEvents){ if(se.getSampleOrdinal()==seOrdinal &&se.getStudySubject().getOcOid().equals(ssOID)) { sEs.add(se); } } return sEs; } private List<StudyEvent>  fetchSE( List<StudyEvent> studyEvents,String ssOID) { List<StudyEvent> sEs = new ArrayList<StudyEvent>(); for(StudyEvent se:studyEvents){ if(se.getStudySubject().getOcOid().equals(ssOID)) { sEs.add(se); } } return sEs; } public UserAccountDao getUserAccountDao() { return userAccountDao; } public void setUserAccountDao(UserAccountDao userAccountDao) { this.userAccountDao = userAccountDao; } }ename Parameter
streamline `GroovyStarter` -> `Groovysh` -> user's script,private static void exit(String text) { System.err.println(text);,private static void exit(String msg) { System.err.println(msg);,KEEP KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Make the Javadoc JSON output directory configurable,"RobolectricModel model, ProcessingEnvironment environment, File jsonDocsDir) {","public JavadocJsonGenerator(RobolectricModel model, ProcessingEnvironment environment) {",REP DEL KEEP KEEP ADD ADD REP KEEP,Add Parameter
network search implementation (in progress),protected NetworkTree getTreeByKey(FBTree.Key key) {,protected FBTree getTreeByKey(FBTree.Key key) {,KEEP REP KEEP KEEP KEEP,Change Return Type
mmmm generified listview,public final Iterator<Component> iterator(),public final Iterator iterator(),KEEP KEEP REP KEEP,Change Return Type
BoxingDeclarationVisitor: set the raw bit on Parameters: #687,"private void boxAndRawParameterLists(List<ParameterList> paramLists, List<ParameterList> refinedParamLists) {","private void boxParameterLists(List<ParameterList> paramLists, List<ParameterList> refinedParamLists) {",KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Method
#5159: PanelGrid: new layout(-mode) "flex" (#5168),"public void encodeGridLayout(FacesContext context, PanelGrid grid, String layout) throws IOException {","public void encodeGridLayout(FacesContext context, PanelGrid grid) throws IOException {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
minor refactor: formatting and tidy up,"public Map<String, String> getSignatures() {",public Map getSignatures() {,KEEP ADD REP KEEP KEEP,Change Return Type
removed old debugger code from SymbolicRewriter,"private RewriteRelation conventionalRewriteRun(ConstrainedTerm constrainedTerm, int bound) {","private RewriteRelation conventionalRewriteRun(ConstrainedTerm constrainedTerm, int bound, boolean computeGraph) {",KEEP KEEP KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
Improve comments in Case class,public static String displayNameToCaseName(String caseDisplayName) throws IllegalCaseNameException {,public static String displayNameToCaseName(String displayName) throws IllegalCaseNameException {,KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Make adding interesting files faster.,"private Map<String, List<Long>> addExtractedFiles(File src, Path resultsPath, List<Content> newDataSources) throws TskCoreException, IOException {","private void addExtractedFiles(File src, Path resultsPath, List<Content> newDataSources) throws TskCoreException, IOException {",KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Add Resolved Tree,static @Nullable LithoNode resolve(,static @Nullable LithoNode render(,KEEP KEEP KEEP REP,Rename Method
fix(1325): Update support for Google Custom Search.,public void setKey(String key) { this.key = key; },public void setResultSize(String resultSize) { this.resultSize = resultSize;,KEEP KEEP REP REP KEEP REP KEEP ADD REP,Rename Parameter
extend AbstractDefaultAjaxBehavior to prevent duplicate contribution of wicket-ajax.js,protected void respond(AjaxRequestTarget target){,public final void onRequest() {,REP DEL KEEP REP REP,Add Parameter
Finished implementation of false-positive heuristics as bug,"private void countLocalStoresLoadsAndIncrements(int[] localStoreCount, int[] localLoadCount, int[] localIncrementCount, CFG cfg) {","private void countLocalStoresLoadsAndIncrements(int[] localUpdateCount, int[] localLoadCount, int[] localIncrementCount, CFG cfg) {",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Fix insertAsync when elements are removed before initial render,private void startAsyncLayout(ComponentTreeHolder holder) {,private void startAsyncLayout(AsyncInsertOperation operation) { final ComponentTreeHolder holder = operation.mHolder;,KEEP KEEP REP REP KEEP DEL DEL DEL DEL DEL,Rename Parameter
loader code updated to be android-independent,public ItemsLoader(NetworkCatalogTree tree) {,"public ItemsLoader(Activity activity, NetworkCatalogTree tree) {",KEEP REP DEL DEL KEEP KEEP,Remove Parameter
"UP-2429 Improving portlet preferences handling in new portlet administration portlet.  Commit includes updating the channel publishing document DTD to contain a separate element for portlet preferences, as well as modifying the portlet itself.","public Map<String, StringListAttribute> getPortletPreferences() {","public Map<String, List<Attribute>> getPortletPreferences() {",KEEP KEEP REP KEEP KEEP,Change Return Type
If there exists a lock which is held in all instructions in,"public void reportMatch(ClassContext classContext, Method method, ByteCodePatternMatch match) throws CFGBuilderException, DataflowAnalysisException { JavaClass javaClass = classContext.getJavaClass(); MethodGen methodGen = classContext.getMethodGen(method);","public void reportMatch(JavaClass javaClass, MethodGen methodGen, ByteCodePatternMatch match) { BindingSet bindingSet = match.getBindingSet(); Binding binding = bindingSet.lookup(""f"");",KEEP KEEP REP REP REP REP KEEP KEEP ADD ADD ADD KEEP REP REP KEEP REP REP REP KEEP REP,Add Parameter
Replace landing page with automatic redirect to first collection,public Response getLanding() throws Exception {,public LandingView getLandingView() throws Exception {,KEEP REP REP KEEP KEEP KEEP,Change Return Type
Fix getPatterns(),public static List getPatterns(),public static Set getPatterns(),KEEP KEEP REP KEEP,Change Return Type
BundleEditor: Adjusted storing of property files,"private SortedProperties getLocalization(Locale locale) throws IOException, CmsException {","private Properties getLocalization(Locale locale) throws IOException, CmsException {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Strengthen return stamp during inlining.,"private static void fixFrameStates(StructuredGraph graph, MergeNode originalMerge, ValueNode mergeValue, ValueNode replacementValue) {","private static void fixFrameStates(StructuredGraph graph, MergeNode originalMerge, PhiNode returnPhi) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP REP KEEP,Add Parameter
javadoc + removed unused method,"private final Markup loadMarkup(final String key, final IResourceStream markupResourceStream)","private Markup loadMarkup(final String key, final IResourceStream markupResource)",KEEP ADD KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
"Added support for copy in the calllog, contact and message viewer","static JTextPane addValue(JPanel panel, GridBagLayout gridbagLayout, GridBagConstraints constraints, String valueString) {","static JLabel addValue(JPanel panel, GridBagLayout gridbagLayout, GridBagConstraints constraints, String valueString) {",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Feat adds content and header properties to CodegenResponse (#11046),"protected LinkedHashMap<String, CodegenMediaType> getContent(Content content, Set<String> imports, String mediaTypeSchemaSuffix) {","protected LinkedHashMap<String, CodegenMediaType> getContent(Content content, Set<String> imports) {",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"MID-8183 fixed, request access wizard now takes into account getAssignableRolesFilter (e.g. requestable=true for end user role)",private List<QName> getAssignableRelationList(PageBase page) { PrismObject<UserType> focus = resolveFirstPoiReference(page); if (focus == null) {,"private List<QName> getAssignableRelationList(PageBase page, ObjectReferenceType ref) { if (ref == null) { return new ArrayList<>();",KEEP KEEP KEEP ADD ADD REP REP REP REP KEEP REP KEEP KEEP KEEP DEL DEL DEL,Remove Parameter
Allow to run patches one by one,"Command getInstallCommand(Version versionToInstall, Path pathToBinaries, InstallOptions installOptions) throws IOException;","Command getInstallCommand(@Nullable Version version, Path pathToBinaries, InstallOptions installOptions) throws IOException;",KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
Added support for module-based ceylon command plugins.,"private void listScripts(File dir, String location, List<String> scripts) throws IOException {","private void listScripts(File dir, List<String> scripts) throws IOException {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
Fixed cast pipelines of builtins 'remove' till 'strtrim'.,"protected Object saveToConn(VirtualFrame frame, RAbstractStringVector list, int con, boolean ascii, @SuppressWarnings(""unused"") RNull version, REnvironment envir, boolean evalPromises,","protected Object saveToConn(VirtualFrame frame, RAbstractStringVector list, int con, byte asciiLogical, @SuppressWarnings(""unused"") RNull version, REnvironment envir, boolean evalPromises,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Parameter
create SHARED_PARENT_RW contexts in the same Engine,"protected String fastREval(String input, ContextKind contextKind, boolean longTimeout) { assert contextKind != null;","protected String fastREval(String input, ChildContextInfo contextInfo, boolean longTimeout) {",KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP ADD ADD ADD ADD,Rename Parameter
YARN-3583. Support of NodeLabel object instead of plain String in YarnClient side. (Sunil G via wangda),"public Map<NodeId, Set<NodeLabel>> getNodeToLabels() throws YarnException,","public Map<NodeId, Set<String>> getNodeToLabels() throws YarnException,",KEEP KEEP REP KEEP KEEP KEEP,Change Return Type
Refactor #5482,private Set<MVSKey> getMVSKeys() { return getMVSSessionMap(false).keySet();,"private Map<MVSKey, Object> getMVSSessionMap() { return getMVSSessionMap(false);",KEEP REP REP DEL KEEP KEEP REP,Change Return Type
do not report NP warnings inside explicit try-catch NPE blocks,"boolean inIndirectCatchNullBlock(Location loc) { int pc = loc.getHandle().getPosition(); int catchSize = Util.getSizeOfSurroundingTryBlock(classContext.getJavaClass().getConstantPool(), method.getCode(),",boolean inCatchNullBlock(Location loc) {,KEEP REP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Method
Converted ConstantThroughputTimer into a TestBean. Woohoo!,public double getThroughput(),public long getThroughput(),KEEP REP KEEP,Change Return Type
Hunspell: support capitalization for German 閼?(#2260),"private boolean checkWord(char[] wordChars, int length, WordCase originalCase) {","private boolean checkWord(char[] wordChars, int length, boolean caseVariant) {",KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Fix stack overflow error,"private boolean isAssignment(Node node, ASTStatementExpression statement) { return statement != null && statement.getNumChildren() >= 3 && node == statement.getChild(0).getFirstDescendantOfType(ASTName.class)",private boolean isAssignment(ASTStatementExpression statement) { return statement != null && statement.getNumChildren() >= 3,KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD,Add Parameter
WICKET-5759 AjaxRequestAttributes extra parameters aren't properly handled in getCallbackFunction(),public AbstractDefaultAjaxBehavior getBehavior1() { return behavior1;,public AbstractDefaultAjaxBehavior getBehavior(),KEEP KEEP ADD ADD ADD REP,Rename Method
"Replaced imprecise comparisons of floating-point data values based on the methods in the Utils class with precise comparisons based on the Java default comparators. Results for J48, PART, LMT, NBTree, etc., may change very slightly on some datasets.",public void setInvert(boolean invert) { m_Range.setInvert(invert);,public void setInvert(boolean value) { m_Range.setInvert(value);,KEEP KEEP KEEP REP KEEP REP,Rename Parameter
Minor variable renaming for better readability.,"ImmutableList<TopLevelAspectsKey> topLevelAspectsKeys,","ImmutableList<TopLevelAspectsKey> topLevelAspectsKey,",KEEP REP,Rename Parameter
"EUCA-8985, fixes provider configuration so that cloud restart is unneccessary, also adds pooling for client connections to the upstream object storage",protected OsgInternalS3Client getS3Client(User requestUser) throws InternalErrorException {,"protected AmazonS3Client getS3Client(User requestUser) throws InternalErrorException { if (osgInternalS3Client == null) { synchronized(this) { Protocol protocol = null; boolean useHttps = false; if(S3ProviderConfiguration.getS3UseHttps() != null && S3ProviderConfiguration.getS3UseHttps()) { useHttps = true; } AWSCredentials credentials; try { credentials = mapCredentials(requestUser); } catch(Exception e) { LOG.error(""Error mapping credentials for user "" + (requestUser != null ? requestUser.getUserId() : ""null"") + "" for walrus backend call."", e); InternalErrorException ex = new InternalErrorException(""Cannot construct s3client due to inability to map credentials for user: "" +  (requestUser != null ? requestUser.getUserId() : ""null"")); ex.initCause(e); throw ex; }",KEEP REP KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Change Return Type
Sort streams case-insensitive in API. (#14262),"public StreamsIT(RequestSpecification requestSpec, GraylogApis api) {",public StreamsIT(RequestSpecification requestSpec) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix for #1735: do not consider underlying types for things we just unboxed,"BoxingStrategy boxingStrategy, boolean exprBoxed, int flags) {","private JCExpression applyJavaTypeConversions(JCExpression ret, ProducedType exprType, ProducedType expectedType, BoxingStrategy boxingStrategy, int flags) {",REP REP REP REP DEL DEL DEL DEL DEL DEL KEEP KEEP KEEP,Add Parameter
Android: Implement game-specific settings overrides UI,"public static void launch(Context context, String menuTag, String gameId)","public static void launch(Context context, String menuTag)",KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
updates to allow for lazy communication,private void actuallyCheckBugsAgainstCloud(),"private void actuallyCheckBugsAgainstCloud(ConcurrentMap<String, BugInstance> bugsByHash)",KEEP KEEP REP DEL DEL,Remove Parameter
Always supply the savedIndexPosition for vout event from AudioService,"public static void start(Context context, String location, String title, int position, Boolean dontParse, Boolean fromStart) {","public static void start(Context context, String location, String title, Boolean dontParse, Boolean fromStart) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP,Add Parameter
Address comments.,"public void alignBeforeCall(boolean align, int prefixInstructionSize) { emitAlignmentForDirectCall(align, prefixInstructionSize); if (mitigateJCCErratum(position() + prefixInstructionSize, 5) != 0) {","public void alignBeforeCall(boolean align, int additionalInstructionSize) { emitAlignmentForDirectCall(align, additionalInstructionSize); if (mitigateJCCErratum(position() + additionalInstructionSize, 5) != 0) {",KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP,Rename Parameter
UP-1615 Updating new channel list controller to exclude root-level channels from the subscribe-type channel list and make them available to the manage-type list.  This should prevent end users from seeing root-level channels in the subscribe list while still allowing their administration.,"private Element buildRegistryDocument(Element element, ChannelCategory category, IPerson user, String type, boolean isRootCategory) {","private Element buildRegistryDocument(Element element, ChannelCategory category, IPerson user, String type) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Fix module and package doc (transform to html),public static List<String> getAuthors(Package pkg) { return getAuthors(pkg.getAnnotations());,public static List<String> getAuthors(Package module) { ArrayList<String> moduleAuthors = new ArrayList<>(); for (Annotation a : module.getAnnotations()) { if (a.getPositionalArguments() != null && !a.getPositionalArguments().isEmpty() && a.getName().equals("by")) { for (String author : a.getPositionalArguments()) { moduleAuthors.add(unquote(author)); } } } return moduleAuthors;,KEEP KEEP KEEP KEEP REP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP,Rename Parameter
modify UI to compile with TimelineEvents that have multiple types,"private EventCluster(Interval spanningInterval, Collection<EventType> types, Collection<Long> eventIDs, Collection<Long> hashHits, Collection<Long> tagged, String description, DescriptionLoD lod, EventStripe parent) { this.span = spanningInterval; this.types = ImmutableSet.copyOf( types); this.hashHits = ImmutableSet.copyOf(hashHits); this.tagged = ImmutableSet.copyOf(tagged); this.description = description; this.eventIDs = ImmutableSet.copyOf(eventIDs); this.lod = lod; this.parent = parent; } public EventCluster(Interval spanningInterval, Collection<EventType> types, Collection<Long> eventIDs, Collection<Long> hashHits, Collection<Long> tagged, String description, DescriptionLoD lod) { this(spanningInterval, types, eventIDs, hashHits, tagged, description, lod, null); } @Override public Optional<EventStripe> getParent() { return Optional.ofNullable(parent); } @Override public Optional<EventStripe> getParentStripe() { return getParent(); } public Interval getSpan() { return span; } @Override public long getStartMillis() { return span.getStartMillis(); } @Override public long getEndMillis() { return span.getEndMillis(); } @Override public ImmutableSet<Long> getEventIDs() { return eventIDs; } @Override public ImmutableSet<Long> getEventIDsWithHashHits() { return hashHits; } @Override public ImmutableSet<Long> getEventIDsWithTags() { return tagged; } @Override public String getDescription() { return description; } @Override public ImmutableCollection<EventType> getEventTypes() { return types; } @Override public DescriptionLoD getDescriptionLoD() { return lod; } public EventCluster withParent(EventStripe parent) { return new EventCluster(span, types, eventIDs, hashHits, tagged, description, lod, parent); } @Override public SortedSet<EventCluster> getClusters() { return ImmutableSortedSet.orderedBy(Comparator.comparing(EventCluster::getStartMillis)).add(this).build(); } @Override public String toString() { return ""EventCluster{"" + ""description="" + description + "", eventIDs="" + eventIDs.size() + '}'; } @Override public int hashCode() { int hash = 7; hash = 23 * hash + Objects.hashCode(this.types); hash = 23 * hash + Objects.hashCode(this.description); hash = 23 * hash + Objects.hashCode(this.lod); hash = 23 * hash + Objects.hashCode(this.eventIDs); return hash; } @Override public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } final EventCluster other = (EventCluster) obj; if (!Objects.equals(this.description, other.description)) { return false; } if (!Objects.equals(this.types, other.types)) { return false; } if (this.lod != other.lod) { return false; } return Objects.equals(this.eventIDs, other.eventIDs); }","private EventCluster(Interval spanningInterval, EventType type, Collection<Long> eventIDs, Collection<Long> hashHits, Collection<Long> tagged, String description, DescriptionLoD lod, EventStripe parent) { this.span = spanningInterval; this.type = type; this.hashHits = ImmutableSet.copyOf(hashHits); this.tagged = ImmutableSet.copyOf(tagged); this.description = description; this.eventIDs = ImmutableSet.copyOf(eventIDs); this.lod = lod; this.parent = parent; } public EventCluster(Interval spanningInterval, EventType type, Collection<Long> eventIDs, Collection<Long> hashHits, Collection<Long> tagged, String description, DescriptionLoD lod) { this(spanningInterval, type, eventIDs, hashHits, tagged, description, lod, null); } @Override public Optional<EventStripe> getParent() { return Optional.ofNullable(parent); } @Override public Optional<EventStripe> getParentStripe() { return getParent(); } public Interval getSpan() { return span; } @Override public long getStartMillis() { return span.getStartMillis(); } @Override public long getEndMillis() { return span.getEndMillis(); } @Override public ImmutableSet<Long> getEventIDs() { return eventIDs; } @Override public ImmutableSet<Long> getEventIDsWithHashHits() { return hashHits; } @Override public ImmutableSet<Long> getEventIDsWithTags() { return tagged; } @Override public String getDescription() { return description; } @Override public EventType getEventType() { return type; } @Override public DescriptionLoD getDescriptionLoD() { return lod; } public EventCluster withParent(EventStripe parent) { return new EventCluster(span, type, eventIDs, hashHits, tagged, description, lod, parent); } @Override public SortedSet<EventCluster> getClusters() { return ImmutableSortedSet.orderedBy(Comparator.comparing(EventCluster::getStartMillis)).add(this).build(); } @Override public String toString() { return ""EventCluster{"" + ""description="" + description + "", eventIDs="" + eventIDs.size() + '}'; } @Override public int hashCode() { int hash = 7; hash = 23 * hash + Objects.hashCode(this.type); hash = 23 * hash + Objects.hashCode(this.description); hash = 23 * hash + Objects.hashCode(this.lod); hash = 23 * hash + Objects.hashCode(this.eventIDs); return hash; } @Override public boolean equals(Object obj) { if (this == obj) { return true; } if (obj == null) { return false; } if (getClass() != obj.getClass()) { return false; } final EventCluster other = (EventCluster) obj; if (!Objects.equals(this.description, other.description)) { return false; } if (!Objects.equals(this.type, other.type)) { return false; } if (this.lod != other.lod) { return false; } return Objects.equals(this.eventIDs, other.eventIDs); }ename Parameter
keep specialization to RAttributable and RAttriubteStorage in ClassHierarchyNode,"@Cached(""createBinaryProfile()"") ConditionProfile attrStoraeProfile, ","protected RStringVector getClassHrAttributableInternal(RAttributable arg,  @Cached(""createClassProfile()"") ValueProfile argProfile) { RAttributable profiledArg = argProfile.profile(arg); RAttributes attributes = profiledArg.getAttributes();",REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Bug Improvements on Aggregate Graph Listener (GUI and settings),public void paintComponent(Graphics graphics) {,public void paintComponent(Graphics g) {,KEEP KEEP KEEP REP KEEP,Rename Parameter
CachedReplaceVector: handle cases where lsh == rhs,"private RAbstractVector share(RAbstractVector vector, Object value) {",private RAbstractVector share(RAbstractVector vector) {,KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"Fixed issue that was causing some Android fonts to be clipped at the bottom.  Did this by changing the font height calculation to be the font's bottom minus top value, rather than its font height.  The bottom minus top value is yields the maximum height of a font, whereas the font height is only the recommended height.  Usually these are equal, but some fonts seem to have different values here.  The problem exhibited itself most clearly with lower case 'g' and 'y'.","public ShaiForm(String fontName, Font appFont) { setToolbar(new Toolbar()); setTitle(""Test Font ""+fontName); Form prev = CN.getCurrentForm(); if (prev != null) { setBackCommand(""Back"", null, e->{ prev.showBack(); }); getToolbar().addCommandToLeftBar(""Back"", null, e->{ prev.showBack(); }); }",public ShaiForm() {,KEEP ADD ADD ADD REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Add Parameter
"rename methods, remove null check",private boolean moduleIsValid(ReportModule module) { return module.getName() != null && !module.getName().isEmpty(),private boolean validModule(ReportModule module) { return module != null && module.getName() != null && !module.getName().isEmpty(),KEEP KEEP REP KEEP KEEP KEEP DEL DEL DEL DEL KEEP KEEP KEEP KEEP KEEP,Rename Method
refactored to IChannel,"public void setStaticData (ChannelStaticData sd) throws ResourceMissingException { String allowXmlUriPrefixesParam = sd.getParameter(""upc_allow_xmlUri_prefixes""); String denyXmlUriPrefixesParam = sd.getParameter(""upc_deny_xmlUri_prefixes""); IUriScrutinizer temp = PrefixUriScrutinizer.instanceFromParameters(allowXmlUriPrefixesParam, denyXmlUriPrefixesParam); if (temp == null) { throw new IllegalArgumentException(""CGenericXSLT channel requires a non-null IUriScrutinizer""); } uriScrutinizer = temp; xmlUri = sslUri = xslTitle = xslUri = null; cacheTimeout = PropertiesManager.getPropertyAsLong(""org.jasig.portal.channels.CGenericXSLT.default_cache_timeout""); String scrutinizeXmlUriAsStaticDataString = sd.getParameter(""restrict_xmlUri_inStaticData""); boolean scrutinizeXmlUriAsStaticData = ""true"".equals(scrutinizeXmlUriAsStaticDataString); String xmlUriParam = sd.getParameter(""xmlUri""); if (scrutinizeXmlUriAsStaticData) { setXmlUri(xmlUriParam); } else { xmlUri = xmlUriParam; } sslUri = sd.getParameter(""sslUri""); xslTitle = sd.getParameter(""xslTitle""); xslUri = sd.getParameter(""xslUri""); String cacheTimeoutText = sd.getParameter(""cacheTimeout""); if (cacheTimeoutText != null) cacheTimeout = Long.parseLong(cacheTimeoutText); String connContext = sd.getParameter (""upc_localConnContext""); if (connContext != null) { try { localConnContext = (LocalConnectionContext) Class.forName(connContext).newInstance(); localConnContext.init(sd); } catch (Exception e) { log.error( ""CGenericXSLT: Cannot initialize ILocalConnectionContext: ""+connContext, e); } } params.putAll(sd); } public void setRuntimeData (ChannelRuntimeData rd) { runtimeData=rd; String xmlUri = rd.getParameter(""xmlUri""); if (xmlUri != null) setXmlUri(xmlUri); String s = rd.getParameter(""xslTitle""); if (s != null) xslTitle = s; Enumeration enum1 = rd.getParameterNames(); while (enum1.hasMoreElements()) { String n = (String)enum1.nextElement(); if (rd.getParameter(n) != null) { params.put(n,rd.getParameter(n)); } } } public void renderXML(ContentHandler out) throws PortalException { if (log.isDebugEnabled()) log.debug(this); if (params != null) { Iterator it = params.keySet().iterator(); while (it.hasNext()) { String n = (String) it.next(); if (params.get((Object) n) != null) { runtimeData.put(n, params.get((Object) n)); } } } Document xmlDoc; InputStream inputStream = null; try { DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance(); docBuilderFactory.setNamespaceAware(true); DocumentBuilder docBuilder = docBuilderFactory.newDocumentBuilder(); DTDResolver dtdResolver = new DTDResolver(); docBuilder.setEntityResolver(dtdResolver); URL url; if (localConnContext != null) url = ResourceLoader.getResourceAsURL(this.getClass(), localConnContext.getDescriptor(xmlUri, runtimeData)); else url = ResourceLoader.getResourceAsURL(this.getClass(), xmlUri); URLConnection urlConnect = url.openConnection(); if (localConnContext != null) { try { localConnContext.sendLocalData(urlConnect, runtimeData); } catch (Exception e) { log.error( ""CGenericXSLT: Unable to send data through "" + runtimeData.getParameter(""upc_localConnContext""), e); } } inputStream = urlConnect.getInputStream(); xmlDoc = docBuilder.parse(inputStream); } catch (IOException ioe) { throw new ResourceMissingException (xmlUri, """", ioe); } catch (Exception e) { throw new GeneralRenderingException(""Problem parsing "" + xmlUri , e); } finally { try { if (inputStream != null) inputStream.close(); } catch (IOException ioe) { throw new PortalException(""CGenericXSLT:renderXML():: could not close InputStream"", ioe); } } runtimeData.put(""baseActionURL"", runtimeData.getBaseActionURL()); runtimeData.put(""isRenderingAsRoot"", String.valueOf(runtimeData.isRenderingAsRoot())); runtimeData.put(""uP_productAndVersion"", Version.getProductAndVersion()); if (params != null) { Iterator it = params.keySet().iterator(); while (it.hasNext()) { String n = (String)it.next(); if (params.get((Object)n) != null) { runtimeData.put(n,params.get((Object)n)); } } } XSLT xslt = XSLT.getTransformer(this); xslt.setXML(xmlDoc); if (xslUri != null) xslt.setXSL(xslUri); else xslt.setXSL(sslUri, xslTitle, runtimeData.getBrowserInfo()); xslt.setTarget(out); xslt.setStylesheetParameters(runtimeData); xslt.transform(); } public ChannelCacheKey generateKey() { ChannelCacheKey k = new ChannelCacheKey(); k.setKey(getKey()); k.setKeyScope(ChannelCacheKey.INSTANCE_KEY_SCOPE); k.setKeyValidity(new Long(System.currentTimeMillis())); return k; } public boolean isCacheValid(Object validity) { if (!(validity instanceof Long)) return false; return (System.currentTimeMillis() - ((Long)validity).longValue() < cacheTimeout*1000); } private String getKey() { StringBuffer sbKey = new StringBuffer(1024); sbKey.append(""xmluri:"").append(xmlUri).append("", ""); sbKey.append(""sslUri:"").append(sslUri).append("", ""); String xslUriForKey = xslUri; try { if (xslUriForKey == null) { String s = ResourceLoader.getResourceAsURLString(CGenericXSLT.class, sslUri); xslUriForKey = XSLT.getStylesheetURI(s, runtimeData.getBrowserInfo()); } } catch (Exception e) { log.error(e,e); xslUriForKey = ""Not attainable: "" + e; } sbKey.append(""locales:"").append(LocaleManager.stringValueOf(runtimeData.getLocales())); sbKey.append(""xslUri:"").append(xslUriForKey).append("", ""); sbKey.append(""cacheTimeout:"").append(cacheTimeout).append("", ""); sbKey.append(""isRenderingAsRoot:"").append(runtimeData.isRenderingAsRoot()).append("", ""); if (localConnContext != null) sbKey.append(""descriptor:"").append(localConnContext.getDescriptor(xmlUri, runtimeData)).append("", ""); sbKey.append(""params:"").append(params.toString()); return sbKey.toString(); } private void setXmlUri(String xmlUriArg) { URL url = null; try { url = ResourceLoader.getResourceAsURL(this.getClass(), xmlUriArg); } catch (ResourceMissingException e) { IllegalArgumentException iae = new IllegalArgumentException(""Resource ["" + xmlUriArg + ""] missing."",e); throw iae; } String urlString = url.toExternalForm(); try { uriScrutinizer.scrutinize(new URI(urlString)); }catch (URISyntaxException e1) { throw new IllegalArgumentException(""xmlUri ["" + xmlUriArg + ""] resolved to a URI with bad syntax."",e1); } xmlUri = xmlUriArg; } public String toString() { StringBuffer str = new StringBuffer(); str.append(""xmlUri = ""+xmlUri+""\n""); str.append(""xslUri = ""+xslUri+""\n""); str.append(""sslUri = ""+sslUri+""\n""); str.append(""xslTitle = ""+xslTitle+""\n""); if (params != null) { str.append(""params = ""+params.toString()+""\n""); } return str.toString(); } }","public void setStaticData (ChannelStaticData sd, String uid) throws ResourceMissingException { String allowXmlUriPrefixesParam = sd.getParameter(""upc_allow_xmlUri_prefixes""); String denyXmlUriPrefixesParam = sd.getParameter(""upc_deny_xmlUri_prefixes""); IUriScrutinizer uriScrutinizer = PrefixUriScrutinizer.instanceFromParameters(allowXmlUriPrefixesParam, denyXmlUriPrefixesParam); CState state = new CState(uriScrutinizer); String scrutinizeXmlUriAsStaticDataString = sd.getParameter(""restrict_xmlUri_inStaticData""); boolean scrutinizeXmlUriAsStaticData = ""true"".equals(scrutinizeXmlUriAsStaticDataString); String xmlUriParam = sd.getParameter(""xmlUri""); if (scrutinizeXmlUriAsStaticData) { state.setXmlUri(xmlUriParam); } else { state.xmlUri = xmlUriParam; } state.sslUri = sd.getParameter(""sslUri""); state.xslTitle = sd.getParameter(""xslTitle""); state.xslUri = sd.getParameter(""xslUri""); String cacheTimeout = sd.getParameter(""cacheTimeout""); if (cacheTimeout != null) state.cacheTimeout = Long.parseLong(cacheTimeout); String connContext = sd.getParameter (""upc_localConnContext""); if (connContext != null) { try { state.localConnContext = (LocalConnectionContext) Class.forName(connContext).newInstance(); state.localConnContext.init(sd); } catch (Exception e) { log.error( ""CGenericXSLT: Cannot initialize ILocalConnectionContext: "", e); } } state.params.putAll(sd); stateTable.put(uid,state); } public void setRuntimeData (ChannelRuntimeData rd, String uid) { CState state = (CState)stateTable.get(uid); if (state == null){ log.debug(""CGenericXSLT:setRuntimeData() : no entry in state for uid=\""""+uid+""\""""); } else { state.runtimeData=rd; String xmlUri = rd.getParameter(""xmlUri""); if (xmlUri != null) state.setXmlUri(xmlUri); String xslTitle = rd.getParameter(""xslTitle""); if (xslTitle != null) state.xslTitle = xslTitle; Enumeration enum1 = rd.getParameterNames(); while (enum1.hasMoreElements()) { String n = (String)enum1.nextElement(); if (rd.getParameter(n) != null) { state.params.put(n,rd.getParameter(n)); } } } } public void receiveEvent (PortalEvent ev, String uid) { if (ev.getEventNumber() == PortalEvent.SESSION_DONE) { stateTable.remove(uid); } } public ChannelRuntimeProperties getRuntimeProperties (String uid) { ChannelRuntimeProperties rp=new ChannelRuntimeProperties(); if (stateTable.get(uid) == null) { rp.setWillRender(false); log.debug(""CGenericXSLT:getRuntimeProperties() : no entry in state for uid=\""""+uid+""\""""); } return rp; } public void renderXML(ContentHandler out,String uid) throws PortalException { CState state=(CState)stateTable.get(uidemove Parameter
Attribute updates may involve copying of the updated data structure.,"private RAbstractContainer updateNames(RAbstractContainer container, Object o) {","private void updateNames(RAbstractContainer container, Object o) {",KEEP REP KEEP KEEP KEEP KEEP KEEP,Change Return Type
fail fast when sqlite connection is used from bad thread,"private static SQLiteStatement stmt(final int connectionPtr, final int pointer) { connection(connectionPtr);",private static SQLiteStatement stmt(final int pointer) {,KEEP KEEP KEEP KEEP KEEP ADD ADD ADD KEEP KEEP ADD,Add Parameter
SONAR-16397 Add DB migration to migrate rule descriptions to new structure,"private void assertRuleDescriptionCreated(String uuid, String description1) { Map<String, Object> result1 = findRuleSectionDescription(uuid);","private void assertRuleDescriptionCreated(String uuid1, String description1) { Map<String, Object> result1 = findRuleSectionDescription(uuid1);",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Add segment lineage based segment selector (#5728),"RoutingEntry(String tableNameWithType, SegmentPreSelector segmentPreSelector, SegmentSelector segmentSelector, List<SegmentPruner> segmentPruners, InstanceSelector instanceSelector, int lastUpdateExternalViewVersion,","RoutingEntry(String tableNameWithType, SegmentSelector segmentSelector, List<SegmentPruner> segmentPruners, InstanceSelector instanceSelector, int lastUpdateExternalViewVersion,",KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Add Parameter
Additional API for Scene.,public abstract SceneComponent translate(Vector3 point);,public abstract SceneComponent translate(Vector3 howMuch);,KEEP KEEP KEEP KEEP REP,Rename Parameter
Fix Background is not available in "touches actor or object","public void renameSpriteAndUpdateCollisionFormulas(String newSpriteName, Scene scene) { if (hasCollision(scene)) { renameSpriteInCollisionFormulas(newSpriteName, scene);",public boolean hasCollision() {,KEEP ADD ADD ADD REP REP KEEP ADD ADD ADD ADD ADD,Change Return Type
Rework API of BackgroundWorker for new screens #1498,"protected LocalizedTaskWrapper(BackgroundTask<T, V> wrappedTask, Screen screen) { super(wrappedTask.getTimeoutSeconds(), screen);","protected LocalizedTaskWrapper(BackgroundTask<T, V> wrappedTask, Window window) { super(wrappedTask.getTimeoutSeconds(), window);",KEEP KEEP KEEP KEEP REP REP KEEP KEEP REP,Rename Parameter
"get 'interactive' correct, echo input when no system console, unify -e/-f options with console","public static MaterializedFrame initialize(String[] commandArgs, ConsoleHandler consoleHandler, boolean crashOnFatalErrorArg, boolean interactive) {","public static MaterializedFrame initialize(String[] commandArgs, ConsoleHandler consoleHandler, boolean crashOnFatalErrorArg, boolean headless) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP,Rename Parameter
Some tweaks to the periodic publisher.,private void drain() {,private void tryDrain() {,KEEP KEEP REP KEEP,Rename Method
Hide extra empty kind editor on compact contact editor,"boolean showOneEmptyEditor, ViewIdGenerator vig) {","public void setState(DataKind kind, RawContactDelta state, boolean readOnly, ViewIdGenerator vig) {",DEL DEL DEL DEL DEL DEL KEEP REP KEEP KEEP KEEP,Add Parameter
bug fix,"public Item(String signature, FieldAnnotation f, int fieldLoadedFromRegister) { this.signature = signature; field = f; if (f != null) xfield = XFactory.createXField(f); this.fieldLoadedFromRegister = fieldLoadedFromRegister;","public Item(String signature, FieldAnnotation f, int reg) { this.signature = signature; field = f; if (f != null) xfield = XFactory.createXField(f); registerNumber = reg; } public Item(Item it) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP REP DEL DEL DEL DEL DEL,Rename Parameter
Add tests with intermediate.,"protected NamedRootNode(String name, FrameDescriptor parentFrameDescriptor) {",protected NamedRootNode(String name) {,KEEP KEEP ADD ADD REP KEEP,Add Parameter
Did a little more work on computing exception types on,"private ExceptionSet computeExceptionTypes(BasicBlock basicBlock, TypeFrame result)","private void computeExceptionTypes(BasicBlock basicBlock, TypeFrame result)",KEEP REP KEEP KEEP KEEP KEEP,Change Return Type
SONARJAVA-2429 S4034 Add simplification for anyMatch (#1860),"protected void onMethodInvocationFound(MethodInvocationTree mit) { String methodName = mit.symbol().name(); if (methodName.equals(""isPresent"")) { handleIsPresent(mit); } else if (methodName.equals(""anyMatch"")) { handleAnyMatch(mit); } } private void handleAnyMatch(MethodInvocationTree anyMatchMIT) { ExpressionTree predicate = anyMatchMIT.arguments().get(0); IdentifierTree reportTree = MethodsHelper.methodName(anyMatchMIT); if (anyMatchMIT.parent().is(Tree.Kind.LOGICAL_COMPLEMENT)) { if (predicate.is(Tree.Kind.LAMBDA_EXPRESSION) && ((LambdaExpressionTree) predicate).body().is(Tree.Kind.LOGICAL_COMPLEMENT)) { context.reportIssue(this, reportTree, ""Replace this double negation with \""allMatch()\"" and positive predicate.""); } else { context.reportIssue(this, reportTree, ""Replace this negation and \""anyMatch()\"" with \""noneMatch()\"".""); } } if (predicate.is(Tree.Kind.METHOD_REFERENCE) && isBooleanValueReference((MethodReferenceTree) predicate)) { previousMITInChain(anyMatchMIT) .filter(MAP_METHODS::anyMatch) .ifPresent(mapMIT -> context.reportIssue(this, reportTree, ""Use mapper from \""map()\"" directly as predicate in \""anyMatch()\""."")); } } private static boolean isBooleanValueReference(MethodReferenceTree predicate) { return BOOLEAN_VALUE.matches(predicate.method().symbol()); } private void handleIsPresent(MethodInvocationTree isPresentMIT) {",protected void onMethodInvocationFound(MethodInvocationTree isPresentMIT) {,KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP,Rename Parameter
Fix warning "An illegal reflective access operation has occurred" (closes #920),"public static List<Method> getMethods(Class type, String name, Class<?>... parameterTypes) { List<Method> methodList = new LinkedList<>();","public static Optional<Method> getMethod(Class type, String name, Class<?>... parameterTypes) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD,Change Return Type
remove all methods from Chunk superclass,"public StringPoolChunk(ByteBuffer buffer, int offset) { super(buffer, offset); stringsStart = super.buffer.getInt(offset + OFFSET_STRING_START);","public StringPoolChunk(ByteBuffer buffer, int chunkStartPosition) { super(buffer, chunkStartPosition); stringsStart = super.buffer.getInt(getChunkStart() + OFFSET_STRING_START);",KEEP KEEP KEEP KEEP REP KEEP KEEP REP KEEP KEEP REP KEEP KEEP,Rename Parameter
Made it easier to override XML content JSON renderer for the purpose of,"protected SimpleEntry<String, Object> renderField(Field field) throws JSONException {","protected void renderField(Field field, JSONObject result) throws JSONException {",KEEP ADD REP KEEP REP DEL DEL KEEP KEEP KEEP,Change Return Type
Fixed use of file ID,"MboxParser(IngestServices services, String localPath) {","MboxParser(IngestServices services, String localPath, long fileID) {",KEEP KEEP KEEP REP DEL DEL KEEP,Remove Parameter
5187 enforce checkboxes,private LogicalImagerRuleSet getRuleSetFromCurrentConfig() {,private LogicalImagerRuleSet getFirstRuleSet() {,KEEP KEEP REP KEEP,Rename Method
use MethodHandle to access vectorized unsigned comparison on JDK9+ (#7487),"public static int compare(byte[] left, byte[] right) { return compare(left, 0, left.length, right, 0, right.length); } public static int compare(byte[] left, int leftFromIndex, int leftToIndex, byte[] right, int rightFromIndex, int rightToIndex) { if (COMPARE_UNSIGNED != null) { try { return (int) COMPARE_UNSIGNED.invokeExact(left, leftFromIndex, leftToIndex, right, rightFromIndex, rightToIndex); } catch (ArrayIndexOutOfBoundsException outOfBounds) { throw outOfBounds; } catch (Throwable ignore) { } } return compareFallback(left, leftFromIndex, leftToIndex, right, rightFromIndex, rightToIndex); } private static int compareFallback(byte[] left, int leftFromIndex, int leftToIndex, byte[] right, int rightFromIndex, int rightToIndex) { int len1 = leftToIndex - leftFromIndex; int len2 = rightToIndex - rightFromIndex;","public static int compare(byte[] bytes1, byte[] bytes2) { int len1 = bytes1.length; int len2 = bytes2.length;",KEEP KEEP KEEP KEEP REP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP ADD ADD REP KEEP KEEP KEEP ADD ADD REP,Rename Parameter
Remove DISABLED/PARTITIONED db locks and host rejoin EUCA-12216 EUCA-12217,public boolean apply( Host coordinator ) { if ( coordinator != null && ( coordinator.isLocalHost( ) || coordinator.hasBootstrapped( ) ) ) { LOG.info( "Found system view with database: " + coordinator ); return false;,public boolean apply( Host c ) { if ( c != null && ( c.isLocalHost( ) || c.hasBootstrapped( ) ) ) { LOG.info( "Found system view with database: " + c ); long now = System.currentTimeMillis( ); long coordTime = c.getStartedTime( ); long earliestJoin = coordTime + ( REJOIN_BACKOFF_SECS * 5L * 1000L ); if ( now > earliestJoin ) { return false; } else { try { LOG.info( "Waiting for system view to settle till " + earliestJoin + " for coordinator " + coordTime + " (" + ( earliestJoin - now ) / 1000l + " secs)." ); TimeUnit.SECONDS.sleep( REJOIN_BACKOFF_SECS ); } catch ( InterruptedException ex ) { Exceptions.maybeInterrupted( ex ); } return true; }ename Parameter
"rewriten SetDiffFastPath, IsElementFastPath, Unique and MaterializeNode to use VectorDataLibrary","protected RStringVector doUniqueCachedString(RStringVector vec, byte incomparables, byte fromLast, int nmax, @CachedLibrary(""vec.getData()"") VectorDataLibrary vecLib) { Object vecData = vec.getData(); int vecLength = vecLib.getLength(vecData); reportWork(vecLength); if (bigProfile.profile(vecLength * (long) vecLength > BIG_THRESHOLD)) { NonRecursiveHashSet<String> set = new NonRecursiveHashSet<>(vecLength); String[] data = new String[vecLength];","protected RStringVector doUniqueCachedString(RStringVector vecIn, byte incomparables, byte fromLast, int nmax, @Cached(""vecIn.getClass()"") Class<? extends RStringVector> vecClass) { RStringVector vec = vecClass.cast(vecIn); reportWork(vec.getLength()); if (bigProfile.profile(vec.getLength() * (long) vec.getLength() > BIG_THRESHOLD)) { NonRecursiveHashSet<String> set = new NonRecursiveHashSet<>(vec.getLength()); String[] data = new String[vec.getLength()];",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP REP REP REP REP REP REP REP KEEP REP REP KEEP REP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Update InstrumentingClassLoader.java,public boolean isStatic() {,public boolean getIsStatic() {,KEEP KEEP REP KEEP,Rename Method
Updated for 1.1 protocol,"public BootstrapIdentificationMessage(int id, String name, long seed, int mode, int dimension, int difficulty, int worldHeight, int maxPlayers, String worldType) {","public BootstrapIdentificationMessage(int id, String name, long seed, int mode, int dimension, int difficulty, int worldHeight, int maxPlayers) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
use bounded placeholder from context in method return type,"public static Map<GenericsType.GenericsTypeName, GenericsType> extractPlaceholders(final ClassNode type) { Map<GenericsType.GenericsTypeName, GenericsType> placeholders = new HashMap<>(); extractPlaceholders(type, placeholders); return placeholders;","public static Map<GenericsType.GenericsTypeName, GenericsType> extractPlaceholders(ClassNode cn) { Map<GenericsType.GenericsTypeName, GenericsType> ret = new HashMap<>(); extractPlaceholders(cn, ret); return ret;",KEEP KEEP KEEP KEEP ADD REP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP REP KEEP REP,Rename Parameter
remove dead parms on private methods,"private boolean listAppliesTo(Iterator<Cell> iter, List<ByteBuffer> elements)","private boolean listAppliesTo(CFMetaData cfm, Iterator<Cell> iter, List<ByteBuffer> elements)",KEEP KEEP REP DEL DEL KEEP KEEP KEEP,Remove Parameter
Responsive datagrid,"protected void encodeData(FacesContext context, DataGrid grid) throws IOException {","protected void encodeTable(FacesContext context, DataGrid grid) throws IOException {",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP,Rename Method
Replace exposed fest-reflect usages with vanilla java reflection,"public static <R> R directlyOn(Object shadowedObject, String clazzName, String methodName, ClassParameter... paramValues) { try { Class<Object> aClass = (Class<Object>) shadowedObject.getClass().getClassLoader().loadClass(clazzName); return directlyOn(shadowedObject, aClass, methodName, paramValues); } catch (ClassNotFoundException e) { throw new RuntimeException(e); }","public static <T> Invoker directlyOn(Object shadowedObject, String clazzName, String methodName, Class<?>... paramTypes) {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Change Return Type
Fix ActOn Job,"List<ValueData> profiles, BufferedWriter out) throws IOException, ParseException { for (ValueData object : profiles) { Map<String, ValueData> profile = ((MapValueData)object).getAll(); ValueData user = profile.get(ReadBasedMetric.ID); boolean isActive = activeUsers.contains(user); List<ValueData> stat = getUsersStatistics(user.getAsString()); if (stat.isEmpty()) { MapValueData valueData = MapValueData.DEFAULT; writeStatistics(out, valueData.getAll(), profile, isActive); } else { MapValueData valueData = (MapValueData)stat.get(0); writeStatistics(out, valueData.getAll(), profile, isActive);","List<ValueData> usersStatistics, BufferedWriter out) throws IOException { for (ValueData object : usersStatistics) { Map<String, ValueData> stat = ((MapValueData)object).getAll(); ValueData userEmail = stat.get(UsersStatisticsList.USER); boolean isActive = activeUsers.contains(userEmail); Context.Builder builder = new Context.Builder(); builder.put(MetricFilter.USER, userEmail.getAsString()); Metric metric = MetricFactory.getMetric(MetricType.USERS_PROFILES_LIST); ListValueData list = ValueDataUtil.getAsList(metric, builder.build()); MapValueData profile = list.size() == 0 ? MapValueData.DEFAULT : (MapValueData)list.getAll().get(0); if (profile != null) { writeStatistics(out, stat, profile.getAll(), isActive);",KEEP REP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP REP KEEP KEEP KEEP REP REP REP KEEP REP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP KEEP REP REP REP REP REP REP REP REP REP REP REP REP KEEP REP REP KEEP,Rename Parameter
LayeredLayout api changes.  Rippling through to SPlitPane.,"public LayeredLayoutConstraint translatePixels(int x, int y, boolean preferMM, Container parent) {","public LayeredLayoutConstraint translatePixels(int x, int y, boolean preferMM, Component cmp) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
"add follow up flag image to follow up action and in group list , improve category ""icons""; cleanup toolbar labels to match group labels",public Node getGraphic() { return attr.getGraphicForValue(val);,public Image getIcon() { return attr.getIconForValue(val);,KEEP REP REP KEEP KEEP REP,Change Return Type
Backport CASSANDRA-6747,"public int addCallback(IAsyncCallback cb, MessageOut message, InetAddress to, long timeout, boolean failureCallback)","public int addCallback(IAsyncCallback cb, MessageOut message, InetAddress to, long timeout)",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP,Add Parameter
fix for WICKET-1438 (page.onDetach results in error in RequestCycle.detach()),protected void onAfterRender(),protected void onDetach(),KEEP KEEP REP,Rename Method
[kotlin-spring] Adding DocumentationProvider and SwaggerUI (#12184),public boolean getUseSwaggerUI() { return this.useSwaggerUI;,public boolean getSwaggerAnnotations() { return this.swaggerAnnotations;,KEEP KEEP REP KEEP KEEP REP,Rename Method
some cleanup and fixes in TrigExpFunctions,@Specialization protected RDoubleVector trigOp(RDoubleVector vector) { controlVisibility(); int length = vector.getLength(); double[] resultVector = new double[length];,"protected RDoubleVector doFunForDoubleVector(RDoubleVector vector, MathCall1 mathCall) { final int length = vector.getLength(); final double[] resultVector = new double[length];",ADD KEEP KEEP REP REP DEL DEL KEEP REP KEEP KEEP KEEP KEEP DEL KEEP KEEP KEEP KEEP KEEP,Remove Parameter
Avoid passing graph down to Itinerary mappers,public GraphPath createDirectGraphPath(,public Itinerary createDirectItinerary(,KEEP REP REP,Change Return Type
Changing FragmentTransactionImpl to return 'this' instead of 'null' from builder methods.,"public FragmentTransaction replace(int i, Fragment fragment, String tag) { remove(fragment); add(i, fragment, tag); return this;","public FragmentTransaction replace(int i, Fragment fragment, String s) { return null;",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD KEEP REP,Rename Parameter
fix thread safety issue with nested column global dictionaries (#13265),"public static <T> Supplier<FixedIndexed<T>> read(ByteBuffer bb, TypeStrategy<T> strategy, ByteOrder byteOrder, int width)","public static <T> FixedIndexed<T> read(ByteBuffer bb, TypeStrategy<T> strategy, ByteOrder byteOrder, int width)",KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Convert android module ContactsAnalyzer SEVERE log msg to WARNING,"private static void findContactsInDB(String databasePath, AbstractFile f) {","private static void findContactsInDB(String DatabasePath, AbstractFile f) {",KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
rework RCaller into hierarchical representation of context nesting,"public Object eval(RExpression exprs, REnvironment envir, RCaller caller) {","public Object eval(RExpression exprs, REnvironment envir, int depth) {",KEEP KEEP KEEP KEEP KEEP KEEP REP REP KEEP,Rename Parameter
Make sure we don't return jars from other modules in case of duplicate package,"public void addJar(ArtifactResult artifact, Module module, boolean skipContents) { jars.addJar(artifact, module, skipContents);","public void addJar(ArtifactResult artifact, boolean skipContents) { jars.addJar(artifact, skipContents);",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP ADD KEEP,Add Parameter
"Fixed issue with fillShape() threshing the GC on iOS.  This commit is minimal, simply changing the hash for a shape from a String into a long because creating the string hashes for shapes ended up being very memory intensive.  The long hash may need to be refined as is is possible that there may be collisions as I haven't rigorously analyzed the distribution of the hashing algorithm.  This mostly corrects the memory issue.  Memory will still grow slightly, mostly due to allocations of rectangles used for obtaining the bounds of shapes during painting.","long getShapeID(Shape shape, Stroke stroke){ long id = 0; float x = 0; float y = 0; boolean referencePointSet = false; int ctr = 0;","String getShapeID(Shape shape, Stroke stroke){ float[] bounds = shape.getBounds2D(); float x = bounds[0]; float y = bounds[1]; StringBuilder sb = new StringBuilder();",REP KEEP KEEP KEEP KEEP REP REP KEEP REP KEEP KEEP KEEP REP KEEP KEEP KEEP REP REP REP KEEP ADD ADD ADD REP REP,Change Return Type
Fix #4843: Upload allowTypes must also check contentType. (#5108),"private static boolean isValidFileName(FileUpload fileUpload, SingleUploadedFile uploadedFile) throws ScriptException { String allowTypesRegex = fileUpload.getAllowTypes(); if (!LangUtils.isValueBlank(allowTypesRegex)) {","private static boolean isValidFileName(FileUpload fileUpload, String fileName) throws ScriptException { String fileNameRegex = fileUpload.getAllowTypes(); if (!LangUtils.isValueBlank(fileNameRegex)) {",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP REP KEEP,Rename Parameter
implement ignoreCase for grep,"protected void findAllMatches(boolean[] result, String pattern, RAbstractStringVector vector, boolean fixed, boolean ignoreCase) {","protected void findAllMatches(boolean[] result, String pattern, RAbstractStringVector vector, boolean fixed) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
Separate response headers from the data,"protected String getResponseHeaders( HttpURLConnection conn) throws IOException { StringBuffer headerBuf = new StringBuffer(); headerBuf.append(conn.getHeaderField(0).substring(0, 8)); headerBuf.append("" ""); headerBuf.append(conn.getResponseCode()); headerBuf.append("" ""); headerBuf.append(conn.getResponseMessage()); headerBuf.append(""\n""); for (int i = 1; conn.getHeaderFieldKey(i) != null; i++) { if (!conn  .getHeaderFieldKey(i) .equalsIgnoreCase(""transfer-encoding"")) { headerBuf.append(conn.getHeaderFieldKey(i)); headerBuf.append("": ""); headerBuf.append(conn.getHeaderField(i)); headerBuf.append(""\n""); } } return headerBuf.toString(); }","protected byte[] getResponseHeaders( HttpURLConnection conn, SampleResult res) throws IOException { StringBuffer headerBuf = new StringBuffer(); headerBuf.append(conn.getHeaderField(0).substring(0, 8)); headerBuf.append("" ""); headerBuf.append(conn.getResponseCode()); headerBuf.append("" ""); headerBuf.append(conn.getResponseMessage()); headerBuf.append(""\n""); for (int i = 1; conn.getHeaderFieldKey(i) != null; i++) { if (!conn .getHeaderFieldKey(i) .equalsIgnoreCase(""transfer-encoding"")) { headerBuf.append(conn.getHeaderFieldKey(i)); headerBuf.append("": ""); headerBuf.append(conn.getHeaderField(i)); headerBuf.append(""\n""); } } headerBuf.append(""\n""); return headerBuf.toString().getBytes(""8859_1""); }",KEEP REP KEEP KEEP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP DEL KEEP REP KEEP,Change Return Type
Check Window flags when selecting root view in LocalUiController. #6741,private View getTopMostViewRootExcluding(int prohibitedFlags) {,private View getViewRoot() {,KEEP KEEP ADD REP KEEP,Add Parameter
"Thread-safe directlyOn(), with warnings in case of bad use.","public String generateMethodBody(CtClass ctClass, CtMethod ctMethod, CtClass returnCtClass, Type returnType, boolean isStatic) throws NotFoundException {","public String generateMethodBody(CtClass ctClass, CtMethod ctMethod, CtClass returnCtClass, Type returnType, boolean aStatic) throws NotFoundException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Decompose flush to send a limit amount of data + Swap buffer,public boolean update() {,public void update() { long start = System.nanoTime();,KEEP REP KEEP KEEP DEL DEL DEL DEL,Change Return Type
[Java] Fix MessageTrackingService state management to avoid non-determinism + verify that the state of all the services is the same + check states after snapshot restore.,"final TestCluster cluster, final int excludeIndex, final int messageCount)","private static void assertTrackedMessages(final TestCluster cluster, final int messageCount)",REP REP REP REP REP REP KEEP KEEP KEEP,Add Parameter
"Utilising more modern Java, simplifying code and formatting code and comments",public void unregister(Stoppable stoppableToUnregister) { stoppables.removeIf(stoppable -> stoppable == stoppableToUnregister);,public void unregister(Stoppable stoppable) { for (Iterator<Stoppable> iterator = stoppables .iterator(); iterator.hasNext();) { Stoppable stopable = iterator.next(); if(stopable == stoppable) { iterator.remove(); } },KEEP KEEP KEEP REP KEEP REP REP REP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL KEEP REP DEL DEL DEL DEL,Rename Parameter
2011.08.26 (1.45n6),void addImage(boolean createImageRoi) {,void addImage() {,KEEP ADD REP KEEP,Add Parameter
Move group id to StreamConfig level (#3425),"int numDataReplicas, Map<String, String> streamConfig,","int numDataReplicas, Map<String, String> streamProviderConfig,",KEEP KEEP KEEP KEEP REP,Rename Parameter
Refactor predicate evaluation and fix bug in NOT IN for multivalued columns,PredicateEvaluator evaluator) {,"public ScanBasedMultiValueDocIdSet(BlockValSet blockValSet, BlockMetadata blockMetadata, int... dictIds) {",REP REP DEL DEL DEL DEL DEL KEEP,Rename Parameter
Made edge highlighting in Android behave closer to the way it does in the native Android 4 OS,"private void updateTensileHighlightIntensity(int lastScroll, int scroll, boolean motion) {",private void updateTensileHighlightIntensity() {,KEEP KEEP ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Enhanced raw index readers/writers to support uncompressed data. (#2204),public static ChunkDecompressor getDecompressor(CompressionType compressionType) { switch (compressionType) { case PASS_THROUGH: return new PassThroughDecompressor();,public static ChunkDecompressor getDecompressor(String deCompressor) { switch (deCompressor.toUpperCase()) {,KEEP KEEP KEEP REP REP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD,Rename Parameter
refactor: Restrict API Resource assess by introducing OtpServerContext,public Response health(@Context OtpServerContext serverContext) { GraphUpdaterManager updaterManager = serverContext.transitModel().getUpdaterManager();,public Response health(@Context OTPServer otpServer) { GraphUpdaterManager updaterManager = otpServer.getRouter().transitModel().getUpdaterManager();,KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP,Rename Parameter
Changed moveNode() method,"public boolean moveNode ( ILayoutNodeId nodeId, ILayoutNodeId parentId, INodeId nextId ); public boolean moveNode ( ILayoutNodeId nodeId, IFragmentNodeId parentId, INodeId nextId ); public boolean moveNode ( IFragmentNodeId nodeId, ILayoutNodeId parentId, INodeId nextId ); public boolean moveNode ( IFragmentNodeId nodeId, IFragmentNodeId parentId, INodeId nextId );","public ILayoutNode moveNode ( ILayoutNodeId nodeId, ILayoutNodeId parentId, INodeId nextId ); public ILayoutNode moveNode ( ILayoutNodeId nodeId, IFragmentNodeId parentId, INodeId nextId ); public ILayoutNode moveNode ( IFragmentNodeId nodeId, ILayoutNodeId parentId, INodeId nextId ); public ILayoutNode moveNode ( IFragmentNodeId nodeId, IFragmentNodeId parentId, INodeId nextId );",KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
Name refactor,public String getCommand() { return command;,public String getActionExpressionString() { return actionExpressionString;,KEEP KEEP REP KEEP KEEP REP,Rename Method
Fixed #2399,"protected void encodeOption(FacesContext context, SelectOneMenu menu, SelectItem option, Object values, Object submittedValues, Converter converter, int itemIndex) throws IOException {","protected void encodeOption(FacesContext context, SelectOneMenu menu, SelectItem option, Object values, Object submittedValues, Converter converter) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP,Add Parameter
Re-enable invokedynamic mode.,Class<? extends ShadowFactory<?>> shadowFactoryClass) {,ShadowFactory<?> factory) {,ADD ADD REP REP KEEP,Rename Parameter
Do not load read meters for offline operations,void setup(boolean isOffline),void setup(),KEEP ADD REP,Add Parameter
"Merge -c 1488806 from trunk to branch-2 to fix YARN-749. Rename ResourceRequest.(get,set)HostName to ResourceRequest.(get,set)ResourceName. Contributed by Arun C. Murthy.",public abstract void setResourceName(String resourceName);,public abstract void setHostName(String hostName);,KEEP KEEP KEEP REP REP,Rename Parameter
Custom content support for autocomplete,"protected void encodeSuggestionsAsTable(FacesContext context, AutoComplete ac, List items, Converter converter) throws IOException { ResponseWriter writer = context.getResponseWriter();","protected void encodeSuggestionsAsTable(FacesContext context, AutoComplete ac, List items) throws IOException {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP ADD ADD ADD ADD,Add Parameter
A commit that adds spout player positional saving.,private static CompoundTag saveEntity(SpoutEntity e) { if (((!e.getController().isSavable() || (e.isDead()))) && (!(e instanceof SpoutPlayer))) {,private static Tag saveEntity(SpoutEntity e) { if (!e.getController().isSavable() || e.isDead()) {,KEEP KEEP REP KEEP KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD REP KEEP,Change Return Type
TE: Adding default value for window delay unit when a function is updated (#600),Set<MergedAnomalyResultDTO> existingResults) {,private void updateMergedScoreAndPersist(MergedAnomalyResultDTO mergedResult) {,REP REP DEL DEL KEEP,Add Parameter
PropertyNode should be enriched to support getter/setter names (closes #1370),"private static void wrapSetterMethod(ClassNode classNode, PropertyNode propertyNode) { String getterName = propertyNode.getGetterName(); MethodNode setter = classNode.getSetterMethod(propertyNode.getSetterName());","private static void wrapSetterMethod(ClassNode classNode, String propertyName) { String getterName = ""get"" + capitalize(propertyName); MethodNode setter = classNode.getSetterMethod(getSetterName(propertyName));",KEEP KEEP KEEP KEEP KEEP REP REP KEEP KEEP KEEP KEEP REP DEL DEL KEEP KEEP KEEP REP,Rename Parameter
Fix isAssertQuery in unit test on LMP,static CPOWrapper buildAssertVersion(long version) {,static ContentProviderOperation buildAssertVersion(long version) {,KEEP REP KEEP KEEP KEEP,Change Return Type
Now erasing to List instead of Iterable (#584),boolean willEraseToList(ProducedType type) { return typeFact().getNonemptyListType(typeFact().getDefiniteType(type)) != null;,boolean willEraseToIterable(ProducedType type) { return typeFact().getNonemptyIterableType(typeFact().getDefiniteType(type)) != null;,KEEP REP KEEP KEEP KEEP REP KEEP KEEP,Rename Method
refactor other occurance panel for intracase correlation,"private Map<UniquePathKey,CorrelationAttributeInstance> getCorrelatedInstances(CorrelationAttribute corAttr, String dataSourceName, String deviceId) {","private Map<ArtifactKey, CorrelationAttributeInstance> getCorrelatedInstances(CorrelationAttribute corAttr, String dataSourceName, String deviceId) {",KEEP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
BUG 57346 Summariser : The + (difference) reports show wrong elapsed time and throughput,"private static String format(String name, SummariserRunningSample summariserRunningSample, String type) {","private static String format(String name, SummariserRunningSample s, String type) {",KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
Initial drop in of AutoComplete reimpl as a native PrimeFaces Widget,"public void decode(FacesContext context, UIComponent component) {","public void decode(FacesContext facesContext, UIComponent component) {",KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
First cut at saving Solr core metadata in SolrCore.properties file,"Index(String indexPath, String solrVersion, String schemaVersion, String coreName, String caseName) {","Index(String indexPath, String solrVersion, String schemaVersion) {",KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD REP KEEP,Add Parameter
Implement new ML playlist APIs,"public static Playlist getAbstractPlaylist(long id, String name, int trackCount, long duration, int nbVideo, int nbAudio, int nbUnknown) {","public static Playlist getAbstractPlaylist(long id, String name, int trackCount) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD REP KEEP,Add Parameter
Remove unnecessary calculate layout API from InternalNode,"private static void setDirection(ComponentContext c, InternalNode node, YogaDirection direction) {","private static void setDirection(InternalNode node, YogaDirection direction) {",KEEP KEEP KEEP ADD ADD REP KEEP KEEP KEEP KEEP,Add Parameter
Back out "Uses render unit it to unmount instead of render tree node",private void unmountItemRecursively(RenderTreeNode renderTreeNode) { final MountItem item = mIdToMountedItemMap.get(renderTreeNode.getRenderUnit().getId());,private void unmountItemRecursively(final long id) { final MountItem item = mIdToMountedItemMap.get(id);,KEEP KEEP REP REP DEL KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Implemented new materials system! Thanks in large part due to contributions,"public boolean setBlockMaterial(int x, int y, int z, BlockMaterial material, short data, boolean updatePhysics, Source source) {","@Override public boolean setBlockMaterial(int x, int y, int z, BlockMaterial material, boolean updatePhysics, Source source) { if (material == null) { throw new NullPointerException(""Material can not be null"");",DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP KEEP DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL DEL,Add Parameter
Replace partition ranges with partitions (#3725),public boolean equals(Object obj) { if (this == obj) {,"public boolean equals(Object o) { if (EqualityUtils.isSameReference(this, o)) {",KEEP KEEP KEEP REP KEEP KEEP ADD REP REP KEEP,Rename Parameter
SONARJAVA-70 Ignore deprecated API (#1337),"private void visitNode(Tree tree, Tree reportTree, SymbolMetadata symbolMetadata) { if (!isExcluded(tree, symbolMetadata)) {","private void visitNode(Tree tree, Tree reportTree) { if (!isExcluded(tree)) {",KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP KEEP ADD REP KEEP,Add Parameter
Bug HTTP(S) Test Script Recorder : Make it populate HTTP Authorisation Manager ,"public void addAuth(Authorization newAuthorization) { boolean alreadyExists=false; PropertyIterator iter = getAuthObjects().iterator(); while (iter.hasNext()) { Authorization authorization = (Authorization) iter.next().getObjectValue(); if (authorization == null) { continue; } if (match(authorization,newAuthorization)) { if (log.isDebugEnabled()) { log.debug(""Found the same Authorization object:"" + newAuthorization.toString()); } alreadyExists=true; break; } } if(!alreadyExists){ getAuthObjects().addItem(newAuthorization); }",public void addAuth(Authorization auth) { getAuthObjects().addItem(auth);,KEEP KEEP KEEP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD REP,Rename Parameter
Update ComponentHost pool size to 0,"ComponentContext wrappedContext, ComponentLifecycle lifecycle) { if (lifecycle.poolSize() == 0) { return null; }","ComponentContext wrappedContext, int typeId) {",KEEP KEEP REP REP KEEP ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Reverted code to retry solr core open,"private Core openCore(Case theCase, Index index) throws KeywordSearchModuleException { try { if (theCase.getCaseType() == CaseType.SINGLE_USER_CASE) { currentSolrServer = this.localSolrServer; } else { String host = UserPreferences.getIndexingServerHost(); String port = UserPreferences.getIndexingServerPort(); currentSolrServer = new HttpSolrServer(""http: } connectToSolrServer(currentSolrServer); } catch (SolrServerException | IOException ex) { throw new KeywordSearchModuleException(NbBundle.getMessage(Server.class, ""Server.connect.exception.msg"", ex.getLocalizedMessage()), ex); }","private Core openCore(CaseType caseType, Index index) throws KeywordSearchModuleException {",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD,Rename Parameter
Refactoring. Lucene query syntax replaced by subclase of Condition.,"public void addFields(Document document, DecoratedKey partitionKey, ByteBuffer clusteringKey) { ByteBuffer fullKey = byteBuffer(partitionKey, clusteringKey); Field field = new StringField(FIELD_NAME, ByteBufferUtils.toString(fullKey), Store.NO);","public void addFields(Document document, DecoratedKey partitionKey, ByteBuffer name) { ByteBuffer fullKey = type.builder().add(partitionKey.key).add(name).build(); Field field = new StringField(FIELD_NAME, ByteBufferUtils.toString(fullKey), Store.YES);",KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP KEEP ADD REP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
Re-enable the java aquery tests.,protected void runGenqueryScopeTest(boolean isPostAnalysisQuery) throws Exception {,protected void runGenqueryScopeTest(boolean isCquery) throws Exception {,KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
use ISO for formatting methods; restrict upto/downto args to same type,"public static TemporalAmount rightShift(final Temporal self, Temporal other) { if (!self.getClass().equals(other.getClass())) { throw new GroovyRuntimeException(""Temporal arguments must be of the same type.""); } switch ((ChronoUnit) defaultUnitFor(self)) { case YEARS: return DefaultGroovyStaticMethods.between(null, (Year) self, (Year) other); case MONTHS: return DefaultGroovyStaticMethods.between(null, (YearMonth) self, (YearMonth) other); case DAYS: return ChronoPeriod.between((ChronoLocalDate) self, (ChronoLocalDate) other); default: return Duration.between(self, other); }","public static Duration rightShift(final Temporal self, Temporal other) { return Duration.between(self, other);",KEEP KEEP REP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD ADD KEEP KEEP ADD,Change Return Type
Submission through Participate is extremely slow with large database.  Additional cleanup.,"public List<Item> findAllByCrfVersionId(Integer crfVersionId) { String query = ""select distinct i.* from item i, item_form_metadata ifm "" + ""where i.item_id= ifm.item_id "" + ""and ifm.crf_version_id=?"";","public List<Item> findAllByCrfId(Integer crfId) { String query = ""select distinct i.* from item i, item_form_metadata ifm,crf_version cv "" + ""where i.item_id= ifm.item_id "" + ""and ifm.crf_version_id=cv.crf_version_id "" + ""and cv.crf_id=?"";",KEEP KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP DEL DEL DEL DEL,Rename Parameter
#4257,"protected void addMessage(Messages uiMessages, FacesMessage message, Map<String, List<FacesMessage>> messagesBySeverity, String severity) {","protected void addMessage(Messages uiMessages, FacesMessage message, Map<String, List<FacesMessage>> messagesMap, String severity) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP KEEP KEEP KEEP,Rename Parameter
wire seen by other examiners check box,public ReadOnlyBooleanProperty seenProperty() { return seen.getReadOnlyProperty();,public ReadOnlyBooleanWrapper seenProperty() { return seen;,KEEP REP KEEP KEEP KEEP REP,Change Return Type
BookmarkQuery,public List<String> bookmarks(String query) { return SerializerUtil.serializeBookmarkList(myCollection.bookmarks( SerializerUtil.deserializeBookmarkQuery(query),"public List<String> bookmarksForBook(String book, long fromId, int limitCount) { return SerializerUtil.serializeBookmarkList(myCollection.bookmarksForBook( SerializerUtil.deserializeBook(book), fromId, limitCount",KEEP KEEP REP REP DEL DEL DEL DEL KEEP KEEP REP REP DEL DEL,Rename Parameter
add horiz split pane to timeline,final JSplitPane splitYPane) {,"private void runJavaFxThread(final JPanel chartJPanel, final JPanel viewerJPanel, final JSplitPane splitPane) {",DEL DEL DEL DEL DEL KEEP DEL DEL DEL KEEP REP KEEP,Rename Parameter
Fix the bugfix,public ImmutableList<E> tail() {,public AbstractImmutableList<E> tail() {,KEEP REP KEEP KEEP,Change Return Type
Validate API change. Allow to return valid factory from Factory validator. It will remove double factory parsing,"public Factory validate(URI factoryUrl, HttpServletRequest request) throws FactoryUrlException {","public void validateUrl(URI factoryUrl, HttpServletRequest request) throws FactoryUrlException {",KEEP REP REP KEEP KEEP KEEP KEEP KEEP KEEP,Change Return Type
SONARJAVA-2067 Use behaviors for Objects.isNull and nonNull methods (#1196),private static boolean isObjectsEqualsMethod(Symbol symbol) { return symbol.isMethodSymbol() && symbol.owner().type().is("java.util.Objects") && "equals".equals(symbol.name());,"private static boolean isObjectsMethod(Symbol symbol, String methodName) { return symbol.isMethodSymbol() && symbol.owner().type().is(""java.util.Objects"") && methodName.equals(symbol.name());",KEEP KEEP KEEP REP REP DEL DEL KEEP KEEP KEEP KEEP KEEP KEEP REP,Remove Parameter
options moving to the new style dialog part,"FontOption(Context context, ZLResource resource, String resourceKey, ZLStringOption option, boolean includeDummyValue) {","FontOption(Context context, ZLResource resource, String resourceKey, ZLStringOption option) {",KEEP KEEP KEEP KEEP KEEP KEEP KEEP ADD ADD REP KEEP,Add Parameter
"rename getParameterValues to getDefaultParameterValues, change from RNodes to constants",public Object[] getDefaultParameterValues() { return EMPTY_OBJECT_ARRAY;,public RNode[] getParameterValues() { return RNode.EMTPY_RNODE_ARRAY;,KEEP REP REP KEEP KEEP REP,Change Return Type
fix VariableTypeInferenceFilter for non-strict,"public ApplyTypeCheck2(Sort sort, boolean hasCastAlready, boolean strictSortEquality, boolean addCast) {","public ApplyTypeCheck2(Sort sort, boolean strictSortEquality, boolean addCast) {",KEEP KEEP KEEP KEEP ADD ADD KEEP KEEP KEEP KEEP,Add Parameter
"Added relative and absolute path functionality to StaticImage, and in the process, factored out Packages from Classes in wicket.util.lang.","public static StaticImageResource get(final Package basePackage, final String path,","public static StaticImageResource get(final Package basePackage, final String resourcePath,",KEEP KEEP KEEP KEEP KEEP KEEP KEEP KEEP REP,Rename Parameter
